{"version":3,"sources":["node_modules/sweetalert2/dist/sweetalert2.all.js","src/app/layouts/auth-layout/auth-layout.component.ts","src/app/layouts/auth-layout/auth-layout.component.html","node_modules/@angular/forms/fesm2022/forms.mjs","src/app/auth/login/login.component.ts","src/app/auth/login/login.component.html","src/environments/environment.development.ts","src/app/services/auth.service.ts","src/app/auth/recovery/recovery.component.ts","src/app/auth/recovery/recovery.component.html","src/app/auth/registro/registro.component.ts","src/app/auth/registro/registro.component.html","src/app/auth/inicio/inicio.component.ts","src/app/auth/inicio/inicio.component.html","src/app/auth/auth.routing.ts","src/app/guards/auth.guard.ts","src/app/pages/centros/centros.component.ts","src/app/pages/centros/centros.component.html","src/app/services/sidebar.service.ts","src/app/commons/sidebar/sidebar.component.ts","src/app/commons/sidebar/sidebar.component.html","src/app/commons/navbar/navbar.component.ts","src/app/commons/navbar/navbar.component.html","src/app/layouts/admin-layout/admin-layout.component.ts","src/app/layouts/admin-layout/admin-layout.component.html","src/app/pages/admin/crear-alumnos/crear-alumnos.component.ts","src/app/pages/admin/crear-alumnos/crear-alumnos.component.html","src/app/services/alumnos.service.ts","src/app/pages/admin/crear-centros/crear-centros.component.ts","src/app/pages/admin/crear-centros/crear-centros.component.html","src/app/services/centros.service.ts","src/app/pages/admin/crear-clases/crear-clases.component.ts","src/app/pages/admin/crear-clases/crear-clases.component.html","src/app/services/clases.service.ts","src/app/pages/admin/crear-profesores/crear-profesores.component.ts","src/app/pages/admin/crear-profesores/crear-profesores.component.html","src/app/services/profesores.service.ts","src/app/pages/admin/ver-alumnos/ver-alumnos.component.ts","src/app/pages/admin/ver-alumnos/ver-alumnos.component.html","src/app/pages/admin/ver-centros/ver-centros.component.ts","src/app/pages/admin/ver-centros/ver-centros.component.html","src/app/pages/admin/ver-clases/ver-clases.component.ts","src/app/pages/admin/ver-clases/ver-clases.component.html","src/app/pages/admin/ver-profesores/ver-profesores.component.ts","src/app/pages/admin/ver-profesores/ver-profesores.component.html","src/app/pages/admin/admindashboard/admindashboard.component.ts","src/app/pages/admin/admindashboard/admindashboard.component.html","src/app/pages/centros/ver-alumnos-c/ver-alumnos-c.component.ts","src/app/pages/centros/ver-alumnos-c/ver-alumnos-c.component.html","src/app/pages/centros/ver-profesores-c/ver-profesores-c.component.ts","src/app/pages/centros/ver-profesores-c/ver-profesores-c.component.html","src/app/pages/centros/ver-clases-c/ver-clases-c.component.ts","src/app/pages/centros/ver-clases-c/ver-clases-c.component.html","src/app/pages/centros/crear-alumnos-c/crear-alumnos-c.component.ts","src/app/pages/centros/crear-alumnos-c/crear-alumnos-c.component.html","src/app/pages/centros/crear-profesores-c/crear-profesores-c.component.ts","src/app/pages/centros/crear-profesores-c/crear-profesores-c.component.html","src/app/pages/centros/crear-clases-c/crear-clases-c.component.ts","src/app/pages/centros/crear-clases-c/crear-clases-c.component.html","src/app/pages/admin/editar-alumnos/editar-alumnos.component.ts","src/app/pages/admin/editar-alumnos/editar-alumnos.component.html","src/app/pages/admin/editar-centros/editar-centros.component.ts","src/app/pages/admin/editar-centros/editar-centros.component.html","src/app/pages/admin/editar-clases/editar-clases.component.ts","src/app/pages/admin/editar-clases/editar-clases.component.html","src/app/pages/admin/editar-profesores/editar-profesores.component.ts","src/app/pages/admin/editar-profesores/editar-profesores.component.html","src/app/pages/profesores/profesores.component.ts","src/app/pages/profesores/profesores.component.html","src/app/pages/profesores/ver-clases-p/ver-clases-p.component.ts","src/app/pages/profesores/ver-clases-p/ver-clases-p.component.html","src/app/pages/profesores/ver-perfil-alumno/ver-perfil-alumno.component.ts","src/app/pages/profesores/ver-perfil-alumno/ver-perfil-alumno.component.html","src/app/pages/profesores/actividad-reciente/actividad-reciente.component.ts","src/app/pages/profesores/actividad-reciente/actividad-reciente.component.html","src/app/pages/profesores/ver-alumnos-p/ver-alumnos-p.component.ts","src/app/pages/profesores/ver-alumnos-p/ver-alumnos-p.component.html","src/app/pages/centros/editar-alumnos-c/editar-alumnos-c.component.ts","src/app/pages/centros/editar-alumnos-c/editar-alumnos-c.component.html","src/app/pages/centros/editar-profesores-c/editar-profesores-c.component.ts","src/app/pages/centros/editar-profesores-c/editar-profesores-c.component.html","src/app/pages/centros/editar-clases-c/editar-clases-c.component.ts","src/app/pages/centros/editar-clases-c/editar-clases-c.component.html","src/app/layouts/alumno-layout/alumno-layout.component.ts","src/app/layouts/alumno-layout/alumno-layout.component.html","src/app/pages/alumnos/alumnos.component.ts","src/app/pages/alumnos/alumnos.component.html","src/app/pages/pages.routing.ts","node_modules/@angular/cdk/fesm2022/coercion.mjs","node_modules/@angular/cdk/fesm2022/platform.mjs","node_modules/@angular/cdk/fesm2022/bidi.mjs","node_modules/@angular/cdk/fesm2022/scrolling.mjs","node_modules/@angular/cdk/fesm2022/layout.mjs","node_modules/@angular/cdk/fesm2022/a11y.mjs","node_modules/@angular/cdk/fesm2022/cdk.mjs","node_modules/@angular/material/fesm2022/core.mjs","node_modules/@angular/material/fesm2022/sidenav.mjs","src/app/app-routing.module.ts","src/app/app.component.ts","src/app/app.component.html","src/app/commons/commons.module.ts","src/app/pages/pages.module.ts","src/app/auth/auth.module.ts","src/app/app.module.ts","src/app/app.module.server.ts"],"sourcesContent":["/*!\n* sweetalert2 v11.10.1\n* Released under the MIT License.\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Sweetalert2 = factory());\n})(this, function () {\n  'use strict';\n\n  function _iterableToArrayLimit(r, l) {\n    var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n    if (null != t) {\n      var e,\n        n,\n        i,\n        u,\n        a = [],\n        f = !0,\n        o = !1;\n      try {\n        if (i = (t = t.call(r)).next, 0 === l) {\n          if (Object(t) !== t) return;\n          f = !1;\n        } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n      } catch (r) {\n        o = !0, n = r;\n      } finally {\n        try {\n          if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;\n        } finally {\n          if (o) throw n;\n        }\n      }\n      return a;\n    }\n  }\n  function _typeof(o) {\n    \"@babel/helpers - typeof\";\n\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n      return typeof o;\n    } : function (o) {\n      return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n  }\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n  }\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    Object.defineProperty(subClass, \"prototype\", {\n      writable: false\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n  }\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n    return _setPrototypeOf(o, p);\n  }\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  function _construct(Parent, args, Class) {\n    if (_isNativeReflectConstruct()) {\n      _construct = Reflect.construct.bind();\n    } else {\n      _construct = function _construct(Parent, args, Class) {\n        var a = [null];\n        a.push.apply(a, args);\n        var Constructor = Function.bind.apply(Parent, a);\n        var instance = new Constructor();\n        if (Class) _setPrototypeOf(instance, Class.prototype);\n        return instance;\n      };\n    }\n    return _construct.apply(null, arguments);\n  }\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n  }\n  function _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n      return call;\n    } else if (call !== void 0) {\n      throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n    return _assertThisInitialized(self);\n  }\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n      var Super = _getPrototypeOf(Derived),\n        result;\n      if (hasNativeReflectConstruct) {\n        var NewTarget = _getPrototypeOf(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return _possibleConstructorReturn(this, result);\n    };\n  }\n  function _superPropBase(object, property) {\n    while (!Object.prototype.hasOwnProperty.call(object, property)) {\n      object = _getPrototypeOf(object);\n      if (object === null) break;\n    }\n    return object;\n  }\n  function _get() {\n    if (typeof Reflect !== \"undefined\" && Reflect.get) {\n      _get = Reflect.get.bind();\n    } else {\n      _get = function _get(target, property, receiver) {\n        var base = _superPropBase(target, property);\n        if (!base) return;\n        var desc = Object.getOwnPropertyDescriptor(base, property);\n        if (desc.get) {\n          return desc.get.call(arguments.length < 3 ? target : receiver);\n        }\n        return desc.value;\n      };\n    }\n    return _get.apply(this, arguments);\n  }\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n  }\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  function _toPrimitive(input, hint) {\n    if (typeof input !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n      var res = prim.call(input, hint || \"default\");\n      if (typeof res !== \"object\") return res;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n  }\n  function _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return typeof key === \"symbol\" ? key : String(key);\n  }\n  function _classPrivateFieldGet(receiver, privateMap) {\n    var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\");\n    return _classApplyDescriptorGet(receiver, descriptor);\n  }\n  function _classPrivateFieldSet(receiver, privateMap, value) {\n    var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\");\n    _classApplyDescriptorSet(receiver, descriptor, value);\n    return value;\n  }\n  function _classExtractFieldDescriptor(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) {\n      throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n  }\n  function _classApplyDescriptorGet(receiver, descriptor) {\n    if (descriptor.get) {\n      return descriptor.get.call(receiver);\n    }\n    return descriptor.value;\n  }\n  function _classApplyDescriptorSet(receiver, descriptor, value) {\n    if (descriptor.set) {\n      descriptor.set.call(receiver, value);\n    } else {\n      if (!descriptor.writable) {\n        throw new TypeError(\"attempted to set read only private field\");\n      }\n      descriptor.value = value;\n    }\n  }\n  function _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n      throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n  }\n  function _classPrivateFieldInitSpec(obj, privateMap, value) {\n    _checkPrivateRedeclaration(obj, privateMap);\n    privateMap.set(obj, value);\n  }\n  var RESTORE_FOCUS_TIMEOUT = 100;\n\n  /** @type {GlobalState} */\n  var globalState = {};\n  var focusPreviousActiveElement = function focusPreviousActiveElement() {\n    if (globalState.previousActiveElement instanceof HTMLElement) {\n      globalState.previousActiveElement.focus();\n      globalState.previousActiveElement = null;\n    } else if (document.body) {\n      document.body.focus();\n    }\n  };\n\n  /**\n   * Restore previous active (focused) element\n   *\n   * @param {boolean} returnFocus\n   * @returns {Promise<void>}\n   */\n  var restoreActiveElement = function restoreActiveElement(returnFocus) {\n    return new Promise(function (resolve) {\n      if (!returnFocus) {\n        return resolve();\n      }\n      var x = window.scrollX;\n      var y = window.scrollY;\n      globalState.restoreFocusTimeout = setTimeout(function () {\n        focusPreviousActiveElement();\n        resolve();\n      }, RESTORE_FOCUS_TIMEOUT); // issues/900\n\n      window.scrollTo(x, y);\n    });\n  };\n  var swalPrefix = 'swal2-';\n\n  /**\n   * @typedef\n   * { | 'container'\n   *   | 'shown'\n   *   | 'height-auto'\n   *   | 'iosfix'\n   *   | 'popup'\n   *   | 'modal'\n   *   | 'no-backdrop'\n   *   | 'no-transition'\n   *   | 'toast'\n   *   | 'toast-shown'\n   *   | 'show'\n   *   | 'hide'\n   *   | 'close'\n   *   | 'title'\n   *   | 'html-container'\n   *   | 'actions'\n   *   | 'confirm'\n   *   | 'deny'\n   *   | 'cancel'\n   *   | 'default-outline'\n   *   | 'footer'\n   *   | 'icon'\n   *   | 'icon-content'\n   *   | 'image'\n   *   | 'input'\n   *   | 'file'\n   *   | 'range'\n   *   | 'select'\n   *   | 'radio'\n   *   | 'checkbox'\n   *   | 'label'\n   *   | 'textarea'\n   *   | 'inputerror'\n   *   | 'input-label'\n   *   | 'validation-message'\n   *   | 'progress-steps'\n   *   | 'active-progress-step'\n   *   | 'progress-step'\n   *   | 'progress-step-line'\n   *   | 'loader'\n   *   | 'loading'\n   *   | 'styled'\n   *   | 'top'\n   *   | 'top-start'\n   *   | 'top-end'\n   *   | 'top-left'\n   *   | 'top-right'\n   *   | 'center'\n   *   | 'center-start'\n   *   | 'center-end'\n   *   | 'center-left'\n   *   | 'center-right'\n   *   | 'bottom'\n   *   | 'bottom-start'\n   *   | 'bottom-end'\n   *   | 'bottom-left'\n   *   | 'bottom-right'\n   *   | 'grow-row'\n   *   | 'grow-column'\n   *   | 'grow-fullscreen'\n   *   | 'rtl'\n   *   | 'timer-progress-bar'\n   *   | 'timer-progress-bar-container'\n   *   | 'scrollbar-measure'\n   *   | 'icon-success'\n   *   | 'icon-warning'\n   *   | 'icon-info'\n   *   | 'icon-question'\n   *   | 'icon-error'\n   * } SwalClass\n   * @typedef {Record<SwalClass, string>} SwalClasses\n   */\n\n  /**\n   * @typedef {'success' | 'warning' | 'info' | 'question' | 'error'} SwalIcon\n   * @typedef {Record<SwalIcon, string>} SwalIcons\n   */\n\n  /** @type {SwalClass[]} */\n  var classNames = ['container', 'shown', 'height-auto', 'iosfix', 'popup', 'modal', 'no-backdrop', 'no-transition', 'toast', 'toast-shown', 'show', 'hide', 'close', 'title', 'html-container', 'actions', 'confirm', 'deny', 'cancel', 'default-outline', 'footer', 'icon', 'icon-content', 'image', 'input', 'file', 'range', 'select', 'radio', 'checkbox', 'label', 'textarea', 'inputerror', 'input-label', 'validation-message', 'progress-steps', 'active-progress-step', 'progress-step', 'progress-step-line', 'loader', 'loading', 'styled', 'top', 'top-start', 'top-end', 'top-left', 'top-right', 'center', 'center-start', 'center-end', 'center-left', 'center-right', 'bottom', 'bottom-start', 'bottom-end', 'bottom-left', 'bottom-right', 'grow-row', 'grow-column', 'grow-fullscreen', 'rtl', 'timer-progress-bar', 'timer-progress-bar-container', 'scrollbar-measure', 'icon-success', 'icon-warning', 'icon-info', 'icon-question', 'icon-error'];\n  var swalClasses = classNames.reduce(function (acc, className) {\n    acc[className] = swalPrefix + className;\n    return acc;\n  }, /** @type {SwalClasses} */{});\n\n  /** @type {SwalIcon[]} */\n  var icons = ['success', 'warning', 'info', 'question', 'error'];\n  var iconTypes = icons.reduce(function (acc, icon) {\n    acc[icon] = swalPrefix + icon;\n    return acc;\n  }, /** @type {SwalIcons} */{});\n  var consolePrefix = 'SweetAlert2:';\n\n  /**\n   * Capitalize the first letter of a string\n   *\n   * @param {string} str\n   * @returns {string}\n   */\n  var capitalizeFirstLetter = function capitalizeFirstLetter(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  /**\n   * Standardize console warnings\n   *\n   * @param {string | string[]} message\n   */\n  var warn = function warn(message) {\n    console.warn(\"\".concat(consolePrefix, \" \").concat(_typeof(message) === 'object' ? message.join(' ') : message));\n  };\n\n  /**\n   * Standardize console errors\n   *\n   * @param {string} message\n   */\n  var error = function error(message) {\n    console.error(\"\".concat(consolePrefix, \" \").concat(message));\n  };\n\n  /**\n   * Private global state for `warnOnce`\n   *\n   * @type {string[]}\n   * @private\n   */\n  var previousWarnOnceMessages = [];\n\n  /**\n   * Show a console warning, but only if it hasn't already been shown\n   *\n   * @param {string} message\n   */\n  var warnOnce = function warnOnce(message) {\n    if (!previousWarnOnceMessages.includes(message)) {\n      previousWarnOnceMessages.push(message);\n      warn(message);\n    }\n  };\n\n  /**\n   * Show a one-time console warning about deprecated params/methods\n   *\n   * @param {string} deprecatedParam\n   * @param {string} useInstead\n   */\n  var warnAboutDeprecation = function warnAboutDeprecation(deprecatedParam, useInstead) {\n    warnOnce(\"\\\"\".concat(deprecatedParam, \"\\\" is deprecated and will be removed in the next major release. Please use \\\"\").concat(useInstead, \"\\\" instead.\"));\n  };\n\n  /**\n   * If `arg` is a function, call it (with no arguments or context) and return the result.\n   * Otherwise, just pass the value through\n   *\n   * @param {Function | any} arg\n   * @returns {any}\n   */\n  var callIfFunction = function callIfFunction(arg) {\n    return typeof arg === 'function' ? arg() : arg;\n  };\n\n  /**\n   * @param {any} arg\n   * @returns {boolean}\n   */\n  var hasToPromiseFn = function hasToPromiseFn(arg) {\n    return arg && typeof arg.toPromise === 'function';\n  };\n\n  /**\n   * @param {any} arg\n   * @returns {Promise<any>}\n   */\n  var asPromise = function asPromise(arg) {\n    return hasToPromiseFn(arg) ? arg.toPromise() : Promise.resolve(arg);\n  };\n\n  /**\n   * @param {any} arg\n   * @returns {boolean}\n   */\n  var isPromise = function isPromise(arg) {\n    return arg && Promise.resolve(arg) === arg;\n  };\n\n  /**\n   * Gets the popup container which contains the backdrop and the popup itself.\n   *\n   * @returns {HTMLElement | null}\n   */\n  var getContainer = function getContainer() {\n    return document.body.querySelector(\".\".concat(swalClasses.container));\n  };\n\n  /**\n   * @param {string} selectorString\n   * @returns {HTMLElement | null}\n   */\n  var elementBySelector = function elementBySelector(selectorString) {\n    var container = getContainer();\n    return container ? container.querySelector(selectorString) : null;\n  };\n\n  /**\n   * @param {string} className\n   * @returns {HTMLElement | null}\n   */\n  var elementByClass = function elementByClass(className) {\n    return elementBySelector(\".\".concat(className));\n  };\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  var getPopup = function getPopup() {\n    return elementByClass(swalClasses.popup);\n  };\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  var getIcon = function getIcon() {\n    return elementByClass(swalClasses.icon);\n  };\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  var getIconContent = function getIconContent() {\n    return elementByClass(swalClasses['icon-content']);\n  };\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  var getTitle = function getTitle() {\n    return elementByClass(swalClasses.title);\n  };\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  var getHtmlContainer = function getHtmlContainer() {\n    return elementByClass(swalClasses['html-container']);\n  };\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  var getImage = function getImage() {\n    return elementByClass(swalClasses.image);\n  };\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  var getProgressSteps = function getProgressSteps() {\n    return elementByClass(swalClasses['progress-steps']);\n  };\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  var getValidationMessage = function getValidationMessage() {\n    return elementByClass(swalClasses['validation-message']);\n  };\n\n  /**\n   * @returns {HTMLButtonElement | null}\n   */\n  var getConfirmButton = function getConfirmButton() {\n    return (/** @type {HTMLButtonElement} */elementBySelector(\".\".concat(swalClasses.actions, \" .\").concat(swalClasses.confirm))\n    );\n  };\n\n  /**\n   * @returns {HTMLButtonElement | null}\n   */\n  var getCancelButton = function getCancelButton() {\n    return (/** @type {HTMLButtonElement} */elementBySelector(\".\".concat(swalClasses.actions, \" .\").concat(swalClasses.cancel))\n    );\n  };\n\n  /**\n   * @returns {HTMLButtonElement | null}\n   */\n  var getDenyButton = function getDenyButton() {\n    return (/** @type {HTMLButtonElement} */elementBySelector(\".\".concat(swalClasses.actions, \" .\").concat(swalClasses.deny))\n    );\n  };\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  var getInputLabel = function getInputLabel() {\n    return elementByClass(swalClasses['input-label']);\n  };\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  var getLoader = function getLoader() {\n    return elementBySelector(\".\".concat(swalClasses.loader));\n  };\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  var getActions = function getActions() {\n    return elementByClass(swalClasses.actions);\n  };\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  var getFooter = function getFooter() {\n    return elementByClass(swalClasses.footer);\n  };\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  var getTimerProgressBar = function getTimerProgressBar() {\n    return elementByClass(swalClasses['timer-progress-bar']);\n  };\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  var getCloseButton = function getCloseButton() {\n    return elementByClass(swalClasses.close);\n  };\n\n  // https://github.com/jkup/focusable/blob/master/index.js\n  var focusable = \"\\n  a[href],\\n  area[href],\\n  input:not([disabled]),\\n  select:not([disabled]),\\n  textarea:not([disabled]),\\n  button:not([disabled]),\\n  iframe,\\n  object,\\n  embed,\\n  [tabindex=\\\"0\\\"],\\n  [contenteditable],\\n  audio[controls],\\n  video[controls],\\n  summary\\n\";\n  /**\n   * @returns {HTMLElement[]}\n   */\n  var getFocusableElements = function getFocusableElements() {\n    var popup = getPopup();\n    if (!popup) {\n      return [];\n    }\n    /** @type {NodeListOf<HTMLElement>} */\n    var focusableElementsWithTabindex = popup.querySelectorAll('[tabindex]:not([tabindex=\"-1\"]):not([tabindex=\"0\"])');\n    var focusableElementsWithTabindexSorted = Array.from(focusableElementsWithTabindex)\n    // sort according to tabindex\n    .sort(function (a, b) {\n      var tabindexA = parseInt(a.getAttribute('tabindex') || '0');\n      var tabindexB = parseInt(b.getAttribute('tabindex') || '0');\n      if (tabindexA > tabindexB) {\n        return 1;\n      } else if (tabindexA < tabindexB) {\n        return -1;\n      }\n      return 0;\n    });\n\n    /** @type {NodeListOf<HTMLElement>} */\n    var otherFocusableElements = popup.querySelectorAll(focusable);\n    var otherFocusableElementsFiltered = Array.from(otherFocusableElements).filter(function (el) {\n      return el.getAttribute('tabindex') !== '-1';\n    });\n    return _toConsumableArray(new Set(focusableElementsWithTabindexSorted.concat(otherFocusableElementsFiltered))).filter(function (el) {\n      return isVisible$1(el);\n    });\n  };\n\n  /**\n   * @returns {boolean}\n   */\n  var isModal = function isModal() {\n    return hasClass(document.body, swalClasses.shown) && !hasClass(document.body, swalClasses['toast-shown']) && !hasClass(document.body, swalClasses['no-backdrop']);\n  };\n\n  /**\n   * @returns {boolean}\n   */\n  var isToast = function isToast() {\n    var popup = getPopup();\n    if (!popup) {\n      return false;\n    }\n    return hasClass(popup, swalClasses.toast);\n  };\n\n  /**\n   * @returns {boolean}\n   */\n  var isLoading = function isLoading() {\n    var popup = getPopup();\n    if (!popup) {\n      return false;\n    }\n    return popup.hasAttribute('data-loading');\n  };\n\n  /**\n   * Securely set innerHTML of an element\n   * https://github.com/sweetalert2/sweetalert2/issues/1926\n   *\n   * @param {HTMLElement} elem\n   * @param {string} html\n   */\n  var setInnerHtml = function setInnerHtml(elem, html) {\n    elem.textContent = '';\n    if (html) {\n      var parser = new DOMParser();\n      var parsed = parser.parseFromString(html, \"text/html\");\n      var head = parsed.querySelector('head');\n      head && Array.from(head.childNodes).forEach(function (child) {\n        elem.appendChild(child);\n      });\n      var body = parsed.querySelector('body');\n      body && Array.from(body.childNodes).forEach(function (child) {\n        if (child instanceof HTMLVideoElement || child instanceof HTMLAudioElement) {\n          elem.appendChild(child.cloneNode(true)); // https://github.com/sweetalert2/sweetalert2/issues/2507\n        } else {\n          elem.appendChild(child);\n        }\n      });\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {string} className\n   * @returns {boolean}\n   */\n  var hasClass = function hasClass(elem, className) {\n    if (!className) {\n      return false;\n    }\n    var classList = className.split(/\\s+/);\n    for (var i = 0; i < classList.length; i++) {\n      if (!elem.classList.contains(classList[i])) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {SweetAlertOptions} params\n   */\n  var removeCustomClasses = function removeCustomClasses(elem, params) {\n    Array.from(elem.classList).forEach(function (className) {\n      if (!Object.values(swalClasses).includes(className) && !Object.values(iconTypes).includes(className) && !Object.values(params.showClass || {}).includes(className)) {\n        elem.classList.remove(className);\n      }\n    });\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {SweetAlertOptions} params\n   * @param {string} className\n   */\n  var applyCustomClass = function applyCustomClass(elem, params, className) {\n    removeCustomClasses(elem, params);\n    if (params.customClass && params.customClass[className]) {\n      if (typeof params.customClass[className] !== 'string' && !params.customClass[className].forEach) {\n        warn(\"Invalid type of customClass.\".concat(className, \"! Expected string or iterable object, got \\\"\").concat(_typeof(params.customClass[className]), \"\\\"\"));\n        return;\n      }\n      addClass(elem, params.customClass[className]);\n    }\n  };\n\n  /**\n   * @param {HTMLElement} popup\n   * @param {import('./renderers/renderInput').InputClass | SweetAlertInput} inputClass\n   * @returns {HTMLInputElement | null}\n   */\n  var getInput$1 = function getInput(popup, inputClass) {\n    if (!inputClass) {\n      return null;\n    }\n    switch (inputClass) {\n      case 'select':\n      case 'textarea':\n      case 'file':\n        return popup.querySelector(\".\".concat(swalClasses.popup, \" > .\").concat(swalClasses[inputClass]));\n      case 'checkbox':\n        return popup.querySelector(\".\".concat(swalClasses.popup, \" > .\").concat(swalClasses.checkbox, \" input\"));\n      case 'radio':\n        return popup.querySelector(\".\".concat(swalClasses.popup, \" > .\").concat(swalClasses.radio, \" input:checked\")) || popup.querySelector(\".\".concat(swalClasses.popup, \" > .\").concat(swalClasses.radio, \" input:first-child\"));\n      case 'range':\n        return popup.querySelector(\".\".concat(swalClasses.popup, \" > .\").concat(swalClasses.range, \" input\"));\n      default:\n        return popup.querySelector(\".\".concat(swalClasses.popup, \" > .\").concat(swalClasses.input));\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement} input\n   */\n  var focusInput = function focusInput(input) {\n    input.focus();\n\n    // place cursor at end of text in text input\n    if (input.type !== 'file') {\n      // http://stackoverflow.com/a/2345915\n      var val = input.value;\n      input.value = '';\n      input.value = val;\n    }\n  };\n\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[] | undefined} classList\n   * @param {boolean} condition\n   */\n  var toggleClass = function toggleClass(target, classList, condition) {\n    if (!target || !classList) {\n      return;\n    }\n    if (typeof classList === 'string') {\n      classList = classList.split(/\\s+/).filter(Boolean);\n    }\n    classList.forEach(function (className) {\n      if (Array.isArray(target)) {\n        target.forEach(function (elem) {\n          condition ? elem.classList.add(className) : elem.classList.remove(className);\n        });\n      } else {\n        condition ? target.classList.add(className) : target.classList.remove(className);\n      }\n    });\n  };\n\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[] | undefined} classList\n   */\n  var addClass = function addClass(target, classList) {\n    toggleClass(target, classList, true);\n  };\n\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[] | undefined} classList\n   */\n  var removeClass = function removeClass(target, classList) {\n    toggleClass(target, classList, false);\n  };\n\n  /**\n   * Get direct child of an element by class name\n   *\n   * @param {HTMLElement} elem\n   * @param {string} className\n   * @returns {HTMLElement | undefined}\n   */\n  var getDirectChildByClass = function getDirectChildByClass(elem, className) {\n    var children = Array.from(elem.children);\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      if (child instanceof HTMLElement && hasClass(child, className)) {\n        return child;\n      }\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {string} property\n   * @param {*} value\n   */\n  var applyNumericalStyle = function applyNumericalStyle(elem, property, value) {\n    if (value === \"\".concat(parseInt(value))) {\n      value = parseInt(value);\n    }\n    if (value || parseInt(value) === 0) {\n      elem.style[property] = typeof value === 'number' ? \"\".concat(value, \"px\") : value;\n    } else {\n      elem.style.removeProperty(property);\n    }\n  };\n\n  /**\n   * @param {HTMLElement | null} elem\n   * @param {string} display\n   */\n  var show = function show(elem) {\n    var display = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'flex';\n    elem && (elem.style.display = display);\n  };\n\n  /**\n   * @param {HTMLElement | null} elem\n   */\n  var hide = function hide(elem) {\n    elem && (elem.style.display = 'none');\n  };\n\n  /**\n   * @param {HTMLElement | null} elem\n   * @param {string} display\n   */\n  var showWhenInnerHtmlPresent = function showWhenInnerHtmlPresent(elem) {\n    var display = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'block';\n    if (!elem) {\n      return;\n    }\n    new MutationObserver(function () {\n      toggle(elem, elem.innerHTML, display);\n    }).observe(elem, {\n      childList: true,\n      subtree: true\n    });\n  };\n\n  /**\n   * @param {HTMLElement} parent\n   * @param {string} selector\n   * @param {string} property\n   * @param {string} value\n   */\n  var setStyle = function setStyle(parent, selector, property, value) {\n    /** @type {HTMLElement} */\n    var el = parent.querySelector(selector);\n    if (el) {\n      el.style[property] = value;\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {any} condition\n   * @param {string} display\n   */\n  var toggle = function toggle(elem, condition) {\n    var display = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'flex';\n    condition ? show(elem, display) : hide(elem);\n  };\n\n  /**\n   * borrowed from jquery $(elem).is(':visible') implementation\n   *\n   * @param {HTMLElement | null} elem\n   * @returns {boolean}\n   */\n  var isVisible$1 = function isVisible(elem) {\n    return !!(elem && (elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length));\n  };\n\n  /**\n   * @returns {boolean}\n   */\n  var allButtonsAreHidden = function allButtonsAreHidden() {\n    return !isVisible$1(getConfirmButton()) && !isVisible$1(getDenyButton()) && !isVisible$1(getCancelButton());\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @returns {boolean}\n   */\n  var isScrollable = function isScrollable(elem) {\n    return !!(elem.scrollHeight > elem.clientHeight);\n  };\n\n  /**\n   * borrowed from https://stackoverflow.com/a/46352119\n   *\n   * @param {HTMLElement} elem\n   * @returns {boolean}\n   */\n  var hasCssAnimation = function hasCssAnimation(elem) {\n    var style = window.getComputedStyle(elem);\n    var animDuration = parseFloat(style.getPropertyValue('animation-duration') || '0');\n    var transDuration = parseFloat(style.getPropertyValue('transition-duration') || '0');\n    return animDuration > 0 || transDuration > 0;\n  };\n\n  /**\n   * @param {number} timer\n   * @param {boolean} reset\n   */\n  var animateTimerProgressBar = function animateTimerProgressBar(timer) {\n    var reset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var timerProgressBar = getTimerProgressBar();\n    if (!timerProgressBar) {\n      return;\n    }\n    if (isVisible$1(timerProgressBar)) {\n      if (reset) {\n        timerProgressBar.style.transition = 'none';\n        timerProgressBar.style.width = '100%';\n      }\n      setTimeout(function () {\n        timerProgressBar.style.transition = \"width \".concat(timer / 1000, \"s linear\");\n        timerProgressBar.style.width = '0%';\n      }, 10);\n    }\n  };\n  var stopTimerProgressBar = function stopTimerProgressBar() {\n    var timerProgressBar = getTimerProgressBar();\n    if (!timerProgressBar) {\n      return;\n    }\n    var timerProgressBarWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n    timerProgressBar.style.removeProperty('transition');\n    timerProgressBar.style.width = '100%';\n    var timerProgressBarFullWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n    var timerProgressBarPercent = timerProgressBarWidth / timerProgressBarFullWidth * 100;\n    timerProgressBar.style.width = \"\".concat(timerProgressBarPercent, \"%\");\n  };\n\n  /**\n   * Detect Node env\n   *\n   * @returns {boolean}\n   */\n  var isNodeEnv = function isNodeEnv() {\n    return typeof window === 'undefined' || typeof document === 'undefined';\n  };\n  var sweetHTML = \"\\n <div aria-labelledby=\\\"\".concat(swalClasses.title, \"\\\" aria-describedby=\\\"\").concat(swalClasses['html-container'], \"\\\" class=\\\"\").concat(swalClasses.popup, \"\\\" tabindex=\\\"-1\\\">\\n   <button type=\\\"button\\\" class=\\\"\").concat(swalClasses.close, \"\\\"></button>\\n   <ul class=\\\"\").concat(swalClasses['progress-steps'], \"\\\"></ul>\\n   <div class=\\\"\").concat(swalClasses.icon, \"\\\"></div>\\n   <img class=\\\"\").concat(swalClasses.image, \"\\\" />\\n   <h2 class=\\\"\").concat(swalClasses.title, \"\\\" id=\\\"\").concat(swalClasses.title, \"\\\"></h2>\\n   <div class=\\\"\").concat(swalClasses['html-container'], \"\\\" id=\\\"\").concat(swalClasses['html-container'], \"\\\"></div>\\n   <input class=\\\"\").concat(swalClasses.input, \"\\\" id=\\\"\").concat(swalClasses.input, \"\\\" />\\n   <input type=\\\"file\\\" class=\\\"\").concat(swalClasses.file, \"\\\" />\\n   <div class=\\\"\").concat(swalClasses.range, \"\\\">\\n     <input type=\\\"range\\\" />\\n     <output></output>\\n   </div>\\n   <select class=\\\"\").concat(swalClasses.select, \"\\\" id=\\\"\").concat(swalClasses.select, \"\\\"></select>\\n   <div class=\\\"\").concat(swalClasses.radio, \"\\\"></div>\\n   <label class=\\\"\").concat(swalClasses.checkbox, \"\\\">\\n     <input type=\\\"checkbox\\\" id=\\\"\").concat(swalClasses.checkbox, \"\\\" />\\n     <span class=\\\"\").concat(swalClasses.label, \"\\\"></span>\\n   </label>\\n   <textarea class=\\\"\").concat(swalClasses.textarea, \"\\\" id=\\\"\").concat(swalClasses.textarea, \"\\\"></textarea>\\n   <div class=\\\"\").concat(swalClasses['validation-message'], \"\\\" id=\\\"\").concat(swalClasses['validation-message'], \"\\\"></div>\\n   <div class=\\\"\").concat(swalClasses.actions, \"\\\">\\n     <div class=\\\"\").concat(swalClasses.loader, \"\\\"></div>\\n     <button type=\\\"button\\\" class=\\\"\").concat(swalClasses.confirm, \"\\\"></button>\\n     <button type=\\\"button\\\" class=\\\"\").concat(swalClasses.deny, \"\\\"></button>\\n     <button type=\\\"button\\\" class=\\\"\").concat(swalClasses.cancel, \"\\\"></button>\\n   </div>\\n   <div class=\\\"\").concat(swalClasses.footer, \"\\\"></div>\\n   <div class=\\\"\").concat(swalClasses['timer-progress-bar-container'], \"\\\">\\n     <div class=\\\"\").concat(swalClasses['timer-progress-bar'], \"\\\"></div>\\n   </div>\\n </div>\\n\").replace(/(^|\\n)\\s*/g, '');\n\n  /**\n   * @returns {boolean}\n   */\n  var resetOldContainer = function resetOldContainer() {\n    var oldContainer = getContainer();\n    if (!oldContainer) {\n      return false;\n    }\n    oldContainer.remove();\n    removeClass([document.documentElement, document.body], [swalClasses['no-backdrop'], swalClasses['toast-shown'], swalClasses['has-column']]);\n    return true;\n  };\n  var resetValidationMessage$1 = function resetValidationMessage() {\n    globalState.currentInstance.resetValidationMessage();\n  };\n  var addInputChangeListeners = function addInputChangeListeners() {\n    var popup = getPopup();\n    var input = getDirectChildByClass(popup, swalClasses.input);\n    var file = getDirectChildByClass(popup, swalClasses.file);\n    /** @type {HTMLInputElement} */\n    var range = popup.querySelector(\".\".concat(swalClasses.range, \" input\"));\n    /** @type {HTMLOutputElement} */\n    var rangeOutput = popup.querySelector(\".\".concat(swalClasses.range, \" output\"));\n    var select = getDirectChildByClass(popup, swalClasses.select);\n    /** @type {HTMLInputElement} */\n    var checkbox = popup.querySelector(\".\".concat(swalClasses.checkbox, \" input\"));\n    var textarea = getDirectChildByClass(popup, swalClasses.textarea);\n    input.oninput = resetValidationMessage$1;\n    file.onchange = resetValidationMessage$1;\n    select.onchange = resetValidationMessage$1;\n    checkbox.onchange = resetValidationMessage$1;\n    textarea.oninput = resetValidationMessage$1;\n    range.oninput = function () {\n      resetValidationMessage$1();\n      rangeOutput.value = range.value;\n    };\n    range.onchange = function () {\n      resetValidationMessage$1();\n      rangeOutput.value = range.value;\n    };\n  };\n\n  /**\n   * @param {string | HTMLElement} target\n   * @returns {HTMLElement}\n   */\n  var getTarget = function getTarget(target) {\n    return typeof target === 'string' ? document.querySelector(target) : target;\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  var setupAccessibility = function setupAccessibility(params) {\n    var popup = getPopup();\n    popup.setAttribute('role', params.toast ? 'alert' : 'dialog');\n    popup.setAttribute('aria-live', params.toast ? 'polite' : 'assertive');\n    if (!params.toast) {\n      popup.setAttribute('aria-modal', 'true');\n    }\n  };\n\n  /**\n   * @param {HTMLElement} targetElement\n   */\n  var setupRTL = function setupRTL(targetElement) {\n    if (window.getComputedStyle(targetElement).direction === 'rtl') {\n      addClass(getContainer(), swalClasses.rtl);\n    }\n  };\n\n  /**\n   * Add modal + backdrop + no-war message for Russians to DOM\n   *\n   * @param {SweetAlertOptions} params\n   */\n  var init = function init(params) {\n    // Clean up the old popup container if it exists\n    var oldContainerExisted = resetOldContainer();\n    if (isNodeEnv()) {\n      error('SweetAlert2 requires document to initialize');\n      return;\n    }\n    var container = document.createElement('div');\n    container.className = swalClasses.container;\n    if (oldContainerExisted) {\n      addClass(container, swalClasses['no-transition']);\n    }\n    setInnerHtml(container, sweetHTML);\n    var targetElement = getTarget(params.target);\n    targetElement.appendChild(container);\n    setupAccessibility(params);\n    setupRTL(targetElement);\n    addInputChangeListeners();\n  };\n\n  /**\n   * @param {HTMLElement | object | string} param\n   * @param {HTMLElement} target\n   */\n  var parseHtmlToContainer = function parseHtmlToContainer(param, target) {\n    // DOM element\n    if (param instanceof HTMLElement) {\n      target.appendChild(param);\n    }\n\n    // Object\n    else if (_typeof(param) === 'object') {\n      handleObject(param, target);\n    }\n\n    // Plain string\n    else if (param) {\n      setInnerHtml(target, param);\n    }\n  };\n\n  /**\n   * @param {any} param\n   * @param {HTMLElement} target\n   */\n  var handleObject = function handleObject(param, target) {\n    // JQuery element(s)\n    if (param.jquery) {\n      handleJqueryElem(target, param);\n    }\n\n    // For other objects use their string representation\n    else {\n      setInnerHtml(target, param.toString());\n    }\n  };\n\n  /**\n   * @param {HTMLElement} target\n   * @param {any} elem\n   */\n  var handleJqueryElem = function handleJqueryElem(target, elem) {\n    target.textContent = '';\n    if (0 in elem) {\n      for (var i = 0; (i in elem); i++) {\n        target.appendChild(elem[i].cloneNode(true));\n      }\n    } else {\n      target.appendChild(elem.cloneNode(true));\n    }\n  };\n\n  /**\n   * @returns {'webkitAnimationEnd' | 'animationend' | false}\n   */\n  var animationEndEvent = function () {\n    // Prevent run in Node env\n    if (isNodeEnv()) {\n      return false;\n    }\n    var testEl = document.createElement('div');\n\n    // Chrome, Safari and Opera\n    if (typeof testEl.style.webkitAnimation !== 'undefined') {\n      return 'webkitAnimationEnd';\n    }\n\n    // Standard syntax\n    if (typeof testEl.style.animation !== 'undefined') {\n      return 'animationend';\n    }\n    return false;\n  }();\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  var renderActions = function renderActions(instance, params) {\n    var actions = getActions();\n    var loader = getLoader();\n    if (!actions || !loader) {\n      return;\n    }\n\n    // Actions (buttons) wrapper\n    if (!params.showConfirmButton && !params.showDenyButton && !params.showCancelButton) {\n      hide(actions);\n    } else {\n      show(actions);\n    }\n\n    // Custom class\n    applyCustomClass(actions, params, 'actions');\n\n    // Render all the buttons\n    renderButtons(actions, loader, params);\n\n    // Loader\n    setInnerHtml(loader, params.loaderHtml || '');\n    applyCustomClass(loader, params, 'loader');\n  };\n\n  /**\n   * @param {HTMLElement} actions\n   * @param {HTMLElement} loader\n   * @param {SweetAlertOptions} params\n   */\n  function renderButtons(actions, loader, params) {\n    var confirmButton = getConfirmButton();\n    var denyButton = getDenyButton();\n    var cancelButton = getCancelButton();\n    if (!confirmButton || !denyButton || !cancelButton) {\n      return;\n    }\n\n    // Render buttons\n    renderButton(confirmButton, 'confirm', params);\n    renderButton(denyButton, 'deny', params);\n    renderButton(cancelButton, 'cancel', params);\n    handleButtonsStyling(confirmButton, denyButton, cancelButton, params);\n    if (params.reverseButtons) {\n      if (params.toast) {\n        actions.insertBefore(cancelButton, confirmButton);\n        actions.insertBefore(denyButton, confirmButton);\n      } else {\n        actions.insertBefore(cancelButton, loader);\n        actions.insertBefore(denyButton, loader);\n        actions.insertBefore(confirmButton, loader);\n      }\n    }\n  }\n\n  /**\n   * @param {HTMLElement} confirmButton\n   * @param {HTMLElement} denyButton\n   * @param {HTMLElement} cancelButton\n   * @param {SweetAlertOptions} params\n   */\n  function handleButtonsStyling(confirmButton, denyButton, cancelButton, params) {\n    if (!params.buttonsStyling) {\n      removeClass([confirmButton, denyButton, cancelButton], swalClasses.styled);\n      return;\n    }\n    addClass([confirmButton, denyButton, cancelButton], swalClasses.styled);\n\n    // Buttons background colors\n    if (params.confirmButtonColor) {\n      confirmButton.style.backgroundColor = params.confirmButtonColor;\n      addClass(confirmButton, swalClasses['default-outline']);\n    }\n    if (params.denyButtonColor) {\n      denyButton.style.backgroundColor = params.denyButtonColor;\n      addClass(denyButton, swalClasses['default-outline']);\n    }\n    if (params.cancelButtonColor) {\n      cancelButton.style.backgroundColor = params.cancelButtonColor;\n      addClass(cancelButton, swalClasses['default-outline']);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} button\n   * @param {'confirm' | 'deny' | 'cancel'} buttonType\n   * @param {SweetAlertOptions} params\n   */\n  function renderButton(button, buttonType, params) {\n    var buttonName = /** @type {'Confirm' | 'Deny' | 'Cancel'} */capitalizeFirstLetter(buttonType);\n    toggle(button, params[\"show\".concat(buttonName, \"Button\")], 'inline-block');\n    setInnerHtml(button, params[\"\".concat(buttonType, \"ButtonText\")] || ''); // Set caption text\n    button.setAttribute('aria-label', params[\"\".concat(buttonType, \"ButtonAriaLabel\")] || ''); // ARIA label\n\n    // Add buttons custom classes\n    button.className = swalClasses[buttonType];\n    applyCustomClass(button, params, \"\".concat(buttonType, \"Button\"));\n  }\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  var renderCloseButton = function renderCloseButton(instance, params) {\n    var closeButton = getCloseButton();\n    if (!closeButton) {\n      return;\n    }\n    setInnerHtml(closeButton, params.closeButtonHtml || '');\n\n    // Custom class\n    applyCustomClass(closeButton, params, 'closeButton');\n    toggle(closeButton, params.showCloseButton);\n    closeButton.setAttribute('aria-label', params.closeButtonAriaLabel || '');\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  var renderContainer = function renderContainer(instance, params) {\n    var container = getContainer();\n    if (!container) {\n      return;\n    }\n    handleBackdropParam(container, params.backdrop);\n    handlePositionParam(container, params.position);\n    handleGrowParam(container, params.grow);\n\n    // Custom class\n    applyCustomClass(container, params, 'container');\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['backdrop']} backdrop\n   */\n  function handleBackdropParam(container, backdrop) {\n    if (typeof backdrop === 'string') {\n      container.style.background = backdrop;\n    } else if (!backdrop) {\n      addClass([document.documentElement, document.body], swalClasses['no-backdrop']);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['position']} position\n   */\n  function handlePositionParam(container, position) {\n    if (!position) {\n      return;\n    }\n    if (position in swalClasses) {\n      addClass(container, swalClasses[position]);\n    } else {\n      warn('The \"position\" parameter is not valid, defaulting to \"center\"');\n      addClass(container, swalClasses.center);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['grow']} grow\n   */\n  function handleGrowParam(container, grow) {\n    if (!grow) {\n      return;\n    }\n    addClass(container, swalClasses[\"grow-\".concat(grow)]);\n  }\n\n  /**\n   * This module contains `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n   * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n   * This is the approach that Babel will probably take to implement private methods/fields\n   *   https://github.com/tc39/proposal-private-methods\n   *   https://github.com/babel/babel/pull/7555\n   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n   *   then we can use that language feature.\n   */\n\n  var privateProps = {\n    innerParams: new WeakMap(),\n    domCache: new WeakMap()\n  };\n\n  /** @type {InputClass[]} */\n  var inputClasses = ['input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea'];\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  var renderInput = function renderInput(instance, params) {\n    var popup = getPopup();\n    if (!popup) {\n      return;\n    }\n    var innerParams = privateProps.innerParams.get(instance);\n    var rerender = !innerParams || params.input !== innerParams.input;\n    inputClasses.forEach(function (inputClass) {\n      var inputContainer = getDirectChildByClass(popup, swalClasses[inputClass]);\n      if (!inputContainer) {\n        return;\n      }\n\n      // set attributes\n      setAttributes(inputClass, params.inputAttributes);\n\n      // set class\n      inputContainer.className = swalClasses[inputClass];\n      if (rerender) {\n        hide(inputContainer);\n      }\n    });\n    if (params.input) {\n      if (rerender) {\n        showInput(params);\n      }\n      // set custom class\n      setCustomClass(params);\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  var showInput = function showInput(params) {\n    if (!params.input) {\n      return;\n    }\n    if (!renderInputType[params.input]) {\n      error(\"Unexpected type of input! Expected \".concat(Object.keys(renderInputType).join(' | '), \", got \\\"\").concat(params.input, \"\\\"\"));\n      return;\n    }\n    var inputContainer = getInputContainer(params.input);\n    var input = renderInputType[params.input](inputContainer, params);\n    show(inputContainer);\n\n    // input autofocus\n    if (params.inputAutoFocus) {\n      setTimeout(function () {\n        focusInput(input);\n      });\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement} input\n   */\n  var removeAttributes = function removeAttributes(input) {\n    for (var i = 0; i < input.attributes.length; i++) {\n      var attrName = input.attributes[i].name;\n      if (!['id', 'type', 'value', 'style'].includes(attrName)) {\n        input.removeAttribute(attrName);\n      }\n    }\n  };\n\n  /**\n   * @param {InputClass} inputClass\n   * @param {SweetAlertOptions['inputAttributes']} inputAttributes\n   */\n  var setAttributes = function setAttributes(inputClass, inputAttributes) {\n    var input = getInput$1(getPopup(), inputClass);\n    if (!input) {\n      return;\n    }\n    removeAttributes(input);\n    for (var attr in inputAttributes) {\n      input.setAttribute(attr, inputAttributes[attr]);\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  var setCustomClass = function setCustomClass(params) {\n    var inputContainer = getInputContainer(params.input);\n    if (_typeof(params.customClass) === 'object') {\n      addClass(inputContainer, params.customClass.input);\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement | HTMLTextAreaElement} input\n   * @param {SweetAlertOptions} params\n   */\n  var setInputPlaceholder = function setInputPlaceholder(input, params) {\n    if (!input.placeholder || params.inputPlaceholder) {\n      input.placeholder = params.inputPlaceholder;\n    }\n  };\n\n  /**\n   * @param {Input} input\n   * @param {Input} prependTo\n   * @param {SweetAlertOptions} params\n   */\n  var setInputLabel = function setInputLabel(input, prependTo, params) {\n    if (params.inputLabel) {\n      var label = document.createElement('label');\n      var labelClass = swalClasses['input-label'];\n      label.setAttribute('for', input.id);\n      label.className = labelClass;\n      if (_typeof(params.customClass) === 'object') {\n        addClass(label, params.customClass.inputLabel);\n      }\n      label.innerText = params.inputLabel;\n      prependTo.insertAdjacentElement('beforebegin', label);\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions['input']} inputType\n   * @returns {HTMLElement}\n   */\n  var getInputContainer = function getInputContainer(inputType) {\n    return getDirectChildByClass(getPopup(), swalClasses[inputType] || swalClasses.input);\n  };\n\n  /**\n   * @param {HTMLInputElement | HTMLOutputElement | HTMLTextAreaElement} input\n   * @param {SweetAlertOptions['inputValue']} inputValue\n   */\n  var checkAndSetInputValue = function checkAndSetInputValue(input, inputValue) {\n    if (['string', 'number'].includes(_typeof(inputValue))) {\n      input.value = \"\".concat(inputValue);\n    } else if (!isPromise(inputValue)) {\n      warn(\"Unexpected type of inputValue! Expected \\\"string\\\", \\\"number\\\" or \\\"Promise\\\", got \\\"\".concat(_typeof(inputValue), \"\\\"\"));\n    }\n  };\n\n  /** @type {Record<SweetAlertInput, (input: Input | HTMLElement, params: SweetAlertOptions) => Input>} */\n  var renderInputType = {};\n\n  /**\n   * @param {HTMLInputElement} input\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.text = renderInputType.email = renderInputType.password = renderInputType.number = renderInputType.tel = renderInputType.url = renderInputType.search = renderInputType.date = renderInputType['datetime-local'] = renderInputType.time = renderInputType.week = renderInputType.month = function (input, params) {\n    checkAndSetInputValue(input, params.inputValue);\n    setInputLabel(input, input, params);\n    setInputPlaceholder(input, params);\n    input.type = params.input;\n    return input;\n  };\n\n  /**\n   * @param {HTMLInputElement} input\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.file = function (input, params) {\n    setInputLabel(input, input, params);\n    setInputPlaceholder(input, params);\n    return input;\n  };\n\n  /**\n   * @param {HTMLInputElement} range\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.range = function (range, params) {\n    var rangeInput = range.querySelector('input');\n    var rangeOutput = range.querySelector('output');\n    checkAndSetInputValue(rangeInput, params.inputValue);\n    rangeInput.type = params.input;\n    checkAndSetInputValue(rangeOutput, params.inputValue);\n    setInputLabel(rangeInput, range, params);\n    return range;\n  };\n\n  /**\n   * @param {HTMLSelectElement} select\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLSelectElement}\n   */\n  renderInputType.select = function (select, params) {\n    select.textContent = '';\n    if (params.inputPlaceholder) {\n      var placeholder = document.createElement('option');\n      setInnerHtml(placeholder, params.inputPlaceholder);\n      placeholder.value = '';\n      placeholder.disabled = true;\n      placeholder.selected = true;\n      select.appendChild(placeholder);\n    }\n    setInputLabel(select, select, params);\n    return select;\n  };\n\n  /**\n   * @param {HTMLInputElement} radio\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.radio = function (radio) {\n    radio.textContent = '';\n    return radio;\n  };\n\n  /**\n   * @param {HTMLLabelElement} checkboxContainer\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.checkbox = function (checkboxContainer, params) {\n    var checkbox = getInput$1(getPopup(), 'checkbox');\n    checkbox.value = '1';\n    checkbox.checked = Boolean(params.inputValue);\n    var label = checkboxContainer.querySelector('span');\n    setInnerHtml(label, params.inputPlaceholder);\n    return checkbox;\n  };\n\n  /**\n   * @param {HTMLTextAreaElement} textarea\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLTextAreaElement}\n   */\n  renderInputType.textarea = function (textarea, params) {\n    checkAndSetInputValue(textarea, params.inputValue);\n    setInputPlaceholder(textarea, params);\n    setInputLabel(textarea, textarea, params);\n\n    /**\n     * @param {HTMLElement} el\n     * @returns {number}\n     */\n    var getMargin = function getMargin(el) {\n      return parseInt(window.getComputedStyle(el).marginLeft) + parseInt(window.getComputedStyle(el).marginRight);\n    };\n\n    // https://github.com/sweetalert2/sweetalert2/issues/2291\n    setTimeout(function () {\n      // https://github.com/sweetalert2/sweetalert2/issues/1699\n      if ('MutationObserver' in window) {\n        var initialPopupWidth = parseInt(window.getComputedStyle(getPopup()).width);\n        var textareaResizeHandler = function textareaResizeHandler() {\n          // check if texarea is still in document (i.e. popup wasn't closed in the meantime)\n          if (!document.body.contains(textarea)) {\n            return;\n          }\n          var textareaWidth = textarea.offsetWidth + getMargin(textarea);\n          if (textareaWidth > initialPopupWidth) {\n            getPopup().style.width = \"\".concat(textareaWidth, \"px\");\n          } else {\n            applyNumericalStyle(getPopup(), 'width', params.width);\n          }\n        };\n        new MutationObserver(textareaResizeHandler).observe(textarea, {\n          attributes: true,\n          attributeFilter: ['style']\n        });\n      }\n    });\n    return textarea;\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  var renderContent = function renderContent(instance, params) {\n    var htmlContainer = getHtmlContainer();\n    if (!htmlContainer) {\n      return;\n    }\n    showWhenInnerHtmlPresent(htmlContainer);\n    applyCustomClass(htmlContainer, params, 'htmlContainer');\n\n    // Content as HTML\n    if (params.html) {\n      parseHtmlToContainer(params.html, htmlContainer);\n      show(htmlContainer, 'block');\n    }\n\n    // Content as plain text\n    else if (params.text) {\n      htmlContainer.textContent = params.text;\n      show(htmlContainer, 'block');\n    }\n\n    // No content\n    else {\n      hide(htmlContainer);\n    }\n    renderInput(instance, params);\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  var renderFooter = function renderFooter(instance, params) {\n    var footer = getFooter();\n    if (!footer) {\n      return;\n    }\n    showWhenInnerHtmlPresent(footer);\n    toggle(footer, params.footer, 'block');\n    if (params.footer) {\n      parseHtmlToContainer(params.footer, footer);\n    }\n\n    // Custom class\n    applyCustomClass(footer, params, 'footer');\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  var renderIcon = function renderIcon(instance, params) {\n    var innerParams = privateProps.innerParams.get(instance);\n    var icon = getIcon();\n    if (!icon) {\n      return;\n    }\n\n    // if the given icon already rendered, apply the styling without re-rendering the icon\n    if (innerParams && params.icon === innerParams.icon) {\n      // Custom or default content\n      setContent(icon, params);\n      applyStyles(icon, params);\n      return;\n    }\n    if (!params.icon && !params.iconHtml) {\n      hide(icon);\n      return;\n    }\n    if (params.icon && Object.keys(iconTypes).indexOf(params.icon) === -1) {\n      error(\"Unknown icon! Expected \\\"success\\\", \\\"error\\\", \\\"warning\\\", \\\"info\\\" or \\\"question\\\", got \\\"\".concat(params.icon, \"\\\"\"));\n      hide(icon);\n      return;\n    }\n    show(icon);\n\n    // Custom or default content\n    setContent(icon, params);\n    applyStyles(icon, params);\n\n    // Animate icon\n    addClass(icon, params.showClass && params.showClass.icon);\n  };\n\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n  var applyStyles = function applyStyles(icon, params) {\n    for (var _i = 0, _Object$entries = Object.entries(iconTypes); _i < _Object$entries.length; _i++) {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        iconType = _Object$entries$_i[0],\n        iconClassName = _Object$entries$_i[1];\n      if (params.icon !== iconType) {\n        removeClass(icon, iconClassName);\n      }\n    }\n    addClass(icon, params.icon && iconTypes[params.icon]);\n\n    // Icon color\n    setColor(icon, params);\n\n    // Success icon background color\n    adjustSuccessIconBackgroundColor();\n\n    // Custom class\n    applyCustomClass(icon, params, 'icon');\n  };\n\n  // Adjust success icon background color to match the popup background color\n  var adjustSuccessIconBackgroundColor = function adjustSuccessIconBackgroundColor() {\n    var popup = getPopup();\n    if (!popup) {\n      return;\n    }\n    var popupBackgroundColor = window.getComputedStyle(popup).getPropertyValue('background-color');\n    /** @type {NodeListOf<HTMLElement>} */\n    var successIconParts = popup.querySelectorAll('[class^=swal2-success-circular-line], .swal2-success-fix');\n    for (var i = 0; i < successIconParts.length; i++) {\n      successIconParts[i].style.backgroundColor = popupBackgroundColor;\n    }\n  };\n  var successIconHtml = \"\\n  <div class=\\\"swal2-success-circular-line-left\\\"></div>\\n  <span class=\\\"swal2-success-line-tip\\\"></span> <span class=\\\"swal2-success-line-long\\\"></span>\\n  <div class=\\\"swal2-success-ring\\\"></div> <div class=\\\"swal2-success-fix\\\"></div>\\n  <div class=\\\"swal2-success-circular-line-right\\\"></div>\\n\";\n  var errorIconHtml = \"\\n  <span class=\\\"swal2-x-mark\\\">\\n    <span class=\\\"swal2-x-mark-line-left\\\"></span>\\n    <span class=\\\"swal2-x-mark-line-right\\\"></span>\\n  </span>\\n\";\n\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n  var setContent = function setContent(icon, params) {\n    if (!params.icon && !params.iconHtml) {\n      return;\n    }\n    var oldContent = icon.innerHTML;\n    var newContent = '';\n    if (params.iconHtml) {\n      newContent = iconContent(params.iconHtml);\n    } else if (params.icon === 'success') {\n      newContent = successIconHtml;\n      oldContent = oldContent.replace(/ style=\".*?\"/g, ''); // undo adjustSuccessIconBackgroundColor()\n    } else if (params.icon === 'error') {\n      newContent = errorIconHtml;\n    } else if (params.icon) {\n      var defaultIconHtml = {\n        question: '?',\n        warning: '!',\n        info: 'i'\n      };\n      newContent = iconContent(defaultIconHtml[params.icon]);\n    }\n    if (oldContent.trim() !== newContent.trim()) {\n      setInnerHtml(icon, newContent);\n    }\n  };\n\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n  var setColor = function setColor(icon, params) {\n    if (!params.iconColor) {\n      return;\n    }\n    icon.style.color = params.iconColor;\n    icon.style.borderColor = params.iconColor;\n    for (var _i2 = 0, _arr = ['.swal2-success-line-tip', '.swal2-success-line-long', '.swal2-x-mark-line-left', '.swal2-x-mark-line-right']; _i2 < _arr.length; _i2++) {\n      var sel = _arr[_i2];\n      setStyle(icon, sel, 'backgroundColor', params.iconColor);\n    }\n    setStyle(icon, '.swal2-success-ring', 'borderColor', params.iconColor);\n  };\n\n  /**\n   * @param {string} content\n   * @returns {string}\n   */\n  var iconContent = function iconContent(content) {\n    return \"<div class=\\\"\".concat(swalClasses['icon-content'], \"\\\">\").concat(content, \"</div>\");\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  var renderImage = function renderImage(instance, params) {\n    var image = getImage();\n    if (!image) {\n      return;\n    }\n    if (!params.imageUrl) {\n      hide(image);\n      return;\n    }\n    show(image, '');\n\n    // Src, alt\n    image.setAttribute('src', params.imageUrl);\n    image.setAttribute('alt', params.imageAlt || '');\n\n    // Width, height\n    applyNumericalStyle(image, 'width', params.imageWidth);\n    applyNumericalStyle(image, 'height', params.imageHeight);\n\n    // Class\n    image.className = swalClasses.image;\n    applyCustomClass(image, params, 'image');\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  var renderPopup = function renderPopup(instance, params) {\n    var container = getContainer();\n    var popup = getPopup();\n    if (!container || !popup) {\n      return;\n    }\n\n    // Width\n    // https://github.com/sweetalert2/sweetalert2/issues/2170\n    if (params.toast) {\n      applyNumericalStyle(container, 'width', params.width);\n      popup.style.width = '100%';\n      var loader = getLoader();\n      loader && popup.insertBefore(loader, getIcon());\n    } else {\n      applyNumericalStyle(popup, 'width', params.width);\n    }\n\n    // Padding\n    applyNumericalStyle(popup, 'padding', params.padding);\n\n    // Color\n    if (params.color) {\n      popup.style.color = params.color;\n    }\n\n    // Background\n    if (params.background) {\n      popup.style.background = params.background;\n    }\n    hide(getValidationMessage());\n\n    // Classes\n    addClasses$1(popup, params);\n  };\n\n  /**\n   * @param {HTMLElement} popup\n   * @param {SweetAlertOptions} params\n   */\n  var addClasses$1 = function addClasses(popup, params) {\n    var showClass = params.showClass || {};\n    // Default Class + showClass when updating Swal.update({})\n    popup.className = \"\".concat(swalClasses.popup, \" \").concat(isVisible$1(popup) ? showClass.popup : '');\n    if (params.toast) {\n      addClass([document.documentElement, document.body], swalClasses['toast-shown']);\n      addClass(popup, swalClasses.toast);\n    } else {\n      addClass(popup, swalClasses.modal);\n    }\n\n    // Custom class\n    applyCustomClass(popup, params, 'popup');\n    if (typeof params.customClass === 'string') {\n      addClass(popup, params.customClass);\n    }\n\n    // Icon class (#1842)\n    if (params.icon) {\n      addClass(popup, swalClasses[\"icon-\".concat(params.icon)]);\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  var renderProgressSteps = function renderProgressSteps(instance, params) {\n    var progressStepsContainer = getProgressSteps();\n    if (!progressStepsContainer) {\n      return;\n    }\n    var progressSteps = params.progressSteps,\n      currentProgressStep = params.currentProgressStep;\n    if (!progressSteps || progressSteps.length === 0 || currentProgressStep === undefined) {\n      hide(progressStepsContainer);\n      return;\n    }\n    show(progressStepsContainer);\n    progressStepsContainer.textContent = '';\n    if (currentProgressStep >= progressSteps.length) {\n      warn('Invalid currentProgressStep parameter, it should be less than progressSteps.length ' + '(currentProgressStep like JS arrays starts from 0)');\n    }\n    progressSteps.forEach(function (step, index) {\n      var stepEl = createStepElement(step);\n      progressStepsContainer.appendChild(stepEl);\n      if (index === currentProgressStep) {\n        addClass(stepEl, swalClasses['active-progress-step']);\n      }\n      if (index !== progressSteps.length - 1) {\n        var lineEl = createLineElement(params);\n        progressStepsContainer.appendChild(lineEl);\n      }\n    });\n  };\n\n  /**\n   * @param {string} step\n   * @returns {HTMLLIElement}\n   */\n  var createStepElement = function createStepElement(step) {\n    var stepEl = document.createElement('li');\n    addClass(stepEl, swalClasses['progress-step']);\n    setInnerHtml(stepEl, step);\n    return stepEl;\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLLIElement}\n   */\n  var createLineElement = function createLineElement(params) {\n    var lineEl = document.createElement('li');\n    addClass(lineEl, swalClasses['progress-step-line']);\n    if (params.progressStepsDistance) {\n      applyNumericalStyle(lineEl, 'width', params.progressStepsDistance);\n    }\n    return lineEl;\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  var renderTitle = function renderTitle(instance, params) {\n    var title = getTitle();\n    if (!title) {\n      return;\n    }\n    showWhenInnerHtmlPresent(title);\n    toggle(title, params.title || params.titleText, 'block');\n    if (params.title) {\n      parseHtmlToContainer(params.title, title);\n    }\n    if (params.titleText) {\n      title.innerText = params.titleText;\n    }\n\n    // Custom class\n    applyCustomClass(title, params, 'title');\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  var render = function render(instance, params) {\n    renderPopup(instance, params);\n    renderContainer(instance, params);\n    renderProgressSteps(instance, params);\n    renderIcon(instance, params);\n    renderImage(instance, params);\n    renderTitle(instance, params);\n    renderCloseButton(instance, params);\n    renderContent(instance, params);\n    renderActions(instance, params);\n    renderFooter(instance, params);\n    var popup = getPopup();\n    if (typeof params.didRender === 'function' && popup) {\n      params.didRender(popup);\n    }\n  };\n\n  /*\n   * Global function to determine if SweetAlert2 popup is shown\n   */\n  var isVisible = function isVisible() {\n    return isVisible$1(getPopup());\n  };\n\n  /*\n   * Global function to click 'Confirm' button\n   */\n  var clickConfirm = function clickConfirm() {\n    var _dom$getConfirmButton;\n    return (_dom$getConfirmButton = getConfirmButton()) === null || _dom$getConfirmButton === void 0 ? void 0 : _dom$getConfirmButton.click();\n  };\n\n  /*\n   * Global function to click 'Deny' button\n   */\n  var clickDeny = function clickDeny() {\n    var _dom$getDenyButton;\n    return (_dom$getDenyButton = getDenyButton()) === null || _dom$getDenyButton === void 0 ? void 0 : _dom$getDenyButton.click();\n  };\n\n  /*\n   * Global function to click 'Cancel' button\n   */\n  var clickCancel = function clickCancel() {\n    var _dom$getCancelButton;\n    return (_dom$getCancelButton = getCancelButton()) === null || _dom$getCancelButton === void 0 ? void 0 : _dom$getCancelButton.click();\n  };\n\n  /** @typedef {'cancel' | 'backdrop' | 'close' | 'esc' | 'timer'} DismissReason */\n\n  /** @type {Record<DismissReason, DismissReason>} */\n  var DismissReason = Object.freeze({\n    cancel: 'cancel',\n    backdrop: 'backdrop',\n    close: 'close',\n    esc: 'esc',\n    timer: 'timer'\n  });\n\n  /**\n   * @param {GlobalState} globalState\n   */\n  var removeKeydownHandler = function removeKeydownHandler(globalState) {\n    if (globalState.keydownTarget && globalState.keydownHandlerAdded) {\n      globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {\n        capture: globalState.keydownListenerCapture\n      });\n      globalState.keydownHandlerAdded = false;\n    }\n  };\n\n  /**\n   * @param {GlobalState} globalState\n   * @param {SweetAlertOptions} innerParams\n   * @param {*} dismissWith\n   */\n  var addKeydownHandler = function addKeydownHandler(globalState, innerParams, dismissWith) {\n    removeKeydownHandler(globalState);\n    if (!innerParams.toast) {\n      globalState.keydownHandler = function (e) {\n        return keydownHandler(innerParams, e, dismissWith);\n      };\n      globalState.keydownTarget = innerParams.keydownListenerCapture ? window : getPopup();\n      globalState.keydownListenerCapture = innerParams.keydownListenerCapture;\n      globalState.keydownTarget.addEventListener('keydown', globalState.keydownHandler, {\n        capture: globalState.keydownListenerCapture\n      });\n      globalState.keydownHandlerAdded = true;\n    }\n  };\n\n  /**\n   * @param {number} index\n   * @param {number} increment\n   */\n  var setFocus = function setFocus(index, increment) {\n    var _dom$getPopup;\n    var focusableElements = getFocusableElements();\n    // search for visible elements and select the next possible match\n    if (focusableElements.length) {\n      index = index + increment;\n\n      // rollover to first item\n      if (index === focusableElements.length) {\n        index = 0;\n\n        // go to last item\n      } else if (index === -1) {\n        index = focusableElements.length - 1;\n      }\n      focusableElements[index].focus();\n      return;\n    }\n    // no visible focusable elements, focus the popup\n    (_dom$getPopup = getPopup()) === null || _dom$getPopup === void 0 || _dom$getPopup.focus();\n  };\n  var arrowKeysNextButton = ['ArrowRight', 'ArrowDown'];\n  var arrowKeysPreviousButton = ['ArrowLeft', 'ArrowUp'];\n\n  /**\n   * @param {SweetAlertOptions} innerParams\n   * @param {KeyboardEvent} event\n   * @param {Function} dismissWith\n   */\n  var keydownHandler = function keydownHandler(innerParams, event, dismissWith) {\n    if (!innerParams) {\n      return; // This instance has already been destroyed\n    }\n\n    // Ignore keydown during IME composition\n    // https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event#ignoring_keydown_during_ime_composition\n    // https://github.com/sweetalert2/sweetalert2/issues/720\n    // https://github.com/sweetalert2/sweetalert2/issues/2406\n    if (event.isComposing || event.keyCode === 229) {\n      return;\n    }\n    if (innerParams.stopKeydownPropagation) {\n      event.stopPropagation();\n    }\n\n    // ENTER\n    if (event.key === 'Enter') {\n      handleEnter(event, innerParams);\n    }\n\n    // TAB\n    else if (event.key === 'Tab') {\n      handleTab(event);\n    }\n\n    // ARROWS - switch focus between buttons\n    else if ([].concat(arrowKeysNextButton, arrowKeysPreviousButton).includes(event.key)) {\n      handleArrows(event.key);\n    }\n\n    // ESC\n    else if (event.key === 'Escape') {\n      handleEsc(event, innerParams, dismissWith);\n    }\n  };\n\n  /**\n   * @param {KeyboardEvent} event\n   * @param {SweetAlertOptions} innerParams\n   */\n  var handleEnter = function handleEnter(event, innerParams) {\n    // https://github.com/sweetalert2/sweetalert2/issues/2386\n    if (!callIfFunction(innerParams.allowEnterKey)) {\n      return;\n    }\n    var input = getInput$1(getPopup(), innerParams.input);\n    if (event.target && input && event.target instanceof HTMLElement && event.target.outerHTML === input.outerHTML) {\n      if (['textarea', 'file'].includes(innerParams.input)) {\n        return; // do not submit\n      }\n\n      clickConfirm();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * @param {KeyboardEvent} event\n   */\n  var handleTab = function handleTab(event) {\n    var targetElement = event.target;\n    var focusableElements = getFocusableElements();\n    var btnIndex = -1;\n    for (var i = 0; i < focusableElements.length; i++) {\n      if (targetElement === focusableElements[i]) {\n        btnIndex = i;\n        break;\n      }\n    }\n\n    // Cycle to the next button\n    if (!event.shiftKey) {\n      setFocus(btnIndex, 1);\n    }\n\n    // Cycle to the prev button\n    else {\n      setFocus(btnIndex, -1);\n    }\n    event.stopPropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * @param {string} key\n   */\n  var handleArrows = function handleArrows(key) {\n    var actions = getActions();\n    var confirmButton = getConfirmButton();\n    var denyButton = getDenyButton();\n    var cancelButton = getCancelButton();\n    if (!actions || !confirmButton || !denyButton || !cancelButton) {\n      return;\n    }\n    /** @type HTMLElement[] */\n    var buttons = [confirmButton, denyButton, cancelButton];\n    if (document.activeElement instanceof HTMLElement && !buttons.includes(document.activeElement)) {\n      return;\n    }\n    var sibling = arrowKeysNextButton.includes(key) ? 'nextElementSibling' : 'previousElementSibling';\n    var buttonToFocus = document.activeElement;\n    if (!buttonToFocus) {\n      return;\n    }\n    for (var i = 0; i < actions.children.length; i++) {\n      buttonToFocus = buttonToFocus[sibling];\n      if (!buttonToFocus) {\n        return;\n      }\n      if (buttonToFocus instanceof HTMLButtonElement && isVisible$1(buttonToFocus)) {\n        break;\n      }\n    }\n    if (buttonToFocus instanceof HTMLButtonElement) {\n      buttonToFocus.focus();\n    }\n  };\n\n  /**\n   * @param {KeyboardEvent} event\n   * @param {SweetAlertOptions} innerParams\n   * @param {Function} dismissWith\n   */\n  var handleEsc = function handleEsc(event, innerParams, dismissWith) {\n    if (callIfFunction(innerParams.allowEscapeKey)) {\n      event.preventDefault();\n      dismissWith(DismissReason.esc);\n    }\n  };\n\n  /**\n   * This module contains `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n   * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n   * This is the approach that Babel will probably take to implement private methods/fields\n   *   https://github.com/tc39/proposal-private-methods\n   *   https://github.com/babel/babel/pull/7555\n   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n   *   then we can use that language feature.\n   */\n\n  var privateMethods = {\n    swalPromiseResolve: new WeakMap(),\n    swalPromiseReject: new WeakMap()\n  };\n\n  // From https://developer.paciellogroup.com/blog/2018/06/the-current-state-of-modal-dialog-accessibility/\n  // Adding aria-hidden=\"true\" to elements outside of the active modal dialog ensures that\n  // elements not within the active modal dialog will not be surfaced if a user opens a screen\n  // reader’s list of elements (headings, form controls, landmarks, etc.) in the document.\n\n  var setAriaHidden = function setAriaHidden() {\n    var bodyChildren = Array.from(document.body.children);\n    bodyChildren.forEach(function (el) {\n      if (el === getContainer() || el.contains(getContainer())) {\n        return;\n      }\n      if (el.hasAttribute('aria-hidden')) {\n        el.setAttribute('data-previous-aria-hidden', el.getAttribute('aria-hidden') || '');\n      }\n      el.setAttribute('aria-hidden', 'true');\n    });\n  };\n  var unsetAriaHidden = function unsetAriaHidden() {\n    var bodyChildren = Array.from(document.body.children);\n    bodyChildren.forEach(function (el) {\n      if (el.hasAttribute('data-previous-aria-hidden')) {\n        el.setAttribute('aria-hidden', el.getAttribute('data-previous-aria-hidden') || '');\n        el.removeAttribute('data-previous-aria-hidden');\n      } else {\n        el.removeAttribute('aria-hidden');\n      }\n    });\n  };\n\n  // @ts-ignore\n  var isSafariOrIOS = typeof window !== 'undefined' && !!window.GestureEvent; // true for Safari desktop + all iOS browsers https://stackoverflow.com/a/70585394\n\n  /**\n   * Fix iOS scrolling\n   * http://stackoverflow.com/q/39626302\n   */\n  var iOSfix = function iOSfix() {\n    if (isSafariOrIOS && !hasClass(document.body, swalClasses.iosfix)) {\n      var offset = document.body.scrollTop;\n      document.body.style.top = \"\".concat(offset * -1, \"px\");\n      addClass(document.body, swalClasses.iosfix);\n      lockBodyScroll();\n    }\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1246\n   */\n  var lockBodyScroll = function lockBodyScroll() {\n    var container = getContainer();\n    if (!container) {\n      return;\n    }\n    /** @type {boolean} */\n    var preventTouchMove;\n    /**\n     * @param {TouchEvent} event\n     */\n    container.ontouchstart = function (event) {\n      preventTouchMove = shouldPreventTouchMove(event);\n    };\n    /**\n     * @param {TouchEvent} event\n     */\n    container.ontouchmove = function (event) {\n      if (preventTouchMove) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    };\n  };\n\n  /**\n   * @param {TouchEvent} event\n   * @returns {boolean}\n   */\n  var shouldPreventTouchMove = function shouldPreventTouchMove(event) {\n    var target = event.target;\n    var container = getContainer();\n    var htmlContainer = getHtmlContainer();\n    if (!container || !htmlContainer) {\n      return false;\n    }\n    if (isStylus(event) || isZoom(event)) {\n      return false;\n    }\n    if (target === container) {\n      return true;\n    }\n    if (!isScrollable(container) && target instanceof HTMLElement && target.tagName !== 'INPUT' &&\n    // #1603\n    target.tagName !== 'TEXTAREA' &&\n    // #2266\n    !(isScrollable(htmlContainer) &&\n    // #1944\n    htmlContainer.contains(target))) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1786\n   *\n   * @param {*} event\n   * @returns {boolean}\n   */\n  var isStylus = function isStylus(event) {\n    return event.touches && event.touches.length && event.touches[0].touchType === 'stylus';\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1891\n   *\n   * @param {TouchEvent} event\n   * @returns {boolean}\n   */\n  var isZoom = function isZoom(event) {\n    return event.touches && event.touches.length > 1;\n  };\n  var undoIOSfix = function undoIOSfix() {\n    if (hasClass(document.body, swalClasses.iosfix)) {\n      var offset = parseInt(document.body.style.top, 10);\n      removeClass(document.body, swalClasses.iosfix);\n      document.body.style.top = '';\n      document.body.scrollTop = offset * -1;\n    }\n  };\n\n  /**\n   * Measure scrollbar width for padding body during modal show/hide\n   * https://github.com/twbs/bootstrap/blob/master/js/src/modal.js\n   *\n   * @returns {number}\n   */\n  var measureScrollbar = function measureScrollbar() {\n    var scrollDiv = document.createElement('div');\n    scrollDiv.className = swalClasses['scrollbar-measure'];\n    document.body.appendChild(scrollDiv);\n    var scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;\n    document.body.removeChild(scrollDiv);\n    return scrollbarWidth;\n  };\n\n  /**\n   * Remember state in cases where opening and handling a modal will fiddle with it.\n   * @type {number | null}\n   */\n  var previousBodyPadding = null;\n\n  /**\n   * @param {string} initialBodyOverflow\n   */\n  var replaceScrollbarWithPadding = function replaceScrollbarWithPadding(initialBodyOverflow) {\n    // for queues, do not do this more than once\n    if (previousBodyPadding !== null) {\n      return;\n    }\n    // if the body has overflow\n    if (document.body.scrollHeight > window.innerHeight || initialBodyOverflow === 'scroll' // https://github.com/sweetalert2/sweetalert2/issues/2663\n    ) {\n      // add padding so the content doesn't shift after removal of scrollbar\n      previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'));\n      document.body.style.paddingRight = \"\".concat(previousBodyPadding + measureScrollbar(), \"px\");\n    }\n  };\n  var undoReplaceScrollbarWithPadding = function undoReplaceScrollbarWithPadding() {\n    if (previousBodyPadding !== null) {\n      document.body.style.paddingRight = \"\".concat(previousBodyPadding, \"px\");\n      previousBodyPadding = null;\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {HTMLElement} container\n   * @param {boolean} returnFocus\n   * @param {Function} didClose\n   */\n  function removePopupAndResetState(instance, container, returnFocus, didClose) {\n    if (isToast()) {\n      triggerDidCloseAndDispose(instance, didClose);\n    } else {\n      restoreActiveElement(returnFocus).then(function () {\n        return triggerDidCloseAndDispose(instance, didClose);\n      });\n      removeKeydownHandler(globalState);\n    }\n\n    // workaround for https://github.com/sweetalert2/sweetalert2/issues/2088\n    // for some reason removing the container in Safari will scroll the document to bottom\n    if (isSafariOrIOS) {\n      container.setAttribute('style', 'display:none !important');\n      container.removeAttribute('class');\n      container.innerHTML = '';\n    } else {\n      container.remove();\n    }\n    if (isModal()) {\n      undoReplaceScrollbarWithPadding();\n      undoIOSfix();\n      unsetAriaHidden();\n    }\n    removeBodyClasses();\n  }\n\n  /**\n   * Remove SweetAlert2 classes from body\n   */\n  function removeBodyClasses() {\n    removeClass([document.documentElement, document.body], [swalClasses.shown, swalClasses['height-auto'], swalClasses['no-backdrop'], swalClasses['toast-shown']]);\n  }\n\n  /**\n   * Instance method to close sweetAlert\n   *\n   * @param {any} resolveValue\n   */\n  function close(resolveValue) {\n    resolveValue = prepareResolveValue(resolveValue);\n    var swalPromiseResolve = privateMethods.swalPromiseResolve.get(this);\n    var didClose = triggerClosePopup(this);\n    if (this.isAwaitingPromise) {\n      // A swal awaiting for a promise (after a click on Confirm or Deny) cannot be dismissed anymore #2335\n      if (!resolveValue.isDismissed) {\n        handleAwaitingPromise(this);\n        swalPromiseResolve(resolveValue);\n      }\n    } else if (didClose) {\n      // Resolve Swal promise\n      swalPromiseResolve(resolveValue);\n    }\n  }\n  var triggerClosePopup = function triggerClosePopup(instance) {\n    var popup = getPopup();\n    if (!popup) {\n      return false;\n    }\n    var innerParams = privateProps.innerParams.get(instance);\n    if (!innerParams || hasClass(popup, innerParams.hideClass.popup)) {\n      return false;\n    }\n    removeClass(popup, innerParams.showClass.popup);\n    addClass(popup, innerParams.hideClass.popup);\n    var backdrop = getContainer();\n    removeClass(backdrop, innerParams.showClass.backdrop);\n    addClass(backdrop, innerParams.hideClass.backdrop);\n    handlePopupAnimation(instance, popup, innerParams);\n    return true;\n  };\n\n  /**\n   * @param {any} error\n   */\n  function rejectPromise(error) {\n    var rejectPromise = privateMethods.swalPromiseReject.get(this);\n    handleAwaitingPromise(this);\n    if (rejectPromise) {\n      // Reject Swal promise\n      rejectPromise(error);\n    }\n  }\n\n  /**\n   * @param {SweetAlert} instance\n   */\n  var handleAwaitingPromise = function handleAwaitingPromise(instance) {\n    if (instance.isAwaitingPromise) {\n      delete instance.isAwaitingPromise;\n      // The instance might have been previously partly destroyed, we must resume the destroy process in this case #2335\n      if (!privateProps.innerParams.get(instance)) {\n        instance._destroy();\n      }\n    }\n  };\n\n  /**\n   * @param {any} resolveValue\n   * @returns {SweetAlertResult}\n   */\n  var prepareResolveValue = function prepareResolveValue(resolveValue) {\n    // When user calls Swal.close()\n    if (typeof resolveValue === 'undefined') {\n      return {\n        isConfirmed: false,\n        isDenied: false,\n        isDismissed: true\n      };\n    }\n    return Object.assign({\n      isConfirmed: false,\n      isDenied: false,\n      isDismissed: false\n    }, resolveValue);\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {HTMLElement} popup\n   * @param {SweetAlertOptions} innerParams\n   */\n  var handlePopupAnimation = function handlePopupAnimation(instance, popup, innerParams) {\n    var container = getContainer();\n    // If animation is supported, animate\n    var animationIsSupported = animationEndEvent && hasCssAnimation(popup);\n    if (typeof innerParams.willClose === 'function') {\n      innerParams.willClose(popup);\n    }\n    if (animationIsSupported) {\n      animatePopup(instance, popup, container, innerParams.returnFocus, innerParams.didClose);\n    } else {\n      // Otherwise, remove immediately\n      removePopupAndResetState(instance, container, innerParams.returnFocus, innerParams.didClose);\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {HTMLElement} popup\n   * @param {HTMLElement} container\n   * @param {boolean} returnFocus\n   * @param {Function} didClose\n   */\n  var animatePopup = function animatePopup(instance, popup, container, returnFocus, didClose) {\n    if (!animationEndEvent) {\n      return;\n    }\n    globalState.swalCloseEventFinishedCallback = removePopupAndResetState.bind(null, instance, container, returnFocus, didClose);\n    popup.addEventListener(animationEndEvent, function (e) {\n      if (e.target === popup) {\n        globalState.swalCloseEventFinishedCallback();\n        delete globalState.swalCloseEventFinishedCallback;\n      }\n    });\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {Function} didClose\n   */\n  var triggerDidCloseAndDispose = function triggerDidCloseAndDispose(instance, didClose) {\n    setTimeout(function () {\n      if (typeof didClose === 'function') {\n        didClose.bind(instance.params)();\n      }\n      // instance might have been destroyed already\n      if (instance._destroy) {\n        instance._destroy();\n      }\n    });\n  };\n\n  /**\n   * Shows loader (spinner), this is useful with AJAX requests.\n   * By default the loader be shown instead of the \"Confirm\" button.\n   *\n   * @param {HTMLButtonElement | null} [buttonToReplace]\n   */\n  var showLoading = function showLoading(buttonToReplace) {\n    var popup = getPopup();\n    if (!popup) {\n      new Swal(); // eslint-disable-line no-new\n    }\n\n    popup = getPopup();\n    if (!popup) {\n      return;\n    }\n    var loader = getLoader();\n    if (isToast()) {\n      hide(getIcon());\n    } else {\n      replaceButton(popup, buttonToReplace);\n    }\n    show(loader);\n    popup.setAttribute('data-loading', 'true');\n    popup.setAttribute('aria-busy', 'true');\n    popup.focus();\n  };\n\n  /**\n   * @param {HTMLElement} popup\n   * @param {HTMLButtonElement | null} [buttonToReplace]\n   */\n  var replaceButton = function replaceButton(popup, buttonToReplace) {\n    var actions = getActions();\n    var loader = getLoader();\n    if (!actions || !loader) {\n      return;\n    }\n    if (!buttonToReplace && isVisible$1(getConfirmButton())) {\n      buttonToReplace = getConfirmButton();\n    }\n    show(actions);\n    if (buttonToReplace) {\n      hide(buttonToReplace);\n      loader.setAttribute('data-button-to-replace', buttonToReplace.className);\n      actions.insertBefore(loader, buttonToReplace);\n    }\n    addClass([popup, actions], swalClasses.loading);\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  var handleInputOptionsAndValue = function handleInputOptionsAndValue(instance, params) {\n    if (params.input === 'select' || params.input === 'radio') {\n      handleInputOptions(instance, params);\n    } else if (['text', 'email', 'number', 'tel', 'textarea'].some(function (i) {\n      return i === params.input;\n    }) && (hasToPromiseFn(params.inputValue) || isPromise(params.inputValue))) {\n      showLoading(getConfirmButton());\n      handleInputValue(instance, params);\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} innerParams\n   * @returns {SweetAlertInputValue}\n   */\n  var getInputValue = function getInputValue(instance, innerParams) {\n    var input = instance.getInput();\n    if (!input) {\n      return null;\n    }\n    switch (innerParams.input) {\n      case 'checkbox':\n        return getCheckboxValue(input);\n      case 'radio':\n        return getRadioValue(input);\n      case 'file':\n        return getFileValue(input);\n      default:\n        return innerParams.inputAutoTrim ? input.value.trim() : input.value;\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {number}\n   */\n  var getCheckboxValue = function getCheckboxValue(input) {\n    return input.checked ? 1 : 0;\n  };\n\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {string | null}\n   */\n  var getRadioValue = function getRadioValue(input) {\n    return input.checked ? input.value : null;\n  };\n\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {FileList | File | null}\n   */\n  var getFileValue = function getFileValue(input) {\n    return input.files && input.files.length ? input.getAttribute('multiple') !== null ? input.files : input.files[0] : null;\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  var handleInputOptions = function handleInputOptions(instance, params) {\n    var popup = getPopup();\n    if (!popup) {\n      return;\n    }\n    /**\n     * @param {Record<string, any>} inputOptions\n     */\n    var processInputOptions = function processInputOptions(inputOptions) {\n      if (params.input === 'select') {\n        populateSelectOptions(popup, formatInputOptions(inputOptions), params);\n      } else if (params.input === 'radio') {\n        populateRadioOptions(popup, formatInputOptions(inputOptions), params);\n      }\n    };\n    if (hasToPromiseFn(params.inputOptions) || isPromise(params.inputOptions)) {\n      showLoading(getConfirmButton());\n      asPromise(params.inputOptions).then(function (inputOptions) {\n        instance.hideLoading();\n        processInputOptions(inputOptions);\n      });\n    } else if (_typeof(params.inputOptions) === 'object') {\n      processInputOptions(params.inputOptions);\n    } else {\n      error(\"Unexpected type of inputOptions! Expected object, Map or Promise, got \".concat(_typeof(params.inputOptions)));\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  var handleInputValue = function handleInputValue(instance, params) {\n    var input = instance.getInput();\n    if (!input) {\n      return;\n    }\n    hide(input);\n    asPromise(params.inputValue).then(function (inputValue) {\n      input.value = params.input === 'number' ? \"\".concat(parseFloat(inputValue) || 0) : \"\".concat(inputValue);\n      show(input);\n      input.focus();\n      instance.hideLoading();\n    })[\"catch\"](function (err) {\n      error(\"Error in inputValue promise: \".concat(err));\n      input.value = '';\n      show(input);\n      input.focus();\n      instance.hideLoading();\n    });\n  };\n\n  /**\n   * @param {HTMLElement} popup\n   * @param {InputOptionFlattened[]} inputOptions\n   * @param {SweetAlertOptions} params\n   */\n  function populateSelectOptions(popup, inputOptions, params) {\n    var select = getDirectChildByClass(popup, swalClasses.select);\n    if (!select) {\n      return;\n    }\n    /**\n     * @param {HTMLElement} parent\n     * @param {string} optionLabel\n     * @param {string} optionValue\n     */\n    var renderOption = function renderOption(parent, optionLabel, optionValue) {\n      var option = document.createElement('option');\n      option.value = optionValue;\n      setInnerHtml(option, optionLabel);\n      option.selected = isSelected(optionValue, params.inputValue);\n      parent.appendChild(option);\n    };\n    inputOptions.forEach(function (inputOption) {\n      var optionValue = inputOption[0];\n      var optionLabel = inputOption[1];\n      // <optgroup> spec:\n      // https://www.w3.org/TR/html401/interact/forms.html#h-17.6\n      // \"...all OPTGROUP elements must be specified directly within a SELECT element (i.e., groups may not be nested)...\"\n      // check whether this is a <optgroup>\n      if (Array.isArray(optionLabel)) {\n        // if it is an array, then it is an <optgroup>\n        var optgroup = document.createElement('optgroup');\n        optgroup.label = optionValue;\n        optgroup.disabled = false; // not configurable for now\n        select.appendChild(optgroup);\n        optionLabel.forEach(function (o) {\n          return renderOption(optgroup, o[1], o[0]);\n        });\n      } else {\n        // case of <option>\n        renderOption(select, optionLabel, optionValue);\n      }\n    });\n    select.focus();\n  }\n\n  /**\n   * @param {HTMLElement} popup\n   * @param {InputOptionFlattened[]} inputOptions\n   * @param {SweetAlertOptions} params\n   */\n  function populateRadioOptions(popup, inputOptions, params) {\n    var radio = getDirectChildByClass(popup, swalClasses.radio);\n    if (!radio) {\n      return;\n    }\n    inputOptions.forEach(function (inputOption) {\n      var radioValue = inputOption[0];\n      var radioLabel = inputOption[1];\n      var radioInput = document.createElement('input');\n      var radioLabelElement = document.createElement('label');\n      radioInput.type = 'radio';\n      radioInput.name = swalClasses.radio;\n      radioInput.value = radioValue;\n      if (isSelected(radioValue, params.inputValue)) {\n        radioInput.checked = true;\n      }\n      var label = document.createElement('span');\n      setInnerHtml(label, radioLabel);\n      label.className = swalClasses.label;\n      radioLabelElement.appendChild(radioInput);\n      radioLabelElement.appendChild(label);\n      radio.appendChild(radioLabelElement);\n    });\n    var radios = radio.querySelectorAll('input');\n    if (radios.length) {\n      radios[0].focus();\n    }\n  }\n\n  /**\n   * Converts `inputOptions` into an array of `[value, label]`s\n   *\n   * @param {Record<string, any>} inputOptions\n   * @typedef {string[]} InputOptionFlattened\n   * @returns {InputOptionFlattened[]}\n   */\n  var formatInputOptions = function formatInputOptions(inputOptions) {\n    /** @type {InputOptionFlattened[]} */\n    var result = [];\n    if (inputOptions instanceof Map) {\n      inputOptions.forEach(function (value, key) {\n        var valueFormatted = value;\n        if (_typeof(valueFormatted) === 'object') {\n          // case of <optgroup>\n          valueFormatted = formatInputOptions(valueFormatted);\n        }\n        result.push([key, valueFormatted]);\n      });\n    } else {\n      Object.keys(inputOptions).forEach(function (key) {\n        var valueFormatted = inputOptions[key];\n        if (_typeof(valueFormatted) === 'object') {\n          // case of <optgroup>\n          valueFormatted = formatInputOptions(valueFormatted);\n        }\n        result.push([key, valueFormatted]);\n      });\n    }\n    return result;\n  };\n\n  /**\n   * @param {string} optionValue\n   * @param {SweetAlertInputValue} inputValue\n   * @returns {boolean}\n   */\n  var isSelected = function isSelected(optionValue, inputValue) {\n    return !!inputValue && inputValue.toString() === optionValue.toString();\n  };\n  var _this = undefined;\n\n  /**\n   * @param {SweetAlert} instance\n   */\n  var handleConfirmButtonClick = function handleConfirmButtonClick(instance) {\n    var innerParams = privateProps.innerParams.get(instance);\n    instance.disableButtons();\n    if (innerParams.input) {\n      handleConfirmOrDenyWithInput(instance, 'confirm');\n    } else {\n      confirm(instance, true);\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   */\n  var handleDenyButtonClick = function handleDenyButtonClick(instance) {\n    var innerParams = privateProps.innerParams.get(instance);\n    instance.disableButtons();\n    if (innerParams.returnInputValueOnDeny) {\n      handleConfirmOrDenyWithInput(instance, 'deny');\n    } else {\n      deny(instance, false);\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {Function} dismissWith\n   */\n  var handleCancelButtonClick = function handleCancelButtonClick(instance, dismissWith) {\n    instance.disableButtons();\n    dismissWith(DismissReason.cancel);\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {'confirm' | 'deny'} type\n   */\n  var handleConfirmOrDenyWithInput = function handleConfirmOrDenyWithInput(instance, type) {\n    var innerParams = privateProps.innerParams.get(instance);\n    if (!innerParams.input) {\n      error(\"The \\\"input\\\" parameter is needed to be set when using returnInputValueOn\".concat(capitalizeFirstLetter(type)));\n      return;\n    }\n    var input = instance.getInput();\n    var inputValue = getInputValue(instance, innerParams);\n    if (innerParams.inputValidator) {\n      handleInputValidator(instance, inputValue, type);\n    } else if (input && !input.checkValidity()) {\n      instance.enableButtons();\n      instance.showValidationMessage(innerParams.validationMessage);\n    } else if (type === 'deny') {\n      deny(instance, inputValue);\n    } else {\n      confirm(instance, inputValue);\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertInputValue} inputValue\n   * @param {'confirm' | 'deny'} type\n   */\n  var handleInputValidator = function handleInputValidator(instance, inputValue, type) {\n    var innerParams = privateProps.innerParams.get(instance);\n    instance.disableInput();\n    var validationPromise = Promise.resolve().then(function () {\n      return asPromise(innerParams.inputValidator(inputValue, innerParams.validationMessage));\n    });\n    validationPromise.then(function (validationMessage) {\n      instance.enableButtons();\n      instance.enableInput();\n      if (validationMessage) {\n        instance.showValidationMessage(validationMessage);\n      } else if (type === 'deny') {\n        deny(instance, inputValue);\n      } else {\n        confirm(instance, inputValue);\n      }\n    });\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {any} value\n   */\n  var deny = function deny(instance, value) {\n    var innerParams = privateProps.innerParams.get(instance || _this);\n    if (innerParams.showLoaderOnDeny) {\n      showLoading(getDenyButton());\n    }\n    if (innerParams.preDeny) {\n      instance.isAwaitingPromise = true; // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preDeny's promise is received\n      var preDenyPromise = Promise.resolve().then(function () {\n        return asPromise(innerParams.preDeny(value, innerParams.validationMessage));\n      });\n      preDenyPromise.then(function (preDenyValue) {\n        if (preDenyValue === false) {\n          instance.hideLoading();\n          handleAwaitingPromise(instance);\n        } else {\n          instance.close({\n            isDenied: true,\n            value: typeof preDenyValue === 'undefined' ? value : preDenyValue\n          });\n        }\n      })[\"catch\"](function (error) {\n        return rejectWith(instance || _this, error);\n      });\n    } else {\n      instance.close({\n        isDenied: true,\n        value: value\n      });\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {any} value\n   */\n  var succeedWith = function succeedWith(instance, value) {\n    instance.close({\n      isConfirmed: true,\n      value: value\n    });\n  };\n\n  /**\n   *\n   * @param {SweetAlert} instance\n   * @param {string} error\n   */\n  var rejectWith = function rejectWith(instance, error) {\n    instance.rejectPromise(error);\n  };\n\n  /**\n   *\n   * @param {SweetAlert} instance\n   * @param {any} value\n   */\n  var confirm = function confirm(instance, value) {\n    var innerParams = privateProps.innerParams.get(instance || _this);\n    if (innerParams.showLoaderOnConfirm) {\n      showLoading();\n    }\n    if (innerParams.preConfirm) {\n      instance.resetValidationMessage();\n      instance.isAwaitingPromise = true; // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preConfirm's promise is received\n      var preConfirmPromise = Promise.resolve().then(function () {\n        return asPromise(innerParams.preConfirm(value, innerParams.validationMessage));\n      });\n      preConfirmPromise.then(function (preConfirmValue) {\n        if (isVisible$1(getValidationMessage()) || preConfirmValue === false) {\n          instance.hideLoading();\n          handleAwaitingPromise(instance);\n        } else {\n          succeedWith(instance, typeof preConfirmValue === 'undefined' ? value : preConfirmValue);\n        }\n      })[\"catch\"](function (error) {\n        return rejectWith(instance || _this, error);\n      });\n    } else {\n      succeedWith(instance, value);\n    }\n  };\n\n  /**\n   * Hides loader and shows back the button which was hidden by .showLoading()\n   */\n  function hideLoading() {\n    // do nothing if popup is closed\n    var innerParams = privateProps.innerParams.get(this);\n    if (!innerParams) {\n      return;\n    }\n    var domCache = privateProps.domCache.get(this);\n    hide(domCache.loader);\n    if (isToast()) {\n      if (innerParams.icon) {\n        show(getIcon());\n      }\n    } else {\n      showRelatedButton(domCache);\n    }\n    removeClass([domCache.popup, domCache.actions], swalClasses.loading);\n    domCache.popup.removeAttribute('aria-busy');\n    domCache.popup.removeAttribute('data-loading');\n    domCache.confirmButton.disabled = false;\n    domCache.denyButton.disabled = false;\n    domCache.cancelButton.disabled = false;\n  }\n  var showRelatedButton = function showRelatedButton(domCache) {\n    var buttonToReplace = domCache.popup.getElementsByClassName(domCache.loader.getAttribute('data-button-to-replace'));\n    if (buttonToReplace.length) {\n      show(buttonToReplace[0], 'inline-block');\n    } else if (allButtonsAreHidden()) {\n      hide(domCache.actions);\n    }\n  };\n\n  /**\n   * Gets the input DOM node, this method works with input parameter.\n   *\n   * @returns {HTMLInputElement | null}\n   */\n  function getInput() {\n    var innerParams = privateProps.innerParams.get(this);\n    var domCache = privateProps.domCache.get(this);\n    if (!domCache) {\n      return null;\n    }\n    return getInput$1(domCache.popup, innerParams.input);\n  }\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {string[]} buttons\n   * @param {boolean} disabled\n   */\n  function setButtonsDisabled(instance, buttons, disabled) {\n    var domCache = privateProps.domCache.get(instance);\n    buttons.forEach(function (button) {\n      domCache[button].disabled = disabled;\n    });\n  }\n\n  /**\n   * @param {HTMLInputElement | null} input\n   * @param {boolean} disabled\n   */\n  function setInputDisabled(input, disabled) {\n    var popup = getPopup();\n    if (!popup || !input) {\n      return;\n    }\n    if (input.type === 'radio') {\n      /** @type {NodeListOf<HTMLInputElement>} */\n      var radios = popup.querySelectorAll(\"[name=\\\"\".concat(swalClasses.radio, \"\\\"]\"));\n      for (var i = 0; i < radios.length; i++) {\n        radios[i].disabled = disabled;\n      }\n    } else {\n      input.disabled = disabled;\n    }\n  }\n\n  /**\n   * Enable all the buttons\n   * @this {SweetAlert}\n   */\n  function enableButtons() {\n    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], false);\n  }\n\n  /**\n   * Disable all the buttons\n   * @this {SweetAlert}\n   */\n  function disableButtons() {\n    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], true);\n  }\n\n  /**\n   * Enable the input field\n   * @this {SweetAlert}\n   */\n  function enableInput() {\n    setInputDisabled(this.getInput(), false);\n  }\n\n  /**\n   * Disable the input field\n   * @this {SweetAlert}\n   */\n  function disableInput() {\n    setInputDisabled(this.getInput(), true);\n  }\n\n  /**\n   * Show block with validation message\n   *\n   * @param {string} error\n   * @this {SweetAlert}\n   */\n  function showValidationMessage(error) {\n    var domCache = privateProps.domCache.get(this);\n    var params = privateProps.innerParams.get(this);\n    setInnerHtml(domCache.validationMessage, error);\n    domCache.validationMessage.className = swalClasses['validation-message'];\n    if (params.customClass && params.customClass.validationMessage) {\n      addClass(domCache.validationMessage, params.customClass.validationMessage);\n    }\n    show(domCache.validationMessage);\n    var input = this.getInput();\n    if (input) {\n      input.setAttribute('aria-invalid', 'true');\n      input.setAttribute('aria-describedby', swalClasses['validation-message']);\n      focusInput(input);\n      addClass(input, swalClasses.inputerror);\n    }\n  }\n\n  /**\n   * Hide block with validation message\n   *\n   * @this {SweetAlert}\n   */\n  function resetValidationMessage() {\n    var domCache = privateProps.domCache.get(this);\n    if (domCache.validationMessage) {\n      hide(domCache.validationMessage);\n    }\n    var input = this.getInput();\n    if (input) {\n      input.removeAttribute('aria-invalid');\n      input.removeAttribute('aria-describedby');\n      removeClass(input, swalClasses.inputerror);\n    }\n  }\n  var defaultParams = {\n    title: '',\n    titleText: '',\n    text: '',\n    html: '',\n    footer: '',\n    icon: undefined,\n    iconColor: undefined,\n    iconHtml: undefined,\n    template: undefined,\n    toast: false,\n    animation: true,\n    showClass: {\n      popup: 'swal2-show',\n      backdrop: 'swal2-backdrop-show',\n      icon: 'swal2-icon-show'\n    },\n    hideClass: {\n      popup: 'swal2-hide',\n      backdrop: 'swal2-backdrop-hide',\n      icon: 'swal2-icon-hide'\n    },\n    customClass: {},\n    target: 'body',\n    color: undefined,\n    backdrop: true,\n    heightAuto: true,\n    allowOutsideClick: true,\n    allowEscapeKey: true,\n    allowEnterKey: true,\n    stopKeydownPropagation: true,\n    keydownListenerCapture: false,\n    showConfirmButton: true,\n    showDenyButton: false,\n    showCancelButton: false,\n    preConfirm: undefined,\n    preDeny: undefined,\n    confirmButtonText: 'OK',\n    confirmButtonAriaLabel: '',\n    confirmButtonColor: undefined,\n    denyButtonText: 'No',\n    denyButtonAriaLabel: '',\n    denyButtonColor: undefined,\n    cancelButtonText: 'Cancel',\n    cancelButtonAriaLabel: '',\n    cancelButtonColor: undefined,\n    buttonsStyling: true,\n    reverseButtons: false,\n    focusConfirm: true,\n    focusDeny: false,\n    focusCancel: false,\n    returnFocus: true,\n    showCloseButton: false,\n    closeButtonHtml: '&times;',\n    closeButtonAriaLabel: 'Close this dialog',\n    loaderHtml: '',\n    showLoaderOnConfirm: false,\n    showLoaderOnDeny: false,\n    imageUrl: undefined,\n    imageWidth: undefined,\n    imageHeight: undefined,\n    imageAlt: '',\n    timer: undefined,\n    timerProgressBar: false,\n    width: undefined,\n    padding: undefined,\n    background: undefined,\n    input: undefined,\n    inputPlaceholder: '',\n    inputLabel: '',\n    inputValue: '',\n    inputOptions: {},\n    inputAutoFocus: true,\n    inputAutoTrim: true,\n    inputAttributes: {},\n    inputValidator: undefined,\n    returnInputValueOnDeny: false,\n    validationMessage: undefined,\n    grow: false,\n    position: 'center',\n    progressSteps: [],\n    currentProgressStep: undefined,\n    progressStepsDistance: undefined,\n    willOpen: undefined,\n    didOpen: undefined,\n    didRender: undefined,\n    willClose: undefined,\n    didClose: undefined,\n    didDestroy: undefined,\n    scrollbarPadding: true\n  };\n  var updatableParams = ['allowEscapeKey', 'allowOutsideClick', 'background', 'buttonsStyling', 'cancelButtonAriaLabel', 'cancelButtonColor', 'cancelButtonText', 'closeButtonAriaLabel', 'closeButtonHtml', 'color', 'confirmButtonAriaLabel', 'confirmButtonColor', 'confirmButtonText', 'currentProgressStep', 'customClass', 'denyButtonAriaLabel', 'denyButtonColor', 'denyButtonText', 'didClose', 'didDestroy', 'footer', 'hideClass', 'html', 'icon', 'iconColor', 'iconHtml', 'imageAlt', 'imageHeight', 'imageUrl', 'imageWidth', 'preConfirm', 'preDeny', 'progressSteps', 'returnFocus', 'reverseButtons', 'showCancelButton', 'showCloseButton', 'showConfirmButton', 'showDenyButton', 'text', 'title', 'titleText', 'willClose'];\n\n  /** @type {Record<string, string>} */\n  var deprecatedParams = {};\n  var toastIncompatibleParams = ['allowOutsideClick', 'allowEnterKey', 'backdrop', 'focusConfirm', 'focusDeny', 'focusCancel', 'returnFocus', 'heightAuto', 'keydownListenerCapture'];\n\n  /**\n   * Is valid parameter\n   *\n   * @param {string} paramName\n   * @returns {boolean}\n   */\n  var isValidParameter = function isValidParameter(paramName) {\n    return Object.prototype.hasOwnProperty.call(defaultParams, paramName);\n  };\n\n  /**\n   * Is valid parameter for Swal.update() method\n   *\n   * @param {string} paramName\n   * @returns {boolean}\n   */\n  var isUpdatableParameter = function isUpdatableParameter(paramName) {\n    return updatableParams.indexOf(paramName) !== -1;\n  };\n\n  /**\n   * Is deprecated parameter\n   *\n   * @param {string} paramName\n   * @returns {string | undefined}\n   */\n  var isDeprecatedParameter = function isDeprecatedParameter(paramName) {\n    return deprecatedParams[paramName];\n  };\n\n  /**\n   * @param {string} param\n   */\n  var checkIfParamIsValid = function checkIfParamIsValid(param) {\n    if (!isValidParameter(param)) {\n      warn(\"Unknown parameter \\\"\".concat(param, \"\\\"\"));\n    }\n  };\n\n  /**\n   * @param {string} param\n   */\n  var checkIfToastParamIsValid = function checkIfToastParamIsValid(param) {\n    if (toastIncompatibleParams.includes(param)) {\n      warn(\"The parameter \\\"\".concat(param, \"\\\" is incompatible with toasts\"));\n    }\n  };\n\n  /**\n   * @param {string} param\n   */\n  var checkIfParamIsDeprecated = function checkIfParamIsDeprecated(param) {\n    var isDeprecated = isDeprecatedParameter(param);\n    if (isDeprecated) {\n      warnAboutDeprecation(param, isDeprecated);\n    }\n  };\n\n  /**\n   * Show relevant warnings for given params\n   *\n   * @param {SweetAlertOptions} params\n   */\n  var showWarningsForParams = function showWarningsForParams(params) {\n    if (params.backdrop === false && params.allowOutsideClick) {\n      warn('\"allowOutsideClick\" parameter requires `backdrop` parameter to be set to `true`');\n    }\n    for (var param in params) {\n      checkIfParamIsValid(param);\n      if (params.toast) {\n        checkIfToastParamIsValid(param);\n      }\n      checkIfParamIsDeprecated(param);\n    }\n  };\n\n  /**\n   * Updates popup parameters.\n   *\n   * @param {SweetAlertOptions} params\n   */\n  function update(params) {\n    var popup = getPopup();\n    var innerParams = privateProps.innerParams.get(this);\n    if (!popup || hasClass(popup, innerParams.hideClass.popup)) {\n      warn(\"You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.\");\n      return;\n    }\n    var validUpdatableParams = filterValidParams(params);\n    var updatedParams = Object.assign({}, innerParams, validUpdatableParams);\n    render(this, updatedParams);\n    privateProps.innerParams.set(this, updatedParams);\n    Object.defineProperties(this, {\n      params: {\n        value: Object.assign({}, this.params, params),\n        writable: false,\n        enumerable: true\n      }\n    });\n  }\n\n  /**\n   * @param {SweetAlertOptions} params\n   * @returns {SweetAlertOptions}\n   */\n  var filterValidParams = function filterValidParams(params) {\n    var validUpdatableParams = {};\n    Object.keys(params).forEach(function (param) {\n      if (isUpdatableParameter(param)) {\n        validUpdatableParams[param] = params[param];\n      } else {\n        warn(\"Invalid parameter to update: \".concat(param));\n      }\n    });\n    return validUpdatableParams;\n  };\n\n  /**\n   * Dispose the current SweetAlert2 instance\n   */\n  function _destroy() {\n    var domCache = privateProps.domCache.get(this);\n    var innerParams = privateProps.innerParams.get(this);\n    if (!innerParams) {\n      disposeWeakMaps(this); // The WeakMaps might have been partly destroyed, we must recall it to dispose any remaining WeakMaps #2335\n      return; // This instance has already been destroyed\n    }\n\n    // Check if there is another Swal closing\n    if (domCache.popup && globalState.swalCloseEventFinishedCallback) {\n      globalState.swalCloseEventFinishedCallback();\n      delete globalState.swalCloseEventFinishedCallback;\n    }\n    if (typeof innerParams.didDestroy === 'function') {\n      innerParams.didDestroy();\n    }\n    disposeSwal(this);\n  }\n\n  /**\n   * @param {SweetAlert} instance\n   */\n  var disposeSwal = function disposeSwal(instance) {\n    disposeWeakMaps(instance);\n    // Unset this.params so GC will dispose it (#1569)\n    delete instance.params;\n    // Unset globalState props so GC will dispose globalState (#1569)\n    delete globalState.keydownHandler;\n    delete globalState.keydownTarget;\n    // Unset currentInstance\n    delete globalState.currentInstance;\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   */\n  var disposeWeakMaps = function disposeWeakMaps(instance) {\n    // If the current instance is awaiting a promise result, we keep the privateMethods to call them once the promise result is retrieved #2335\n    if (instance.isAwaitingPromise) {\n      unsetWeakMaps(privateProps, instance);\n      instance.isAwaitingPromise = true;\n    } else {\n      unsetWeakMaps(privateMethods, instance);\n      unsetWeakMaps(privateProps, instance);\n      delete instance.isAwaitingPromise;\n      // Unset instance methods\n      delete instance.disableButtons;\n      delete instance.enableButtons;\n      delete instance.getInput;\n      delete instance.disableInput;\n      delete instance.enableInput;\n      delete instance.hideLoading;\n      delete instance.disableLoading;\n      delete instance.showValidationMessage;\n      delete instance.resetValidationMessage;\n      delete instance.close;\n      delete instance.closePopup;\n      delete instance.closeModal;\n      delete instance.closeToast;\n      delete instance.rejectPromise;\n      delete instance.update;\n      delete instance._destroy;\n    }\n  };\n\n  /**\n   * @param {object} obj\n   * @param {SweetAlert} instance\n   */\n  var unsetWeakMaps = function unsetWeakMaps(obj, instance) {\n    for (var i in obj) {\n      obj[i][\"delete\"](instance);\n    }\n  };\n  var instanceMethods = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    _destroy: _destroy,\n    close: close,\n    closeModal: close,\n    closePopup: close,\n    closeToast: close,\n    disableButtons: disableButtons,\n    disableInput: disableInput,\n    disableLoading: hideLoading,\n    enableButtons: enableButtons,\n    enableInput: enableInput,\n    getInput: getInput,\n    handleAwaitingPromise: handleAwaitingPromise,\n    hideLoading: hideLoading,\n    rejectPromise: rejectPromise,\n    resetValidationMessage: resetValidationMessage,\n    showValidationMessage: showValidationMessage,\n    update: update\n  });\n\n  /**\n   * @param {SweetAlertOptions} innerParams\n   * @param {DomCache} domCache\n   * @param {Function} dismissWith\n   */\n  var handlePopupClick = function handlePopupClick(innerParams, domCache, dismissWith) {\n    if (innerParams.toast) {\n      handleToastClick(innerParams, domCache, dismissWith);\n    } else {\n      // Ignore click events that had mousedown on the popup but mouseup on the container\n      // This can happen when the user drags a slider\n      handleModalMousedown(domCache);\n\n      // Ignore click events that had mousedown on the container but mouseup on the popup\n      handleContainerMousedown(domCache);\n      handleModalClick(innerParams, domCache, dismissWith);\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} innerParams\n   * @param {DomCache} domCache\n   * @param {Function} dismissWith\n   */\n  var handleToastClick = function handleToastClick(innerParams, domCache, dismissWith) {\n    // Closing toast by internal click\n    domCache.popup.onclick = function () {\n      if (innerParams && (isAnyButtonShown(innerParams) || innerParams.timer || innerParams.input)) {\n        return;\n      }\n      dismissWith(DismissReason.close);\n    };\n  };\n\n  /**\n   * @param {SweetAlertOptions} innerParams\n   * @returns {boolean}\n   */\n  var isAnyButtonShown = function isAnyButtonShown(innerParams) {\n    return !!(innerParams.showConfirmButton || innerParams.showDenyButton || innerParams.showCancelButton || innerParams.showCloseButton);\n  };\n  var ignoreOutsideClick = false;\n\n  /**\n   * @param {DomCache} domCache\n   */\n  var handleModalMousedown = function handleModalMousedown(domCache) {\n    domCache.popup.onmousedown = function () {\n      domCache.container.onmouseup = function (e) {\n        domCache.container.onmouseup = function () {};\n        // We only check if the mouseup target is the container because usually it doesn't\n        // have any other direct children aside of the popup\n        if (e.target === domCache.container) {\n          ignoreOutsideClick = true;\n        }\n      };\n    };\n  };\n\n  /**\n   * @param {DomCache} domCache\n   */\n  var handleContainerMousedown = function handleContainerMousedown(domCache) {\n    domCache.container.onmousedown = function () {\n      domCache.popup.onmouseup = function (e) {\n        domCache.popup.onmouseup = function () {};\n        // We also need to check if the mouseup target is a child of the popup\n        if (e.target === domCache.popup || e.target instanceof HTMLElement && domCache.popup.contains(e.target)) {\n          ignoreOutsideClick = true;\n        }\n      };\n    };\n  };\n\n  /**\n   * @param {SweetAlertOptions} innerParams\n   * @param {DomCache} domCache\n   * @param {Function} dismissWith\n   */\n  var handleModalClick = function handleModalClick(innerParams, domCache, dismissWith) {\n    domCache.container.onclick = function (e) {\n      if (ignoreOutsideClick) {\n        ignoreOutsideClick = false;\n        return;\n      }\n      if (e.target === domCache.container && callIfFunction(innerParams.allowOutsideClick)) {\n        dismissWith(DismissReason.backdrop);\n      }\n    };\n  };\n  var isJqueryElement = function isJqueryElement(elem) {\n    return _typeof(elem) === 'object' && elem.jquery;\n  };\n  var isElement = function isElement(elem) {\n    return elem instanceof Element || isJqueryElement(elem);\n  };\n  var argsToParams = function argsToParams(args) {\n    var params = {};\n    if (_typeof(args[0]) === 'object' && !isElement(args[0])) {\n      Object.assign(params, args[0]);\n    } else {\n      ['title', 'html', 'icon'].forEach(function (name, index) {\n        var arg = args[index];\n        if (typeof arg === 'string' || isElement(arg)) {\n          params[name] = arg;\n        } else if (arg !== undefined) {\n          error(\"Unexpected type of \".concat(name, \"! Expected \\\"string\\\" or \\\"Element\\\", got \").concat(_typeof(arg)));\n        }\n      });\n    }\n    return params;\n  };\n\n  /**\n   * Main method to create a new SweetAlert2 popup\n   *\n   * @param  {...SweetAlertOptions} args\n   * @returns {Promise<SweetAlertResult>}\n   */\n  function fire() {\n    var Swal = this; // eslint-disable-line @typescript-eslint/no-this-alias\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return _construct(Swal, args);\n  }\n\n  /**\n   * Returns an extended version of `Swal` containing `params` as defaults.\n   * Useful for reusing Swal configuration.\n   *\n   * For example:\n   *\n   * Before:\n   * const textPromptOptions = { input: 'text', showCancelButton: true }\n   * const {value: firstName} = await Swal.fire({ ...textPromptOptions, title: 'What is your first name?' })\n   * const {value: lastName} = await Swal.fire({ ...textPromptOptions, title: 'What is your last name?' })\n   *\n   * After:\n   * const TextPrompt = Swal.mixin({ input: 'text', showCancelButton: true })\n   * const {value: firstName} = await TextPrompt('What is your first name?')\n   * const {value: lastName} = await TextPrompt('What is your last name?')\n   *\n   * @param {SweetAlertOptions} mixinParams\n   * @returns {SweetAlert}\n   */\n  function mixin(mixinParams) {\n    var MixinSwal = /*#__PURE__*/function (_this) {\n      _inherits(MixinSwal, _this);\n      var _super = _createSuper(MixinSwal);\n      function MixinSwal() {\n        _classCallCheck(this, MixinSwal);\n        return _super.apply(this, arguments);\n      }\n      _createClass(MixinSwal, [{\n        key: \"_main\",\n        value: function _main(params, priorityMixinParams) {\n          return _get(_getPrototypeOf(MixinSwal.prototype), \"_main\", this).call(this, params, Object.assign({}, mixinParams, priorityMixinParams));\n        }\n      }]);\n      return MixinSwal;\n    }(this); // @ts-ignore\n    return MixinSwal;\n  }\n\n  /**\n   * If `timer` parameter is set, returns number of milliseconds of timer remained.\n   * Otherwise, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  var getTimerLeft = function getTimerLeft() {\n    return globalState.timeout && globalState.timeout.getTimerLeft();\n  };\n\n  /**\n   * Stop timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  var stopTimer = function stopTimer() {\n    if (globalState.timeout) {\n      stopTimerProgressBar();\n      return globalState.timeout.stop();\n    }\n  };\n\n  /**\n   * Resume timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  var resumeTimer = function resumeTimer() {\n    if (globalState.timeout) {\n      var remaining = globalState.timeout.start();\n      animateTimerProgressBar(remaining);\n      return remaining;\n    }\n  };\n\n  /**\n   * Resume timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  var toggleTimer = function toggleTimer() {\n    var timer = globalState.timeout;\n    return timer && (timer.running ? stopTimer() : resumeTimer());\n  };\n\n  /**\n   * Increase timer. Returns number of milliseconds of an updated timer.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @param {number} ms\n   * @returns {number | undefined}\n   */\n  var increaseTimer = function increaseTimer(ms) {\n    if (globalState.timeout) {\n      var remaining = globalState.timeout.increase(ms);\n      animateTimerProgressBar(remaining, true);\n      return remaining;\n    }\n  };\n\n  /**\n   * Check if timer is running. Returns true if timer is running\n   * or false if timer is paused or stopped.\n   * If `timer` parameter isn't set, returns undefined\n   *\n   * @returns {boolean}\n   */\n  var isTimerRunning = function isTimerRunning() {\n    return !!(globalState.timeout && globalState.timeout.isRunning());\n  };\n  var bodyClickListenerAdded = false;\n  var clickHandlers = {};\n\n  /**\n   * @param {string} attr\n   */\n  function bindClickHandler() {\n    var attr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'data-swal-template';\n    clickHandlers[attr] = this;\n    if (!bodyClickListenerAdded) {\n      document.body.addEventListener('click', bodyClickListener);\n      bodyClickListenerAdded = true;\n    }\n  }\n  var bodyClickListener = function bodyClickListener(event) {\n    for (var el = event.target; el && el !== document; el = el.parentNode) {\n      for (var attr in clickHandlers) {\n        var template = el.getAttribute(attr);\n        if (template) {\n          clickHandlers[attr].fire({\n            template: template\n          });\n          return;\n        }\n      }\n    }\n  };\n  var staticMethods = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    argsToParams: argsToParams,\n    bindClickHandler: bindClickHandler,\n    clickCancel: clickCancel,\n    clickConfirm: clickConfirm,\n    clickDeny: clickDeny,\n    enableLoading: showLoading,\n    fire: fire,\n    getActions: getActions,\n    getCancelButton: getCancelButton,\n    getCloseButton: getCloseButton,\n    getConfirmButton: getConfirmButton,\n    getContainer: getContainer,\n    getDenyButton: getDenyButton,\n    getFocusableElements: getFocusableElements,\n    getFooter: getFooter,\n    getHtmlContainer: getHtmlContainer,\n    getIcon: getIcon,\n    getIconContent: getIconContent,\n    getImage: getImage,\n    getInputLabel: getInputLabel,\n    getLoader: getLoader,\n    getPopup: getPopup,\n    getProgressSteps: getProgressSteps,\n    getTimerLeft: getTimerLeft,\n    getTimerProgressBar: getTimerProgressBar,\n    getTitle: getTitle,\n    getValidationMessage: getValidationMessage,\n    increaseTimer: increaseTimer,\n    isDeprecatedParameter: isDeprecatedParameter,\n    isLoading: isLoading,\n    isTimerRunning: isTimerRunning,\n    isUpdatableParameter: isUpdatableParameter,\n    isValidParameter: isValidParameter,\n    isVisible: isVisible,\n    mixin: mixin,\n    resumeTimer: resumeTimer,\n    showLoading: showLoading,\n    stopTimer: stopTimer,\n    toggleTimer: toggleTimer\n  });\n  var Timer = /*#__PURE__*/function () {\n    /**\n     * @param {Function} callback\n     * @param {number} delay\n     */\n    function Timer(callback, delay) {\n      _classCallCheck(this, Timer);\n      this.callback = callback;\n      this.remaining = delay;\n      this.running = false;\n      this.start();\n    }\n\n    /**\n     * @returns {number}\n     */\n    _createClass(Timer, [{\n      key: \"start\",\n      value: function start() {\n        if (!this.running) {\n          this.running = true;\n          this.started = new Date();\n          this.id = setTimeout(this.callback, this.remaining);\n        }\n        return this.remaining;\n      }\n\n      /**\n       * @returns {number}\n       */\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        if (this.started && this.running) {\n          this.running = false;\n          clearTimeout(this.id);\n          this.remaining -= new Date().getTime() - this.started.getTime();\n        }\n        return this.remaining;\n      }\n\n      /**\n       * @param {number} n\n       * @returns {number}\n       */\n    }, {\n      key: \"increase\",\n      value: function increase(n) {\n        var running = this.running;\n        if (running) {\n          this.stop();\n        }\n        this.remaining += n;\n        if (running) {\n          this.start();\n        }\n        return this.remaining;\n      }\n\n      /**\n       * @returns {number}\n       */\n    }, {\n      key: \"getTimerLeft\",\n      value: function getTimerLeft() {\n        if (this.running) {\n          this.stop();\n          this.start();\n        }\n        return this.remaining;\n      }\n\n      /**\n       * @returns {boolean}\n       */\n    }, {\n      key: \"isRunning\",\n      value: function isRunning() {\n        return this.running;\n      }\n    }]);\n    return Timer;\n  }();\n  var swalStringParams = ['swal-title', 'swal-html', 'swal-footer'];\n\n  /**\n   * @param {SweetAlertOptions} params\n   * @returns {SweetAlertOptions}\n   */\n  var getTemplateParams = function getTemplateParams(params) {\n    /** @type {HTMLTemplateElement} */\n    var template = typeof params.template === 'string' ? document.querySelector(params.template) : params.template;\n    if (!template) {\n      return {};\n    }\n    /** @type {DocumentFragment} */\n    var templateContent = template.content;\n    showWarningsForElements(templateContent);\n    var result = Object.assign(getSwalParams(templateContent), getSwalFunctionParams(templateContent), getSwalButtons(templateContent), getSwalImage(templateContent), getSwalIcon(templateContent), getSwalInput(templateContent), getSwalStringParams(templateContent, swalStringParams));\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  var getSwalParams = function getSwalParams(templateContent) {\n    var result = {};\n    /** @type {HTMLElement[]} */\n    var swalParams = Array.from(templateContent.querySelectorAll('swal-param'));\n    swalParams.forEach(function (param) {\n      showWarningsForAttributes(param, ['name', 'value']);\n      var paramName = param.getAttribute('name');\n      var value = param.getAttribute('value');\n      if (typeof defaultParams[paramName] === 'boolean') {\n        result[paramName] = value !== 'false';\n      } else if (_typeof(defaultParams[paramName]) === 'object') {\n        result[paramName] = JSON.parse(value);\n      } else {\n        result[paramName] = value;\n      }\n    });\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  var getSwalFunctionParams = function getSwalFunctionParams(templateContent) {\n    var result = {};\n    /** @type {HTMLElement[]} */\n    var swalFunctions = Array.from(templateContent.querySelectorAll('swal-function-param'));\n    swalFunctions.forEach(function (param) {\n      var paramName = param.getAttribute('name');\n      var value = param.getAttribute('value');\n      result[paramName] = new Function(\"return \".concat(value))();\n    });\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  var getSwalButtons = function getSwalButtons(templateContent) {\n    var result = {};\n    /** @type {HTMLElement[]} */\n    var swalButtons = Array.from(templateContent.querySelectorAll('swal-button'));\n    swalButtons.forEach(function (button) {\n      showWarningsForAttributes(button, ['type', 'color', 'aria-label']);\n      var type = button.getAttribute('type');\n      result[\"\".concat(type, \"ButtonText\")] = button.innerHTML;\n      result[\"show\".concat(capitalizeFirstLetter(type), \"Button\")] = true;\n      if (button.hasAttribute('color')) {\n        result[\"\".concat(type, \"ButtonColor\")] = button.getAttribute('color');\n      }\n      if (button.hasAttribute('aria-label')) {\n        result[\"\".concat(type, \"ButtonAriaLabel\")] = button.getAttribute('aria-label');\n      }\n    });\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  var getSwalImage = function getSwalImage(templateContent) {\n    var result = {};\n    /** @type {HTMLElement} */\n    var image = templateContent.querySelector('swal-image');\n    if (image) {\n      showWarningsForAttributes(image, ['src', 'width', 'height', 'alt']);\n      if (image.hasAttribute('src')) {\n        result.imageUrl = image.getAttribute('src');\n      }\n      if (image.hasAttribute('width')) {\n        result.imageWidth = image.getAttribute('width');\n      }\n      if (image.hasAttribute('height')) {\n        result.imageHeight = image.getAttribute('height');\n      }\n      if (image.hasAttribute('alt')) {\n        result.imageAlt = image.getAttribute('alt');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  var getSwalIcon = function getSwalIcon(templateContent) {\n    var result = {};\n    /** @type {HTMLElement} */\n    var icon = templateContent.querySelector('swal-icon');\n    if (icon) {\n      showWarningsForAttributes(icon, ['type', 'color']);\n      if (icon.hasAttribute('type')) {\n        /** @type {SweetAlertIcon} */\n        // @ts-ignore\n        result.icon = icon.getAttribute('type');\n      }\n      if (icon.hasAttribute('color')) {\n        result.iconColor = icon.getAttribute('color');\n      }\n      result.iconHtml = icon.innerHTML;\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  var getSwalInput = function getSwalInput(templateContent) {\n    var result = {};\n    /** @type {HTMLElement} */\n    var input = templateContent.querySelector('swal-input');\n    if (input) {\n      showWarningsForAttributes(input, ['type', 'label', 'placeholder', 'value']);\n      /** @type {SweetAlertInput} */\n      // @ts-ignore\n      result.input = input.getAttribute('type') || 'text';\n      if (input.hasAttribute('label')) {\n        result.inputLabel = input.getAttribute('label');\n      }\n      if (input.hasAttribute('placeholder')) {\n        result.inputPlaceholder = input.getAttribute('placeholder');\n      }\n      if (input.hasAttribute('value')) {\n        result.inputValue = input.getAttribute('value');\n      }\n    }\n    /** @type {HTMLElement[]} */\n    var inputOptions = Array.from(templateContent.querySelectorAll('swal-input-option'));\n    if (inputOptions.length) {\n      result.inputOptions = {};\n      inputOptions.forEach(function (option) {\n        showWarningsForAttributes(option, ['value']);\n        var optionValue = option.getAttribute('value');\n        var optionName = option.innerHTML;\n        result.inputOptions[optionValue] = optionName;\n      });\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @param {string[]} paramNames\n   * @returns {SweetAlertOptions}\n   */\n  var getSwalStringParams = function getSwalStringParams(templateContent, paramNames) {\n    var result = {};\n    for (var i in paramNames) {\n      var paramName = paramNames[i];\n      /** @type {HTMLElement} */\n      var tag = templateContent.querySelector(paramName);\n      if (tag) {\n        showWarningsForAttributes(tag, []);\n        result[paramName.replace(/^swal-/, '')] = tag.innerHTML.trim();\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   */\n  var showWarningsForElements = function showWarningsForElements(templateContent) {\n    var allowedElements = swalStringParams.concat(['swal-param', 'swal-function-param', 'swal-button', 'swal-image', 'swal-icon', 'swal-input', 'swal-input-option']);\n    Array.from(templateContent.children).forEach(function (el) {\n      var tagName = el.tagName.toLowerCase();\n      if (!allowedElements.includes(tagName)) {\n        warn(\"Unrecognized element <\".concat(tagName, \">\"));\n      }\n    });\n  };\n\n  /**\n   * @param {HTMLElement} el\n   * @param {string[]} allowedAttributes\n   */\n  var showWarningsForAttributes = function showWarningsForAttributes(el, allowedAttributes) {\n    Array.from(el.attributes).forEach(function (attribute) {\n      if (allowedAttributes.indexOf(attribute.name) === -1) {\n        warn([\"Unrecognized attribute \\\"\".concat(attribute.name, \"\\\" on <\").concat(el.tagName.toLowerCase(), \">.\"), \"\".concat(allowedAttributes.length ? \"Allowed attributes are: \".concat(allowedAttributes.join(', ')) : 'To set the value, use HTML within the element.')]);\n      }\n    });\n  };\n  var SHOW_CLASS_TIMEOUT = 10;\n\n  /**\n   * Open popup, add necessary classes and styles, fix scrollbar\n   *\n   * @param {SweetAlertOptions} params\n   */\n  var openPopup = function openPopup(params) {\n    var container = getContainer();\n    var popup = getPopup();\n    if (typeof params.willOpen === 'function') {\n      params.willOpen(popup);\n    }\n    var bodyStyles = window.getComputedStyle(document.body);\n    var initialBodyOverflow = bodyStyles.overflowY;\n    addClasses(container, popup, params);\n\n    // scrolling is 'hidden' until animation is done, after that 'auto'\n    setTimeout(function () {\n      setScrollingVisibility(container, popup);\n    }, SHOW_CLASS_TIMEOUT);\n    if (isModal()) {\n      fixScrollContainer(container, params.scrollbarPadding, initialBodyOverflow);\n      setAriaHidden();\n    }\n    if (!isToast() && !globalState.previousActiveElement) {\n      globalState.previousActiveElement = document.activeElement;\n    }\n    if (typeof params.didOpen === 'function') {\n      setTimeout(function () {\n        return params.didOpen(popup);\n      });\n    }\n    removeClass(container, swalClasses['no-transition']);\n  };\n\n  /**\n   * @param {AnimationEvent} event\n   */\n  var swalOpenAnimationFinished = function swalOpenAnimationFinished(event) {\n    var popup = getPopup();\n    if (event.target !== popup || !animationEndEvent) {\n      return;\n    }\n    var container = getContainer();\n    popup.removeEventListener(animationEndEvent, swalOpenAnimationFinished);\n    container.style.overflowY = 'auto';\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {HTMLElement} popup\n   */\n  var setScrollingVisibility = function setScrollingVisibility(container, popup) {\n    if (animationEndEvent && hasCssAnimation(popup)) {\n      container.style.overflowY = 'hidden';\n      popup.addEventListener(animationEndEvent, swalOpenAnimationFinished);\n    } else {\n      container.style.overflowY = 'auto';\n    }\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {boolean} scrollbarPadding\n   * @param {string} initialBodyOverflow\n   */\n  var fixScrollContainer = function fixScrollContainer(container, scrollbarPadding, initialBodyOverflow) {\n    iOSfix();\n    if (scrollbarPadding && initialBodyOverflow !== 'hidden') {\n      replaceScrollbarWithPadding(initialBodyOverflow);\n    }\n\n    // sweetalert2/issues/1247\n    setTimeout(function () {\n      container.scrollTop = 0;\n    });\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {HTMLElement} popup\n   * @param {SweetAlertOptions} params\n   */\n  var addClasses = function addClasses(container, popup, params) {\n    addClass(container, params.showClass.backdrop);\n    if (params.animation) {\n      // this workaround with opacity is needed for https://github.com/sweetalert2/sweetalert2/issues/2059\n      popup.style.setProperty('opacity', '0', 'important');\n      show(popup, 'grid');\n      setTimeout(function () {\n        // Animate popup right after showing it\n        addClass(popup, params.showClass.popup);\n        // and remove the opacity workaround\n        popup.style.removeProperty('opacity');\n      }, SHOW_CLASS_TIMEOUT); // 10ms in order to fix #2062\n    } else {\n      show(popup, 'grid');\n    }\n    addClass([document.documentElement, document.body], swalClasses.shown);\n    if (params.heightAuto && params.backdrop && !params.toast) {\n      addClass([document.documentElement, document.body], swalClasses['height-auto']);\n    }\n  };\n  var defaultInputValidators = {\n    /**\n     * @param {string} string\n     * @param {string} [validationMessage]\n     * @returns {Promise<string | void>}\n     */\n    email: function email(string, validationMessage) {\n      return /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z0-9-]{2,24}$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid email address');\n    },\n    /**\n     * @param {string} string\n     * @param {string} [validationMessage]\n     * @returns {Promise<string | void>}\n     */\n    url: function url(string, validationMessage) {\n      // taken from https://stackoverflow.com/a/3809435 with a small change from #1306 and #2013\n      return /^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-z]{2,63}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid URL');\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  function setDefaultInputValidators(params) {\n    // Use default `inputValidator` for supported input types if not provided\n    if (params.inputValidator) {\n      return;\n    }\n    if (params.input === 'email') {\n      params.inputValidator = defaultInputValidators['email'];\n    }\n    if (params.input === 'url') {\n      params.inputValidator = defaultInputValidators['url'];\n    }\n  }\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  function validateCustomTargetElement(params) {\n    // Determine if the custom target element is valid\n    if (!params.target || typeof params.target === 'string' && !document.querySelector(params.target) || typeof params.target !== 'string' && !params.target.appendChild) {\n      warn('Target parameter is not valid, defaulting to \"body\"');\n      params.target = 'body';\n    }\n  }\n\n  /**\n   * Set type, text and actions on popup\n   *\n   * @param {SweetAlertOptions} params\n   */\n  function setParameters(params) {\n    setDefaultInputValidators(params);\n\n    // showLoaderOnConfirm && preConfirm\n    if (params.showLoaderOnConfirm && !params.preConfirm) {\n      warn('showLoaderOnConfirm is set to true, but preConfirm is not defined.\\n' + 'showLoaderOnConfirm should be used together with preConfirm, see usage example:\\n' + 'https://sweetalert2.github.io/#ajax-request');\n    }\n    validateCustomTargetElement(params);\n\n    // Replace newlines with <br> in title\n    if (typeof params.title === 'string') {\n      params.title = params.title.split('\\n').join('<br />');\n    }\n    init(params);\n  }\n\n  /** @type {SweetAlert} */\n  var currentInstance;\n  var _promise = /*#__PURE__*/new WeakMap();\n  var SweetAlert = /*#__PURE__*/function () {\n    /**\n     * @param {...any} args\n     * @this {SweetAlert}\n     */\n    function SweetAlert() {\n      _classCallCheck(this, SweetAlert);\n      /**\n       * @type {Promise<SweetAlertResult>}\n       */\n      _classPrivateFieldInitSpec(this, _promise, {\n        writable: true,\n        value: void 0\n      });\n      // Prevent run in Node env\n      if (typeof window === 'undefined') {\n        return;\n      }\n      currentInstance = this;\n\n      // @ts-ignore\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      var outerParams = Object.freeze(this.constructor.argsToParams(args));\n\n      /** @type {Readonly<SweetAlertOptions>} */\n      this.params = outerParams;\n\n      /** @type {boolean} */\n      this.isAwaitingPromise = false;\n      _classPrivateFieldSet(this, _promise, this._main(currentInstance.params));\n    }\n    _createClass(SweetAlert, [{\n      key: \"_main\",\n      value: function _main(userParams) {\n        var mixinParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        showWarningsForParams(Object.assign({}, mixinParams, userParams));\n        if (globalState.currentInstance) {\n          var swalPromiseResolve = privateMethods.swalPromiseResolve.get(globalState.currentInstance);\n          var isAwaitingPromise = globalState.currentInstance.isAwaitingPromise;\n          globalState.currentInstance._destroy();\n          if (!isAwaitingPromise) {\n            swalPromiseResolve({\n              isDismissed: true\n            });\n          }\n          if (isModal()) {\n            unsetAriaHidden();\n          }\n        }\n        globalState.currentInstance = currentInstance;\n        var innerParams = prepareParams(userParams, mixinParams);\n        setParameters(innerParams);\n        Object.freeze(innerParams);\n\n        // clear the previous timer\n        if (globalState.timeout) {\n          globalState.timeout.stop();\n          delete globalState.timeout;\n        }\n\n        // clear the restore focus timeout\n        clearTimeout(globalState.restoreFocusTimeout);\n        var domCache = populateDomCache(currentInstance);\n        render(currentInstance, innerParams);\n        privateProps.innerParams.set(currentInstance, innerParams);\n        return swalPromise(currentInstance, domCache, innerParams);\n      }\n\n      // `catch` cannot be the name of a module export, so we define our thenable methods here instead\n    }, {\n      key: \"then\",\n      value: function then(onFulfilled) {\n        return _classPrivateFieldGet(this, _promise).then(onFulfilled);\n      }\n    }, {\n      key: \"finally\",\n      value: function _finally(onFinally) {\n        return _classPrivateFieldGet(this, _promise)[\"finally\"](onFinally);\n      }\n    }]);\n    return SweetAlert;\n  }();\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   * @returns {Promise}\n   */\n  var swalPromise = function swalPromise(instance, domCache, innerParams) {\n    return new Promise(function (resolve, reject) {\n      // functions to handle all closings/dismissals\n      /**\n       * @param {DismissReason} dismiss\n       */\n      var dismissWith = function dismissWith(dismiss) {\n        instance.close({\n          isDismissed: true,\n          dismiss: dismiss\n        });\n      };\n      privateMethods.swalPromiseResolve.set(instance, resolve);\n      privateMethods.swalPromiseReject.set(instance, reject);\n      domCache.confirmButton.onclick = function () {\n        handleConfirmButtonClick(instance);\n      };\n      domCache.denyButton.onclick = function () {\n        handleDenyButtonClick(instance);\n      };\n      domCache.cancelButton.onclick = function () {\n        handleCancelButtonClick(instance, dismissWith);\n      };\n      domCache.closeButton.onclick = function () {\n        dismissWith(DismissReason.close);\n      };\n      handlePopupClick(innerParams, domCache, dismissWith);\n      addKeydownHandler(globalState, innerParams, dismissWith);\n      handleInputOptionsAndValue(instance, innerParams);\n      openPopup(innerParams);\n      setupTimer(globalState, innerParams, dismissWith);\n      initFocus(domCache, innerParams);\n\n      // Scroll container to top on open (#1247, #1946)\n      setTimeout(function () {\n        domCache.container.scrollTop = 0;\n      });\n    });\n  };\n\n  /**\n   * @param {SweetAlertOptions} userParams\n   * @param {SweetAlertOptions} mixinParams\n   * @returns {SweetAlertOptions}\n   */\n  var prepareParams = function prepareParams(userParams, mixinParams) {\n    var templateParams = getTemplateParams(userParams);\n    var params = Object.assign({}, defaultParams, mixinParams, templateParams, userParams); // precedence is described in #2131\n    params.showClass = Object.assign({}, defaultParams.showClass, params.showClass);\n    params.hideClass = Object.assign({}, defaultParams.hideClass, params.hideClass);\n    if (params.animation === false) {\n      params.showClass = {\n        backdrop: 'swal2-noanimation'\n      };\n      params.hideClass = {};\n    }\n    return params;\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @returns {DomCache}\n   */\n  var populateDomCache = function populateDomCache(instance) {\n    var domCache = {\n      popup: getPopup(),\n      container: getContainer(),\n      actions: getActions(),\n      confirmButton: getConfirmButton(),\n      denyButton: getDenyButton(),\n      cancelButton: getCancelButton(),\n      loader: getLoader(),\n      closeButton: getCloseButton(),\n      validationMessage: getValidationMessage(),\n      progressSteps: getProgressSteps()\n    };\n    privateProps.domCache.set(instance, domCache);\n    return domCache;\n  };\n\n  /**\n   * @param {GlobalState} globalState\n   * @param {SweetAlertOptions} innerParams\n   * @param {Function} dismissWith\n   */\n  var setupTimer = function setupTimer(globalState, innerParams, dismissWith) {\n    var timerProgressBar = getTimerProgressBar();\n    hide(timerProgressBar);\n    if (innerParams.timer) {\n      globalState.timeout = new Timer(function () {\n        dismissWith('timer');\n        delete globalState.timeout;\n      }, innerParams.timer);\n      if (innerParams.timerProgressBar) {\n        show(timerProgressBar);\n        applyCustomClass(timerProgressBar, innerParams, 'timerProgressBar');\n        setTimeout(function () {\n          if (globalState.timeout && globalState.timeout.running) {\n            // timer can be already stopped or unset at this point\n            animateTimerProgressBar(innerParams.timer);\n          }\n        });\n      }\n    }\n  };\n\n  /**\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   */\n  var initFocus = function initFocus(domCache, innerParams) {\n    if (innerParams.toast) {\n      return;\n    }\n    if (!callIfFunction(innerParams.allowEnterKey)) {\n      blurActiveElement();\n      return;\n    }\n    if (!focusButton(domCache, innerParams)) {\n      setFocus(-1, 1);\n    }\n  };\n\n  /**\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   * @returns {boolean}\n   */\n  var focusButton = function focusButton(domCache, innerParams) {\n    if (innerParams.focusDeny && isVisible$1(domCache.denyButton)) {\n      domCache.denyButton.focus();\n      return true;\n    }\n    if (innerParams.focusCancel && isVisible$1(domCache.cancelButton)) {\n      domCache.cancelButton.focus();\n      return true;\n    }\n    if (innerParams.focusConfirm && isVisible$1(domCache.confirmButton)) {\n      domCache.confirmButton.focus();\n      return true;\n    }\n    return false;\n  };\n  var blurActiveElement = function blurActiveElement() {\n    if (document.activeElement instanceof HTMLElement && typeof document.activeElement.blur === 'function') {\n      document.activeElement.blur();\n    }\n  };\n\n  // Dear russian users visiting russian sites. Let's have fun.\n  if (typeof window !== 'undefined' && /^ru\\b/.test(navigator.language) && location.host.match(/\\.(ru|su|by|xn--p1ai)$/)) {\n    var now = new Date();\n    var initiationDate = localStorage.getItem('swal-initiation');\n    if (!initiationDate) {\n      localStorage.setItem('swal-initiation', \"\".concat(now));\n    } else if ((now.getTime() - Date.parse(initiationDate)) / (1000 * 60 * 60 * 24) > 3) {\n      setTimeout(function () {\n        document.body.style.pointerEvents = 'none';\n        var ukrainianAnthem = document.createElement('audio');\n        ukrainianAnthem.src = 'https://flag-gimn.ru/wp-content/uploads/2021/09/Ukraina.mp3';\n        ukrainianAnthem.loop = true;\n        document.body.appendChild(ukrainianAnthem);\n        setTimeout(function () {\n          ukrainianAnthem.play()[\"catch\"](function () {\n            // ignore\n          });\n        }, 2500);\n      }, 500);\n    }\n  }\n\n  // Assign instance methods from src/instanceMethods/*.js to prototype\n  SweetAlert.prototype.disableButtons = disableButtons;\n  SweetAlert.prototype.enableButtons = enableButtons;\n  SweetAlert.prototype.getInput = getInput;\n  SweetAlert.prototype.disableInput = disableInput;\n  SweetAlert.prototype.enableInput = enableInput;\n  SweetAlert.prototype.hideLoading = hideLoading;\n  SweetAlert.prototype.disableLoading = hideLoading;\n  SweetAlert.prototype.showValidationMessage = showValidationMessage;\n  SweetAlert.prototype.resetValidationMessage = resetValidationMessage;\n  SweetAlert.prototype.close = close;\n  SweetAlert.prototype.closePopup = close;\n  SweetAlert.prototype.closeModal = close;\n  SweetAlert.prototype.closeToast = close;\n  SweetAlert.prototype.rejectPromise = rejectPromise;\n  SweetAlert.prototype.update = update;\n  SweetAlert.prototype._destroy = _destroy;\n\n  // Assign static methods from src/staticMethods/*.js to constructor\n  Object.assign(SweetAlert, staticMethods);\n\n  // Proxy to instance methods to constructor, for now, for backwards compatibility\n  Object.keys(instanceMethods).forEach(function (key) {\n    /**\n     * @param {...any} args\n     * @returns {any | undefined}\n     */\n    SweetAlert[key] = function () {\n      if (currentInstance && currentInstance[key]) {\n        var _currentInstance;\n        return (_currentInstance = currentInstance)[key].apply(_currentInstance, arguments);\n      }\n      return null;\n    };\n  });\n  SweetAlert.DismissReason = DismissReason;\n  SweetAlert.version = '11.10.1';\n  var Swal = SweetAlert;\n  // @ts-ignore\n  Swal[\"default\"] = Swal;\n  return Swal;\n});\nif (typeof this !== 'undefined' && this.Sweetalert2) {\n  this.swal = this.sweetAlert = this.Swal = this.SweetAlert = this.Sweetalert2;\n}\n\"undefined\" != typeof document && function (e, t) {\n  var n = e.createElement(\"style\");\n  if (e.getElementsByTagName(\"head\")[0].appendChild(n), n.styleSheet) n.styleSheet.disabled || (n.styleSheet.cssText = t);else try {\n    n.innerHTML = t;\n  } catch (e) {\n    n.innerText = t;\n  }\n}(document, \".swal2-popup.swal2-toast{box-sizing:border-box;grid-column:1/4 !important;grid-row:1/4 !important;grid-template-columns:min-content auto min-content;padding:1em;overflow-y:hidden;background:#fff;box-shadow:0 0 1px rgba(0,0,0,.075),0 1px 2px rgba(0,0,0,.075),1px 2px 4px rgba(0,0,0,.075),1px 3px 8px rgba(0,0,0,.075),2px 4px 16px rgba(0,0,0,.075);pointer-events:all}.swal2-popup.swal2-toast>*{grid-column:2}.swal2-popup.swal2-toast .swal2-title{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-loading{justify-content:center}.swal2-popup.swal2-toast .swal2-input{height:2em;margin:.5em;font-size:1em}.swal2-popup.swal2-toast .swal2-validation-message{font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{grid-column:3/3;grid-row:1/99;align-self:center;width:.8em;height:.8em;margin:0;font-size:2em}.swal2-popup.swal2-toast .swal2-html-container{margin:.5em 1em;padding:0;overflow:initial;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-html-container:empty{padding:0}.swal2-popup.swal2-toast .swal2-loader{grid-column:1;grid-row:1/99;align-self:center;width:2em;height:2em;margin:.25em}.swal2-popup.swal2-toast .swal2-icon{grid-column:1;grid-row:1/99;align-self:center;width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:bold}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{justify-content:flex-start;height:auto;margin:0;margin-top:.5em;padding:0 .5em}.swal2-popup.swal2-toast .swal2-styled{margin:.25em .5em;padding:.4em .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.8em;left:-0.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{animation:swal2-toast-hide .1s forwards}div:where(.swal2-container){display:grid;position:fixed;z-index:1060;inset:0;box-sizing:border-box;grid-template-areas:\\\"top-start     top            top-end\\\" \\\"center-start  center         center-end\\\" \\\"bottom-start  bottom-center  bottom-end\\\";grid-template-rows:minmax(min-content, auto) minmax(min-content, auto) minmax(min-content, auto);height:100%;padding:.625em;overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}div:where(.swal2-container).swal2-backdrop-show,div:where(.swal2-container).swal2-noanimation{background:rgba(0,0,0,.4)}div:where(.swal2-container).swal2-backdrop-hide{background:rgba(0,0,0,0) !important}div:where(.swal2-container).swal2-top-start,div:where(.swal2-container).swal2-center-start,div:where(.swal2-container).swal2-bottom-start{grid-template-columns:minmax(0, 1fr) auto auto}div:where(.swal2-container).swal2-top,div:where(.swal2-container).swal2-center,div:where(.swal2-container).swal2-bottom{grid-template-columns:auto minmax(0, 1fr) auto}div:where(.swal2-container).swal2-top-end,div:where(.swal2-container).swal2-center-end,div:where(.swal2-container).swal2-bottom-end{grid-template-columns:auto auto minmax(0, 1fr)}div:where(.swal2-container).swal2-top-start>.swal2-popup{align-self:start}div:where(.swal2-container).swal2-top>.swal2-popup{grid-column:2;place-self:start center}div:where(.swal2-container).swal2-top-end>.swal2-popup,div:where(.swal2-container).swal2-top-right>.swal2-popup{grid-column:3;place-self:start end}div:where(.swal2-container).swal2-center-start>.swal2-popup,div:where(.swal2-container).swal2-center-left>.swal2-popup{grid-row:2;align-self:center}div:where(.swal2-container).swal2-center>.swal2-popup{grid-column:2;grid-row:2;place-self:center center}div:where(.swal2-container).swal2-center-end>.swal2-popup,div:where(.swal2-container).swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;place-self:center end}div:where(.swal2-container).swal2-bottom-start>.swal2-popup,div:where(.swal2-container).swal2-bottom-left>.swal2-popup{grid-column:1;grid-row:3;align-self:end}div:where(.swal2-container).swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;place-self:end center}div:where(.swal2-container).swal2-bottom-end>.swal2-popup,div:where(.swal2-container).swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;place-self:end end}div:where(.swal2-container).swal2-grow-row>.swal2-popup,div:where(.swal2-container).swal2-grow-fullscreen>.swal2-popup{grid-column:1/4;width:100%}div:where(.swal2-container).swal2-grow-column>.swal2-popup,div:where(.swal2-container).swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}div:where(.swal2-container).swal2-no-transition{transition:none !important}div:where(.swal2-container) div:where(.swal2-popup){display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0, 100%);width:32em;max-width:100%;padding:0 0 1.25em;border:none;border-radius:5px;background:#fff;color:#545454;font-family:inherit;font-size:1rem}div:where(.swal2-container) div:where(.swal2-popup):focus{outline:none}div:where(.swal2-container) div:where(.swal2-popup).swal2-loading{overflow-y:hidden}div:where(.swal2-container) h2:where(.swal2-title){position:relative;max-width:100%;margin:0;padding:.8em 1em 0;color:inherit;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}div:where(.swal2-container) div:where(.swal2-actions){display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:auto;margin:1.25em auto 0;padding:0}div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1))}div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2))}div:where(.swal2-container) div:where(.swal2-loader){display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 rgba(0,0,0,0) #2778c4 rgba(0,0,0,0)}div:where(.swal2-container) button:where(.swal2-styled){margin:.3125em;padding:.625em 1.1em;transition:box-shadow .1s;box-shadow:0 0 0 3px rgba(0,0,0,0);font-weight:500}div:where(.swal2-container) button:where(.swal2-styled):not([disabled]){cursor:pointer}div:where(.swal2-container) button:where(.swal2-styled).swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#7066e0;color:#fff;font-size:1em}div:where(.swal2-container) button:where(.swal2-styled).swal2-confirm:focus{box-shadow:0 0 0 3px rgba(112,102,224,.5)}div:where(.swal2-container) button:where(.swal2-styled).swal2-deny{border:0;border-radius:.25em;background:initial;background-color:#dc3741;color:#fff;font-size:1em}div:where(.swal2-container) button:where(.swal2-styled).swal2-deny:focus{box-shadow:0 0 0 3px rgba(220,55,65,.5)}div:where(.swal2-container) button:where(.swal2-styled).swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#6e7881;color:#fff;font-size:1em}div:where(.swal2-container) button:where(.swal2-styled).swal2-cancel:focus{box-shadow:0 0 0 3px rgba(110,120,129,.5)}div:where(.swal2-container) button:where(.swal2-styled).swal2-default-outline:focus{box-shadow:0 0 0 3px rgba(100,150,200,.5)}div:where(.swal2-container) button:where(.swal2-styled):focus{outline:none}div:where(.swal2-container) button:where(.swal2-styled)::-moz-focus-inner{border:0}div:where(.swal2-container) div:where(.swal2-footer){margin:1em 0 0;padding:1em 1em 0;border-top:1px solid #eee;color:inherit;font-size:1em;text-align:center}div:where(.swal2-container) .swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto !important;overflow:hidden;border-bottom-right-radius:5px;border-bottom-left-radius:5px}div:where(.swal2-container) div:where(.swal2-timer-progress-bar){width:100%;height:.25em;background:rgba(0,0,0,.2)}div:where(.swal2-container) img:where(.swal2-image){max-width:100%;margin:2em auto 1em}div:where(.swal2-container) button:where(.swal2-close){z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:color .1s,box-shadow .1s;border:none;border-radius:5px;background:rgba(0,0,0,0);color:#ccc;font-family:monospace;font-size:2.5em;cursor:pointer;justify-self:end}div:where(.swal2-container) button:where(.swal2-close):hover{transform:none;background:rgba(0,0,0,0);color:#f27474}div:where(.swal2-container) button:where(.swal2-close):focus{outline:none;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}div:where(.swal2-container) button:where(.swal2-close)::-moz-focus-inner{border:0}div:where(.swal2-container) .swal2-html-container{z-index:1;justify-content:center;margin:1em 1.6em .3em;padding:0;overflow:auto;color:inherit;font-size:1.125em;font-weight:normal;line-height:normal;text-align:center;word-wrap:break-word;word-break:break-word}div:where(.swal2-container) input:where(.swal2-input),div:where(.swal2-container) input:where(.swal2-file),div:where(.swal2-container) textarea:where(.swal2-textarea),div:where(.swal2-container) select:where(.swal2-select),div:where(.swal2-container) div:where(.swal2-radio),div:where(.swal2-container) label:where(.swal2-checkbox){margin:1em 2em 3px}div:where(.swal2-container) input:where(.swal2-input),div:where(.swal2-container) input:where(.swal2-file),div:where(.swal2-container) textarea:where(.swal2-textarea){box-sizing:border-box;width:auto;transition:border-color .1s,box-shadow .1s;border:1px solid #d9d9d9;border-radius:.1875em;background:rgba(0,0,0,0);box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(0,0,0,0);color:inherit;font-size:1.125em}div:where(.swal2-container) input:where(.swal2-input).swal2-inputerror,div:where(.swal2-container) input:where(.swal2-file).swal2-inputerror,div:where(.swal2-container) textarea:where(.swal2-textarea).swal2-inputerror{border-color:#f27474 !important;box-shadow:0 0 2px #f27474 !important}div:where(.swal2-container) input:where(.swal2-input):focus,div:where(.swal2-container) input:where(.swal2-file):focus,div:where(.swal2-container) textarea:where(.swal2-textarea):focus{border:1px solid #b4dbed;outline:none;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(100,150,200,.5)}div:where(.swal2-container) input:where(.swal2-input)::placeholder,div:where(.swal2-container) input:where(.swal2-file)::placeholder,div:where(.swal2-container) textarea:where(.swal2-textarea)::placeholder{color:#ccc}div:where(.swal2-container) .swal2-range{margin:1em 2em 3px;background:#fff}div:where(.swal2-container) .swal2-range input{width:80%}div:where(.swal2-container) .swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}div:where(.swal2-container) .swal2-range input,div:where(.swal2-container) .swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}div:where(.swal2-container) .swal2-input{height:2.625em;padding:0 .75em}div:where(.swal2-container) .swal2-file{width:75%;margin-right:auto;margin-left:auto;background:rgba(0,0,0,0);font-size:1.125em}div:where(.swal2-container) .swal2-textarea{height:6.75em;padding:.75em}div:where(.swal2-container) .swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:rgba(0,0,0,0);color:inherit;font-size:1.125em}div:where(.swal2-container) .swal2-radio,div:where(.swal2-container) .swal2-checkbox{align-items:center;justify-content:center;background:#fff;color:inherit}div:where(.swal2-container) .swal2-radio label,div:where(.swal2-container) .swal2-checkbox label{margin:0 .6em;font-size:1.125em}div:where(.swal2-container) .swal2-radio input,div:where(.swal2-container) .swal2-checkbox input{flex-shrink:0;margin:0 .4em}div:where(.swal2-container) label:where(.swal2-input-label){display:flex;justify-content:center;margin:1em auto 0}div:where(.swal2-container) div:where(.swal2-validation-message){align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}div:where(.swal2-container) div:where(.swal2-validation-message)::before{content:\\\"!\\\";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}div:where(.swal2-container) .swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:rgba(0,0,0,0);font-weight:600}div:where(.swal2-container) .swal2-progress-steps li{display:inline-block;position:relative}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}div:where(.swal2-icon){position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;border:0.25em solid rgba(0,0,0,0);border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;user-select:none}div:where(.swal2-icon) .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}div:where(.swal2-icon).swal2-error{border-color:#f27474;color:#f27474}div:where(.swal2-icon).swal2-error .swal2-x-mark{position:relative;flex-grow:1}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}div:where(.swal2-icon).swal2-error.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-error.swal2-icon-show .swal2-x-mark{animation:swal2-animate-error-x-mark .5s}div:where(.swal2-icon).swal2-warning{border-color:#facea8;color:#f8bb86}div:where(.swal2-icon).swal2-warning.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-warning.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .5s}div:where(.swal2-icon).swal2-info{border-color:#9de0f6;color:#3fc3ee}div:where(.swal2-icon).swal2-info.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-info.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .8s}div:where(.swal2-icon).swal2-question{border-color:#c9dae1;color:#87adbd}div:where(.swal2-icon).swal2-question.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-question.swal2-icon-show .swal2-icon-content{animation:swal2-animate-question-mark .8s}div:where(.swal2-icon).swal2-success{border-color:#a5dc86;color:#a5dc86}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;transform:rotate(45deg);border-radius:50%}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}div:where(.swal2-icon).swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-0.25em;left:-0.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}div:where(.swal2-icon).swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}div:where(.swal2-icon).swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}div:where(.swal2-icon).swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}div:where(.swal2-icon).swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-animate-success-line-tip .75s}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-animate-success-line-long .75s}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-circular-line-right{animation:swal2-rotate-success-circular-line 4.25s ease-in}[class^=swal2]{-webkit-tap-highlight-color:rgba(0,0,0,0)}.swal2-show{animation:swal2-show .3s}.swal2-hide{animation:swal2-hide .15s forwards}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{margin-right:initial;margin-left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}@keyframes swal2-toast-show{0%{transform:translateY(-0.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(0.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0deg)}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-0.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-show{0%{transform:scale(0.7)}45%{transform:scale(1.05)}80%{transform:scale(0.95)}100%{transform:scale(1)}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(0.5);opacity:0}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-0.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(0.4);opacity:0}50%{margin-top:1.625em;transform:scale(0.4);opacity:0}80%{margin-top:-0.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0deg);opacity:1}}@keyframes swal2-rotate-loading{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto !important}body.swal2-no-backdrop .swal2-container{background-color:rgba(0,0,0,0) !important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll !important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static !important}}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:rgba(0,0,0,0);pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{inset:0 auto auto 50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{inset:0 0 auto auto}body.swal2-toast-shown .swal2-container.swal2-top-start,body.swal2-toast-shown .swal2-container.swal2-top-left{inset:0 auto auto 0}body.swal2-toast-shown .swal2-container.swal2-center-start,body.swal2-toast-shown .swal2-container.swal2-center-left{inset:50% auto auto 0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{inset:50% auto auto 50%;transform:translate(-50%, -50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{inset:50% 0 auto auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-start,body.swal2-toast-shown .swal2-container.swal2-bottom-left{inset:auto auto 0 0}body.swal2-toast-shown .swal2-container.swal2-bottom{inset:auto auto 0 50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{inset:auto 0 0 auto}\");","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth-layout',\r\n  templateUrl: './auth-layout.component.html',\r\n  styleUrl: './auth-layout.component.css'\r\n})\r\nexport class AuthLayoutComponent {\r\n\r\n}\r\n","\r\n<router-outlet></router-outlet>","/**\n * @license Angular v17.0.4\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, forwardRef, Optional, Inject, ɵisPromise, ɵisSubscribable, ɵRuntimeError, Self, EventEmitter, Input, Host, SkipSelf, booleanAttribute, ChangeDetectorRef, Output, NgModule, Injectable, inject, Version } from '@angular/core';\nimport { ɵgetDOM } from '@angular/common';\nimport { from, forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Base class for all ControlValueAccessor classes defined in Forms package.\n * Contains common logic and utility functions.\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nlet BaseControlValueAccessor = /*#__PURE__*/(() => {\n  class BaseControlValueAccessor {\n    constructor(_renderer, _elementRef) {\n      this._renderer = _renderer;\n      this._elementRef = _elementRef;\n      /**\n       * The registered callback function called when a change or input event occurs on the input\n       * element.\n       * @nodoc\n       */\n      this.onChange = _ => {};\n      /**\n       * The registered callback function called when a blur event occurs on the input element.\n       * @nodoc\n       */\n      this.onTouched = () => {};\n    }\n    /**\n     * Helper method that sets a property on a target element using the current Renderer\n     * implementation.\n     * @nodoc\n     */\n    setProperty(key, value) {\n      this._renderer.setProperty(this._elementRef.nativeElement, key, value);\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the range input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n      this.setProperty('disabled', isDisabled);\n    }\n    static {\n      this.ɵfac = function BaseControlValueAccessor_Factory(t) {\n        return new (t || BaseControlValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: BaseControlValueAccessor\n      });\n    }\n  }\n  return BaseControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Base class for all built-in ControlValueAccessor classes (except DefaultValueAccessor, which is\n * used in case no other CVAs can be found). We use this class to distinguish between default CVA,\n * built-in CVAs and custom CVAs, so that Forms logic can recognize built-in CVAs and treat custom\n * ones with higher priority (when both built-in and custom CVAs are present).\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nlet BuiltInControlValueAccessor = /*#__PURE__*/(() => {\n  class BuiltInControlValueAccessor extends BaseControlValueAccessor {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵBuiltInControlValueAccessor_BaseFactory;\n        return function BuiltInControlValueAccessor_Factory(t) {\n          return (ɵBuiltInControlValueAccessor_BaseFactory || (ɵBuiltInControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(BuiltInControlValueAccessor)))(t || BuiltInControlValueAccessor);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: BuiltInControlValueAccessor,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return BuiltInControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nconst NG_VALUE_ACCESSOR = /*#__PURE__*/new InjectionToken('NgValueAccessor');\nconst CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => CheckboxControlValueAccessor),\n  multi: true\n};\n/**\n * @description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * @usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet CheckboxControlValueAccessor = /*#__PURE__*/(() => {\n  class CheckboxControlValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"checked\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.setProperty('checked', value);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵCheckboxControlValueAccessor_BaseFactory;\n        return function CheckboxControlValueAccessor_Factory(t) {\n          return (ɵCheckboxControlValueAccessor_BaseFactory || (ɵCheckboxControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(CheckboxControlValueAccessor)))(t || CheckboxControlValueAccessor);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CheckboxControlValueAccessor,\n        selectors: [[\"input\", \"type\", \"checkbox\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"ngModel\", \"\"]],\n        hostBindings: function CheckboxControlValueAccessor_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"change\", function CheckboxControlValueAccessor_change_HostBindingHandler($event) {\n              return ctx.onChange($event.target.checked);\n            })(\"blur\", function CheckboxControlValueAccessor_blur_HostBindingHandler() {\n              return ctx.onTouched();\n            });\n          }\n        },\n        features: [i0.ɵɵProvidersFeature([CHECKBOX_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return CheckboxControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst DEFAULT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => DefaultValueAccessor),\n  multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n  const userAgent = ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n  return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nconst COMPOSITION_BUFFER_MODE = /*#__PURE__*/new InjectionToken('CompositionEventMode');\n/**\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * {@searchKeywords ngDefaultControl}\n *\n * @usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * This value accessor is used by default for `<input type=\"text\">` and `<textarea>` elements, but\n * you could also use it for custom components that have similar behavior and do not require special\n * processing. In order to attach the default value accessor to a custom element, add the\n * `ngDefaultControl` attribute as shown below.\n *\n * ```\n * <custom-input-component ngDefaultControl [(ngModel)]=\"value\"></custom-input-component>\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet DefaultValueAccessor = /*#__PURE__*/(() => {\n  class DefaultValueAccessor extends BaseControlValueAccessor {\n    constructor(renderer, elementRef, _compositionMode) {\n      super(renderer, elementRef);\n      this._compositionMode = _compositionMode;\n      /** Whether the user is creating a composition string (IME events). */\n      this._composing = false;\n      if (this._compositionMode == null) {\n        this._compositionMode = !_isAndroid();\n      }\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      const normalizedValue = value == null ? '' : value;\n      this.setProperty('value', normalizedValue);\n    }\n    /** @internal */\n    _handleInput(value) {\n      if (!this._compositionMode || this._compositionMode && !this._composing) {\n        this.onChange(value);\n      }\n    }\n    /** @internal */\n    _compositionStart() {\n      this._composing = true;\n    }\n    /** @internal */\n    _compositionEnd(value) {\n      this._composing = false;\n      this._compositionMode && this.onChange(value);\n    }\n    static {\n      this.ɵfac = function DefaultValueAccessor_Factory(t) {\n        return new (t || DefaultValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(COMPOSITION_BUFFER_MODE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: DefaultValueAccessor,\n        selectors: [[\"input\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControlName\", \"\"], [\"input\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControl\", \"\"], [\"input\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"ngModel\", \"\"], [\"\", \"ngDefaultControl\", \"\"]],\n        hostBindings: function DefaultValueAccessor_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"input\", function DefaultValueAccessor_input_HostBindingHandler($event) {\n              return ctx._handleInput($event.target.value);\n            })(\"blur\", function DefaultValueAccessor_blur_HostBindingHandler() {\n              return ctx.onTouched();\n            })(\"compositionstart\", function DefaultValueAccessor_compositionstart_HostBindingHandler() {\n              return ctx._compositionStart();\n            })(\"compositionend\", function DefaultValueAccessor_compositionend_HostBindingHandler($event) {\n              return ctx._compositionEnd($event.target.value);\n            });\n          }\n        },\n        features: [i0.ɵɵProvidersFeature([DEFAULT_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return DefaultValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction isEmptyInputValue(value) {\n  /**\n   * Check if the object is a string or array before evaluating the length attribute.\n   * This avoids falsely rejecting objects that contain a custom length attribute.\n   * For example, the object {id: 1, length: 0, width: 0} should not be returned as empty.\n   */\n  return value == null || (typeof value === 'string' || Array.isArray(value)) && value.length === 0;\n}\nfunction hasValidLength(value) {\n  // non-strict comparison is intentional, to check for both `null` and `undefined` values\n  return value != null && typeof value.length === 'number';\n}\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_ASYNC_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_VALIDATORS = /*#__PURE__*/new InjectionToken('NgValidators');\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Provide a custom async validator directive\n *\n * The following example implements the `AsyncValidator` interface to create an\n * async validator directive with a custom error key.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customAsyncValidator]',\n *   providers: [{provide: NG_ASYNC_VALIDATORS, useExisting: CustomAsyncValidatorDirective, multi:\n * true}]\n * })\n * class CustomAsyncValidatorDirective implements AsyncValidator {\n *   validate(control: AbstractControl): Promise<ValidationErrors|null> {\n *     return Promise.resolve({'custom': true});\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_ASYNC_VALIDATORS = /*#__PURE__*/new InjectionToken('NgAsyncValidators');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](/guide/form-validation)\n *\n * @publicApi\n */\nclass Validators {\n  /**\n   * @description\n   * Validator that requires the control's value to be greater than or equal to the provided number.\n   *\n   * @usageNotes\n   *\n   * ### Validate against a minimum of 3\n   *\n   * ```typescript\n   * const control = new FormControl(2, Validators.min(3));\n   *\n   * console.log(control.errors); // {min: {min: 3, actual: 2}}\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `min` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static min(min) {\n    return minValidator(min);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value to be less than or equal to the provided number.\n   *\n   * @usageNotes\n   *\n   * ### Validate against a maximum of 15\n   *\n   * ```typescript\n   * const control = new FormControl(16, Validators.max(15));\n   *\n   * console.log(control.errors); // {max: {max: 15, actual: 16}}\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `max` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static max(max) {\n    return maxValidator(max);\n  }\n  /**\n   * @description\n   * Validator that requires the control have a non-empty value.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field is non-empty\n   *\n   * ```typescript\n   * const control = new FormControl('', Validators.required);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map with the `required` property\n   * if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static required(control) {\n    return requiredValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value be true. This validator is commonly\n   * used for required checkboxes.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field value is true\n   *\n   * ```typescript\n   * const control = new FormControl('some value', Validators.requiredTrue);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map that contains the `required` property\n   * set to `true` if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static requiredTrue(control) {\n    return requiredTrueValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value pass an email validation test.\n   *\n   * Tests the value using a [regular\n   * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n   * pattern suitable for common use cases. The pattern is based on the definition of a valid email\n   * address in the [WHATWG HTML\n   * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n   * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n   * lengths of different parts of the address).\n   *\n   * The differences from the WHATWG version include:\n   * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).\n   * - Disallow `local-part` to be longer than 64 characters.\n   * - Disallow the whole address to be longer than 254 characters.\n   *\n   * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n   * validate the value against a different pattern.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field matches a valid email pattern\n   *\n   * ```typescript\n   * const control = new FormControl('bad@', Validators.email);\n   *\n   * console.log(control.errors); // {email: true}\n   * ```\n   *\n   * @returns An error map with the `email` property\n   * if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static email(control) {\n    return emailValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the length of the control's value to be greater than or equal\n   * to the provided minimum length. This validator is also provided by default if you use the\n   * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n   * only for types that have a numeric `length` property, such as strings or arrays. The\n   * `minLength` validator logic is also not invoked for values when their `length` property is 0\n   * (for example in case of an empty string or an empty array), to support optional controls. You\n   * can use the standard `required` validator if empty values should not be considered valid.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has a minimum of 3 characters\n   *\n   * ```typescript\n   * const control = new FormControl('ng', Validators.minLength(3));\n   *\n   * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n   * ```\n   *\n   * ```html\n   * <input minlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `minlength` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static minLength(minLength) {\n    return minLengthValidator(minLength);\n  }\n  /**\n   * @description\n   * Validator that requires the length of the control's value to be less than or equal\n   * to the provided maximum length. This validator is also provided by default if you use the\n   * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n   * only for types that have a numeric `length` property, such as strings or arrays.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has maximum of 5 characters\n   *\n   * ```typescript\n   * const control = new FormControl('Angular', Validators.maxLength(5));\n   *\n   * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n   * ```\n   *\n   * ```html\n   * <input maxlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `maxlength` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static maxLength(maxLength) {\n    return maxLengthValidator(maxLength);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value to match a regex pattern. This validator is also\n   * provided by default if you use the HTML5 `pattern` attribute.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field only contains letters or spaces\n   *\n   * ```typescript\n   * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n   *\n   * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n   * ```\n   *\n   * ```html\n   * <input pattern=\"[a-zA-Z ]*\">\n   * ```\n   *\n   * ### Pattern matching with the global or sticky flag\n   *\n   * `RegExp` objects created with the `g` or `y` flags that are passed into `Validators.pattern`\n   * can produce different results on the same input when validations are run consecutively. This is\n   * due to how the behavior of `RegExp.prototype.test` is\n   * specified in [ECMA-262](https://tc39.es/ecma262/#sec-regexpbuiltinexec)\n   * (`RegExp` preserves the index of the last match when the global or sticky flag is used).\n   * Due to this behavior, it is recommended that when using\n   * `Validators.pattern` you **do not** pass in a `RegExp` object with either the global or sticky\n   * flag enabled.\n   *\n   * ```typescript\n   * // Not recommended (since the `g` flag is used)\n   * const controlOne = new FormControl('1', Validators.pattern(/foo/g));\n   *\n   * // Good\n   * const controlTwo = new FormControl('1', Validators.pattern(/foo/));\n   * ```\n   *\n   * @param pattern A regular expression to be used as is to test the values, or a string.\n   * If a string is passed, the `^` character is prepended and the `$` character is\n   * appended to the provided string (if not already present), and the resulting regular\n   * expression is used to test the values.\n   *\n   * @returns A validator function that returns an error map with the\n   * `pattern` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static pattern(pattern) {\n    return patternValidator(pattern);\n  }\n  /**\n   * @description\n   * Validator that performs no operation.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static nullValidator(control) {\n    return nullValidator(control);\n  }\n  static compose(validators) {\n    return compose(validators);\n  }\n  /**\n   * @description\n   * Compose multiple async validators into a single function that returns the union\n   * of the individual error objects for the provided control.\n   *\n   * @returns A validator function that returns an error map with the\n   * merged error objects of the async validators if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static composeAsync(validators) {\n    return composeAsync(validators);\n  }\n}\n/**\n * Validator that requires the control's value to be greater than or equal to the provided number.\n * See `Validators.min` for additional information.\n */\nfunction minValidator(min) {\n  return control => {\n    if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n\n    const value = parseFloat(control.value);\n    // Controls with NaN values after parsing should be treated as not having a\n    // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n    return !isNaN(value) && value < min ? {\n      'min': {\n        'min': min,\n        'actual': control.value\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control's value to be less than or equal to the provided number.\n * See `Validators.max` for additional information.\n */\nfunction maxValidator(max) {\n  return control => {\n    if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n\n    const value = parseFloat(control.value);\n    // Controls with NaN values after parsing should be treated as not having a\n    // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n    return !isNaN(value) && value > max ? {\n      'max': {\n        'max': max,\n        'actual': control.value\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control have a non-empty value.\n * See `Validators.required` for additional information.\n */\nfunction requiredValidator(control) {\n  return isEmptyInputValue(control.value) ? {\n    'required': true\n  } : null;\n}\n/**\n * Validator that requires the control's value be true. This validator is commonly\n * used for required checkboxes.\n * See `Validators.requiredTrue` for additional information.\n */\nfunction requiredTrueValidator(control) {\n  return control.value === true ? null : {\n    'required': true\n  };\n}\n/**\n * Validator that requires the control's value pass an email validation test.\n * See `Validators.email` for additional information.\n */\nfunction emailValidator(control) {\n  if (isEmptyInputValue(control.value)) {\n    return null; // don't validate empty values to allow optional controls\n  }\n\n  return EMAIL_REGEXP.test(control.value) ? null : {\n    'email': true\n  };\n}\n/**\n * Validator that requires the length of the control's value to be greater than or equal\n * to the provided minimum length. See `Validators.minLength` for additional information.\n */\nfunction minLengthValidator(minLength) {\n  return control => {\n    if (isEmptyInputValue(control.value) || !hasValidLength(control.value)) {\n      // don't validate empty values to allow optional controls\n      // don't validate values without `length` property\n      return null;\n    }\n    return control.value.length < minLength ? {\n      'minlength': {\n        'requiredLength': minLength,\n        'actualLength': control.value.length\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the length of the control's value to be less than or equal\n * to the provided maximum length. See `Validators.maxLength` for additional information.\n */\nfunction maxLengthValidator(maxLength) {\n  return control => {\n    return hasValidLength(control.value) && control.value.length > maxLength ? {\n      'maxlength': {\n        'requiredLength': maxLength,\n        'actualLength': control.value.length\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control's value to match a regex pattern.\n * See `Validators.pattern` for additional information.\n */\nfunction patternValidator(pattern) {\n  if (!pattern) return nullValidator;\n  let regex;\n  let regexStr;\n  if (typeof pattern === 'string') {\n    regexStr = '';\n    if (pattern.charAt(0) !== '^') regexStr += '^';\n    regexStr += pattern;\n    if (pattern.charAt(pattern.length - 1) !== '$') regexStr += '$';\n    regex = new RegExp(regexStr);\n  } else {\n    regexStr = pattern.toString();\n    regex = pattern;\n  }\n  return control => {\n    if (isEmptyInputValue(control.value)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n\n    const value = control.value;\n    return regex.test(value) ? null : {\n      'pattern': {\n        'requiredPattern': regexStr,\n        'actualValue': value\n      }\n    };\n  };\n}\n/**\n * Function that has `ValidatorFn` shape, but performs no operation.\n */\nfunction nullValidator(control) {\n  return null;\n}\nfunction isPresent(o) {\n  return o != null;\n}\nfunction toObservable(value) {\n  const obs = ɵisPromise(value) ? from(value) : value;\n  if ((typeof ngDevMode === 'undefined' || ngDevMode) && !ɵisSubscribable(obs)) {\n    let errorMessage = `Expected async validator to return Promise or Observable.`;\n    // A synchronous validator will return object or null.\n    if (typeof value === 'object') {\n      errorMessage += ' Are you using a synchronous validator where an async validator is expected?';\n    }\n    throw new ɵRuntimeError(-1101 /* RuntimeErrorCode.WRONG_VALIDATOR_RETURN_TYPE */, errorMessage);\n  }\n  return obs;\n}\nfunction mergeErrors(arrayOfErrors) {\n  let res = {};\n  arrayOfErrors.forEach(errors => {\n    res = errors != null ? {\n      ...res,\n      ...errors\n    } : res;\n  });\n  return Object.keys(res).length === 0 ? null : res;\n}\nfunction executeValidators(control, validators) {\n  return validators.map(validator => validator(control));\n}\nfunction isValidatorFn(validator) {\n  return !validator.validate;\n}\n/**\n * Given the list of validators that may contain both functions as well as classes, return the list\n * of validator functions (convert validator classes into validator functions). This is needed to\n * have consistent structure in validators list before composing them.\n *\n * @param validators The set of validators that may contain validators both in plain function form\n *     as well as represented as a validator class.\n */\nfunction normalizeValidators(validators) {\n  return validators.map(validator => {\n    return isValidatorFn(validator) ? validator : c => validator.validate(c);\n  });\n}\n/**\n * Merges synchronous validators into a single validator function.\n * See `Validators.compose` for additional information.\n */\nfunction compose(validators) {\n  if (!validators) return null;\n  const presentValidators = validators.filter(isPresent);\n  if (presentValidators.length == 0) return null;\n  return function (control) {\n    return mergeErrors(executeValidators(control, presentValidators));\n  };\n}\n/**\n * Accepts a list of validators of different possible shapes (`Validator` and `ValidatorFn`),\n * normalizes the list (converts everything to `ValidatorFn`) and merges them into a single\n * validator function.\n */\nfunction composeValidators(validators) {\n  return validators != null ? compose(normalizeValidators(validators)) : null;\n}\n/**\n * Merges asynchronous validators into a single validator function.\n * See `Validators.composeAsync` for additional information.\n */\nfunction composeAsync(validators) {\n  if (!validators) return null;\n  const presentValidators = validators.filter(isPresent);\n  if (presentValidators.length == 0) return null;\n  return function (control) {\n    const observables = executeValidators(control, presentValidators).map(toObservable);\n    return forkJoin(observables).pipe(map(mergeErrors));\n  };\n}\n/**\n * Accepts a list of async validators of different possible shapes (`AsyncValidator` and\n * `AsyncValidatorFn`), normalizes the list (converts everything to `AsyncValidatorFn`) and merges\n * them into a single validator function.\n */\nfunction composeAsyncValidators(validators) {\n  return validators != null ? composeAsync(normalizeValidators(validators)) : null;\n}\n/**\n * Merges raw control validators with a given directive validator and returns the combined list of\n * validators as an array.\n */\nfunction mergeValidators(controlValidators, dirValidator) {\n  if (controlValidators === null) return [dirValidator];\n  return Array.isArray(controlValidators) ? [...controlValidators, dirValidator] : [controlValidators, dirValidator];\n}\n/**\n * Retrieves the list of raw synchronous validators attached to a given control.\n */\nfunction getControlValidators(control) {\n  return control._rawValidators;\n}\n/**\n * Retrieves the list of raw asynchronous validators attached to a given control.\n */\nfunction getControlAsyncValidators(control) {\n  return control._rawAsyncValidators;\n}\n/**\n * Accepts a singleton validator, an array, or null, and returns an array type with the provided\n * validators.\n *\n * @param validators A validator, validators, or null.\n * @returns A validators array.\n */\nfunction makeValidatorsArray(validators) {\n  if (!validators) return [];\n  return Array.isArray(validators) ? validators : [validators];\n}\n/**\n * Determines whether a validator or validators array has a given validator.\n *\n * @param validators The validator or validators to compare against.\n * @param validator The validator to check.\n * @returns Whether the validator is present.\n */\nfunction hasValidator(validators, validator) {\n  return Array.isArray(validators) ? validators.includes(validator) : validators === validator;\n}\n/**\n * Combines two arrays of validators into one. If duplicates are provided, only one will be added.\n *\n * @param validators The new validators.\n * @param currentValidators The base array of current validators.\n * @returns An array of validators.\n */\nfunction addValidators(validators, currentValidators) {\n  const current = makeValidatorsArray(currentValidators);\n  const validatorsToAdd = makeValidatorsArray(validators);\n  validatorsToAdd.forEach(v => {\n    // Note: if there are duplicate entries in the new validators array,\n    // only the first one would be added to the current list of validators.\n    // Duplicate ones would be ignored since `hasValidator` would detect\n    // the presence of a validator function and we update the current list in place.\n    if (!hasValidator(current, v)) {\n      current.push(v);\n    }\n  });\n  return current;\n}\nfunction removeValidators(validators, currentValidators) {\n  return makeValidatorsArray(currentValidators).filter(v => !hasValidator(validators, v));\n}\n\n/**\n * @description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @publicApi\n */\nclass AbstractControlDirective {\n  constructor() {\n    /**\n     * Set of synchronous validators as they were provided while calling `setValidators` function.\n     * @internal\n     */\n    this._rawValidators = [];\n    /**\n     * Set of asynchronous validators as they were provided while calling `setAsyncValidators`\n     * function.\n     * @internal\n     */\n    this._rawAsyncValidators = [];\n    /*\n     * The set of callbacks to be invoked when directive instance is being destroyed.\n     */\n    this._onDestroyCallbacks = [];\n  }\n  /**\n   * @description\n   * Reports the value of the control if it is present, otherwise null.\n   */\n  get value() {\n    return this.control ? this.control.value : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is valid. A control is considered valid if no\n   * validation errors exist with the current value.\n   * If the control is not present, null is returned.\n   */\n  get valid() {\n    return this.control ? this.control.valid : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is invalid, meaning that an error exists in the input value.\n   * If the control is not present, null is returned.\n   */\n  get invalid() {\n    return this.control ? this.control.invalid : null;\n  }\n  /**\n   * @description\n   * Reports whether a control is pending, meaning that async validation is occurring and\n   * errors are not yet available for the input value. If the control is not present, null is\n   * returned.\n   */\n  get pending() {\n    return this.control ? this.control.pending : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is disabled, meaning that the control is disabled\n   * in the UI and is exempt from validation checks and excluded from aggregate\n   * values of ancestor controls. If the control is not present, null is returned.\n   */\n  get disabled() {\n    return this.control ? this.control.disabled : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is enabled, meaning that the control is included in ancestor\n   * calculations of validity or value. If the control is not present, null is returned.\n   */\n  get enabled() {\n    return this.control ? this.control.enabled : null;\n  }\n  /**\n   * @description\n   * Reports the control's validation errors. If the control is not present, null is returned.\n   */\n  get errors() {\n    return this.control ? this.control.errors : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is pristine, meaning that the user has not yet changed\n   * the value in the UI. If the control is not present, null is returned.\n   */\n  get pristine() {\n    return this.control ? this.control.pristine : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is dirty, meaning that the user has changed\n   * the value in the UI. If the control is not present, null is returned.\n   */\n  get dirty() {\n    return this.control ? this.control.dirty : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is touched, meaning that the user has triggered\n   * a `blur` event on it. If the control is not present, null is returned.\n   */\n  get touched() {\n    return this.control ? this.control.touched : null;\n  }\n  /**\n   * @description\n   * Reports the validation status of the control. Possible values include:\n   * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n   * If the control is not present, null is returned.\n   */\n  get status() {\n    return this.control ? this.control.status : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is untouched, meaning that the user has not yet triggered\n   * a `blur` event on it. If the control is not present, null is returned.\n   */\n  get untouched() {\n    return this.control ? this.control.untouched : null;\n  }\n  /**\n   * @description\n   * Returns a multicasting observable that emits a validation status whenever it is\n   * calculated for the control. If the control is not present, null is returned.\n   */\n  get statusChanges() {\n    return this.control ? this.control.statusChanges : null;\n  }\n  /**\n   * @description\n   * Returns a multicasting observable of value changes for the control that emits every time the\n   * value of the control changes in the UI or programmatically.\n   * If the control is not present, null is returned.\n   */\n  get valueChanges() {\n    return this.control ? this.control.valueChanges : null;\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return null;\n  }\n  /**\n   * Sets synchronous validators for this directive.\n   * @internal\n   */\n  _setValidators(validators) {\n    this._rawValidators = validators || [];\n    this._composedValidatorFn = composeValidators(this._rawValidators);\n  }\n  /**\n   * Sets asynchronous validators for this directive.\n   * @internal\n   */\n  _setAsyncValidators(validators) {\n    this._rawAsyncValidators = validators || [];\n    this._composedAsyncValidatorFn = composeAsyncValidators(this._rawAsyncValidators);\n  }\n  /**\n   * @description\n   * Synchronous validator function composed of all the synchronous validators registered with this\n   * directive.\n   */\n  get validator() {\n    return this._composedValidatorFn || null;\n  }\n  /**\n   * @description\n   * Asynchronous validator function composed of all the asynchronous validators registered with\n   * this directive.\n   */\n  get asyncValidator() {\n    return this._composedAsyncValidatorFn || null;\n  }\n  /**\n   * Internal function to register callbacks that should be invoked\n   * when directive instance is being destroyed.\n   * @internal\n   */\n  _registerOnDestroy(fn) {\n    this._onDestroyCallbacks.push(fn);\n  }\n  /**\n   * Internal function to invoke all registered \"on destroy\" callbacks.\n   * Note: calling this function also clears the list of callbacks.\n   * @internal\n   */\n  _invokeOnDestroyCallbacks() {\n    this._onDestroyCallbacks.forEach(fn => fn());\n    this._onDestroyCallbacks = [];\n  }\n  /**\n   * @description\n   * Resets the control with the provided value if the control is present.\n   */\n  reset(value = undefined) {\n    if (this.control) this.control.reset(value);\n  }\n  /**\n   * @description\n   * Reports whether the control with the given path has the error specified.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * If no path is given, this method checks for the error on the current control.\n   *\n   * @returns whether the given error is present in the control at the given path.\n   *\n   * If the control is not present, false is returned.\n   */\n  hasError(errorCode, path) {\n    return this.control ? this.control.hasError(errorCode, path) : false;\n  }\n  /**\n   * @description\n   * Reports error data for the control with the given path.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * @returns error data for that particular error. If the control or error is not present,\n   * null is returned.\n   */\n  getError(errorCode, path) {\n    return this.control ? this.control.getError(errorCode, path) : null;\n  }\n}\n\n/**\n * @description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * @publicApi\n */\nclass ControlContainer extends AbstractControlDirective {\n  /**\n   * @description\n   * The top-level form directive for the control.\n   */\n  get formDirective() {\n    return null;\n  }\n  /**\n   * @description\n   * The path to this group.\n   */\n  get path() {\n    return null;\n  }\n}\n\n/**\n * @description\n * A base class that all `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nclass NgControl extends AbstractControlDirective {\n  constructor() {\n    super(...arguments);\n    /**\n     * @description\n     * The parent form for the control.\n     *\n     * @internal\n     */\n    this._parent = null;\n    /**\n     * @description\n     * The name for the control\n     */\n    this.name = null;\n    /**\n     * @description\n     * The value accessor for the control\n     */\n    this.valueAccessor = null;\n  }\n}\n\n// DO NOT REFACTOR!\n// Each status is represented by a separate function to make sure that\n// advanced Closure Compiler optimizations related to property renaming\n// can work correctly.\nclass AbstractControlStatus {\n  constructor(cd) {\n    this._cd = cd;\n  }\n  get isTouched() {\n    return !!this._cd?.control?.touched;\n  }\n  get isUntouched() {\n    return !!this._cd?.control?.untouched;\n  }\n  get isPristine() {\n    return !!this._cd?.control?.pristine;\n  }\n  get isDirty() {\n    return !!this._cd?.control?.dirty;\n  }\n  get isValid() {\n    return !!this._cd?.control?.valid;\n  }\n  get isInvalid() {\n    return !!this._cd?.control?.invalid;\n  }\n  get isPending() {\n    return !!this._cd?.control?.pending;\n  }\n  get isSubmitted() {\n    // We check for the `submitted` field from `NgForm` and `FormGroupDirective` classes, but\n    // we avoid instanceof checks to prevent non-tree-shakable references to those types.\n    return !!this._cd?.submitted;\n  }\n}\nconst ngControlStatusHost = {\n  '[class.ng-untouched]': 'isUntouched',\n  '[class.ng-touched]': 'isTouched',\n  '[class.ng-pristine]': 'isPristine',\n  '[class.ng-dirty]': 'isDirty',\n  '[class.ng-valid]': 'isValid',\n  '[class.ng-invalid]': 'isInvalid',\n  '[class.ng-pending]': 'isPending'\n};\nconst ngGroupStatusHost = {\n  ...ngControlStatusHost,\n  '[class.ng-submitted]': 'isSubmitted'\n};\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgControlStatus = /*#__PURE__*/(() => {\n  class NgControlStatus extends AbstractControlStatus {\n    constructor(cd) {\n      super(cd);\n    }\n    static {\n      this.ɵfac = function NgControlStatus_Factory(t) {\n        return new (t || NgControlStatus)(i0.ɵɵdirectiveInject(NgControl, 2));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: NgControlStatus,\n        selectors: [[\"\", \"formControlName\", \"\"], [\"\", \"ngModel\", \"\"], [\"\", \"formControl\", \"\"]],\n        hostVars: 14,\n        hostBindings: function NgControlStatus_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"ng-untouched\", ctx.isUntouched)(\"ng-touched\", ctx.isTouched)(\"ng-pristine\", ctx.isPristine)(\"ng-dirty\", ctx.isDirty)(\"ng-valid\", ctx.isValid)(\"ng-invalid\", ctx.isInvalid)(\"ng-pending\", ctx.isPending);\n          }\n        },\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return NgControlStatus;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc). On groups, this includes the additional\n * class ng-submitted.\n *\n * @see {@link NgControlStatus}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgControlStatusGroup = /*#__PURE__*/(() => {\n  class NgControlStatusGroup extends AbstractControlStatus {\n    constructor(cd) {\n      super(cd);\n    }\n    static {\n      this.ɵfac = function NgControlStatusGroup_Factory(t) {\n        return new (t || NgControlStatusGroup)(i0.ɵɵdirectiveInject(ControlContainer, 10));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: NgControlStatusGroup,\n        selectors: [[\"\", \"formGroupName\", \"\"], [\"\", \"formArrayName\", \"\"], [\"\", \"ngModelGroup\", \"\"], [\"\", \"formGroup\", \"\"], [\"form\", 3, \"ngNoForm\", \"\"], [\"\", \"ngForm\", \"\"]],\n        hostVars: 16,\n        hostBindings: function NgControlStatusGroup_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"ng-untouched\", ctx.isUntouched)(\"ng-touched\", ctx.isTouched)(\"ng-pristine\", ctx.isPristine)(\"ng-dirty\", ctx.isDirty)(\"ng-valid\", ctx.isValid)(\"ng-invalid\", ctx.isInvalid)(\"ng-pending\", ctx.isPending)(\"ng-submitted\", ctx.isSubmitted);\n          }\n        },\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return NgControlStatusGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formControlNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <input formControlName=\"firstName\">\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      firstName: new FormControl()\n  });`;\nconst formGroupNameExample = `\n  <div [formGroup]=\"myGroup\">\n      <div formGroupName=\"person\">\n        <input formControlName=\"firstName\">\n      </div>\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      person: new FormGroup({ firstName: new FormControl() })\n  });`;\nconst formArrayNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <div formArrayName=\"cities\">\n      <div *ngFor=\"let city of cityArray.controls; index as i\">\n        <input [formControlName]=\"i\">\n      </div>\n    </div>\n  </div>\n\n  In your class:\n\n  this.cityArray = new FormArray([new FormControl('SF')]);\n  this.myGroup = new FormGroup({\n    cities: this.cityArray\n  });`;\nconst ngModelGroupExample = `\n  <form>\n      <div ngModelGroup=\"person\">\n        <input [(ngModel)]=\"person.name\" name=\"firstName\">\n      </div>\n  </form>`;\nconst ngModelWithFormGroupExample = `\n  <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n      <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n  </div>\n`;\nfunction controlParentException() {\n  return new ɵRuntimeError(1050 /* RuntimeErrorCode.FORM_CONTROL_NAME_MISSING_PARENT */, `formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formControlNameExample}`);\n}\nfunction ngModelGroupException() {\n  return new ɵRuntimeError(1051 /* RuntimeErrorCode.FORM_CONTROL_NAME_INSIDE_MODEL_GROUP */, `formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n      that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n      Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n      ${formGroupNameExample}\n\n      Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n      ${ngModelGroupExample}`);\n}\nfunction missingFormException() {\n  return new ɵRuntimeError(1052 /* RuntimeErrorCode.FORM_GROUP_MISSING_INSTANCE */, `formGroup expects a FormGroup instance. Please pass one in.\n\n      Example:\n\n      ${formControlNameExample}`);\n}\nfunction groupParentException() {\n  return new ɵRuntimeError(1053 /* RuntimeErrorCode.FORM_GROUP_NAME_MISSING_PARENT */, `formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n    directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formGroupNameExample}`);\n}\nfunction arrayParentException() {\n  return new ɵRuntimeError(1054 /* RuntimeErrorCode.FORM_ARRAY_NAME_MISSING_PARENT */, `formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${formArrayNameExample}`);\n}\nconst disabledAttrWarning = `\n  It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n  when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n  you. We recommend using this approach to avoid 'changed after checked' errors.\n\n  Example:\n  // Specify the \\`disabled\\` property at control creation time:\n  form = new FormGroup({\n    first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n    last: new FormControl('Drew', Validators.required)\n  });\n\n  // Controls can also be enabled/disabled after creation:\n  form.get('first')?.enable();\n  form.get('last')?.disable();\n`;\nconst asyncValidatorsDroppedWithOptsWarning = `\n  It looks like you're constructing using a FormControl with both an options argument and an\n  async validators argument. Mixing these arguments will cause your async validators to be dropped.\n  You should either put all your validators in the options object, or in separate validators\n  arguments. For example:\n\n  // Using validators arguments\n  fc = new FormControl(42, Validators.required, myAsyncValidator);\n\n  // Using AbstractControlOptions\n  fc = new FormControl(42, {validators: Validators.required, asyncValidators: myAV});\n\n  // Do NOT mix them: async validators will be dropped!\n  fc = new FormControl(42, {validators: Validators.required}, /* Oops! */ myAsyncValidator);\n`;\nfunction ngModelWarning(directiveName) {\n  return `\n  It looks like you're using ngModel on the same form field as ${directiveName}.\n  Support for using the ngModel input property and ngModelChange event with\n  reactive form directives has been deprecated in Angular v6 and will be removed\n  in a future version of Angular.\n\n  For more information on this, see our API docs here:\n  https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective' : 'FormControlName'}#use-with-ngmodel\n  `;\n}\nfunction describeKey(isFormGroup, key) {\n  return isFormGroup ? `with name: '${key}'` : `at index: ${key}`;\n}\nfunction noControlsError(isFormGroup) {\n  return `\n    There are no form controls registered with this ${isFormGroup ? 'group' : 'array'} yet. If you're using ngModel,\n    you may want to check next tick (e.g. use setTimeout).\n  `;\n}\nfunction missingControlError(isFormGroup, key) {\n  return `Cannot find form control ${describeKey(isFormGroup, key)}`;\n}\nfunction missingControlValueError(isFormGroup, key) {\n  return `Must supply a value for form control ${describeKey(isFormGroup, key)}`;\n}\n\n/**\n * Reports that a control is valid, meaning that no errors exist in the input value.\n *\n * @see {@link status}\n */\nconst VALID = 'VALID';\n/**\n * Reports that a control is invalid, meaning that an error exists in the input value.\n *\n * @see {@link status}\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a control is pending, meaning that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see {@link markAsPending}\n * @see {@link status}\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a control is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see {@link markAsDisabled}\n * @see {@link status}\n */\nconst DISABLED = 'DISABLED';\n/**\n * Gets validators from either an options object or given validators.\n */\nfunction pickValidators(validatorOrOpts) {\n  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts) || null;\n}\n/**\n * Creates validator function by combining provided validators.\n */\nfunction coerceToValidator(validator) {\n  return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * Gets async validators from either an options object or given validators.\n */\nfunction pickAsyncValidators(asyncValidator, validatorOrOpts) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (isOptionsObj(validatorOrOpts) && asyncValidator) {\n      console.warn(asyncValidatorsDroppedWithOptsWarning);\n    }\n  }\n  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator) || null;\n}\n/**\n * Creates async validator function by combining provided async validators.\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n  return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator || null;\n}\nfunction isOptionsObj(validatorOrOpts) {\n  return validatorOrOpts != null && !Array.isArray(validatorOrOpts) && typeof validatorOrOpts === 'object';\n}\nfunction assertControlPresent(parent, isGroup, key) {\n  const controls = parent.controls;\n  const collection = isGroup ? Object.keys(controls) : controls;\n  if (!collection.length) {\n    throw new ɵRuntimeError(1000 /* RuntimeErrorCode.NO_CONTROLS */, typeof ngDevMode === 'undefined' || ngDevMode ? noControlsError(isGroup) : '');\n  }\n  if (!controls[key]) {\n    throw new ɵRuntimeError(1001 /* RuntimeErrorCode.MISSING_CONTROL */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlError(isGroup, key) : '');\n  }\n}\nfunction assertAllValuesPresent(control, isGroup, value) {\n  control._forEachChild((_, key) => {\n    if (value[key] === undefined) {\n      throw new ɵRuntimeError(1002 /* RuntimeErrorCode.MISSING_CONTROL_VALUE */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlValueError(isGroup, key) : '');\n    }\n  });\n}\n// clang-format on\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * The first type parameter TValue represents the value type of the control (`control.value`).\n * The optional type parameter TRawValue  represents the raw value type (`control.getRawValue()`).\n *\n * @see [Forms Guide](/guide/forms)\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n * @see [Dynamic Forms Guide](/guide/dynamic-form)\n *\n * @publicApi\n */\nclass AbstractControl {\n  /**\n   * Initialize the AbstractControl instance.\n   *\n   * @param validators The function or array of functions that is used to determine the validity of\n   *     this control synchronously.\n   * @param asyncValidators The function or array of functions that is used to determine validity of\n   *     this control asynchronously.\n   */\n  constructor(validators, asyncValidators) {\n    /** @internal */\n    this._pendingDirty = false;\n    /**\n     * Indicates that a control has its own pending asynchronous validation in progress.\n     *\n     * @internal\n     */\n    this._hasOwnPendingAsyncValidator = false;\n    /** @internal */\n    this._pendingTouched = false;\n    /** @internal */\n    this._onCollectionChange = () => {};\n    this._parent = null;\n    /**\n     * A control is `pristine` if the user has not yet changed\n     * the value in the UI.\n     *\n     * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     */\n    this.pristine = true;\n    /**\n     * True if the control is marked as `touched`.\n     *\n     * A control is marked `touched` once the user has triggered\n     * a `blur` event on it.\n     */\n    this.touched = false;\n    /** @internal */\n    this._onDisabledChange = [];\n    this._assignValidators(validators);\n    this._assignAsyncValidators(asyncValidators);\n  }\n  /**\n   * Returns the function that is used to determine the validity of this control synchronously.\n   * If multiple validators have been added, this will be a single composed function.\n   * See `Validators.compose()` for additional information.\n   */\n  get validator() {\n    return this._composedValidatorFn;\n  }\n  set validator(validatorFn) {\n    this._rawValidators = this._composedValidatorFn = validatorFn;\n  }\n  /**\n   * Returns the function that is used to determine the validity of this control asynchronously.\n   * If multiple validators have been added, this will be a single composed function.\n   * See `Validators.compose()` for additional information.\n   */\n  get asyncValidator() {\n    return this._composedAsyncValidatorFn;\n  }\n  set asyncValidator(asyncValidatorFn) {\n    this._rawAsyncValidators = this._composedAsyncValidatorFn = asyncValidatorFn;\n  }\n  /**\n   * The parent control.\n   */\n  get parent() {\n    return this._parent;\n  }\n  /**\n   * A control is `valid` when its `status` is `VALID`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if the control has passed all of its validation tests,\n   * false otherwise.\n   */\n  get valid() {\n    return this.status === VALID;\n  }\n  /**\n   * A control is `invalid` when its `status` is `INVALID`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if this control has failed one or more of its validation checks,\n   * false otherwise.\n   */\n  get invalid() {\n    return this.status === INVALID;\n  }\n  /**\n   * A control is `pending` when its `status` is `PENDING`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if this control is in the process of conducting a validation check,\n   * false otherwise.\n   */\n  get pending() {\n    return this.status == PENDING;\n  }\n  /**\n   * A control is `disabled` when its `status` is `DISABLED`.\n   *\n   * Disabled controls are exempt from validation checks and\n   * are not included in the aggregate value of their ancestor\n   * controls.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if the control is disabled, false otherwise.\n   */\n  get disabled() {\n    return this.status === DISABLED;\n  }\n  /**\n   * A control is `enabled` as long as its `status` is not `DISABLED`.\n   *\n   * @returns True if the control has any status other than 'DISABLED',\n   * false if the status is 'DISABLED'.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   */\n  get enabled() {\n    return this.status !== DISABLED;\n  }\n  /**\n   * A control is `dirty` if the user has changed the value\n   * in the UI.\n   *\n   * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n   * Programmatic changes to a control's value do not mark it dirty.\n   */\n  get dirty() {\n    return !this.pristine;\n  }\n  /**\n   * True if the control has not been marked as touched\n   *\n   * A control is `untouched` if the user has not yet triggered\n   * a `blur` event on it.\n   */\n  get untouched() {\n    return !this.touched;\n  }\n  /**\n   * Reports the update strategy of the `AbstractControl` (meaning\n   * the event on which the control updates itself).\n   * Possible values: `'change'` | `'blur'` | `'submit'`\n   * Default value: `'change'`\n   */\n  get updateOn() {\n    return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : 'change';\n  }\n  /**\n   * Sets the synchronous validators that are active on this control.  Calling\n   * this overwrites any existing synchronous validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * If you want to add a new validator without affecting existing ones, consider\n   * using `addValidators()` method instead.\n   */\n  setValidators(validators) {\n    this._assignValidators(validators);\n  }\n  /**\n   * Sets the asynchronous validators that are active on this control. Calling this\n   * overwrites any existing asynchronous validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * If you want to add a new validator without affecting existing ones, consider\n   * using `addAsyncValidators()` method instead.\n   */\n  setAsyncValidators(validators) {\n    this._assignAsyncValidators(validators);\n  }\n  /**\n   * Add a synchronous validator or validators to this control, without affecting other validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * Adding a validator that already exists will have no effect. If duplicate validator functions\n   * are present in the `validators` array, only the first instance would be added to a form\n   * control.\n   *\n   * @param validators The new validator function or functions to add to this control.\n   */\n  addValidators(validators) {\n    this.setValidators(addValidators(validators, this._rawValidators));\n  }\n  /**\n   * Add an asynchronous validator or validators to this control, without affecting other\n   * validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * Adding a validator that already exists will have no effect.\n   *\n   * @param validators The new asynchronous validator function or functions to add to this control.\n   */\n  addAsyncValidators(validators) {\n    this.setAsyncValidators(addValidators(validators, this._rawAsyncValidators));\n  }\n  /**\n   * Remove a synchronous validator from this control, without affecting other validators.\n   * Validators are compared by function reference; you must pass a reference to the exact same\n   * validator function as the one that was originally set. If a provided validator is not found,\n   * it is ignored.\n   *\n   * @usageNotes\n   *\n   * ### Reference to a ValidatorFn\n   *\n   * ```\n   * // Reference to the RequiredValidator\n   * const ctrl = new FormControl<string | null>('', Validators.required);\n   * ctrl.removeValidators(Validators.required);\n   *\n   * // Reference to anonymous function inside MinValidator\n   * const minValidator = Validators.min(3);\n   * const ctrl = new FormControl<string | null>('', minValidator);\n   * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n   * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n   *\n   * ctrl.removeValidators(minValidator);\n   * ```\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * @param validators The validator or validators to remove.\n   */\n  removeValidators(validators) {\n    this.setValidators(removeValidators(validators, this._rawValidators));\n  }\n  /**\n   * Remove an asynchronous validator from this control, without affecting other validators.\n   * Validators are compared by function reference; you must pass a reference to the exact same\n   * validator function as the one that was originally set. If a provided validator is not found, it\n   * is ignored.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * @param validators The asynchronous validator or validators to remove.\n   */\n  removeAsyncValidators(validators) {\n    this.setAsyncValidators(removeValidators(validators, this._rawAsyncValidators));\n  }\n  /**\n   * Check whether a synchronous validator function is present on this control. The provided\n   * validator must be a reference to the exact same function that was provided.\n   *\n   * @usageNotes\n   *\n   * ### Reference to a ValidatorFn\n   *\n   * ```\n   * // Reference to the RequiredValidator\n   * const ctrl = new FormControl<number | null>(0, Validators.required);\n   * expect(ctrl.hasValidator(Validators.required)).toEqual(true)\n   *\n   * // Reference to anonymous function inside MinValidator\n   * const minValidator = Validators.min(3);\n   * const ctrl = new FormControl<number | null>(0, minValidator);\n   * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n   * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n   * ```\n   *\n   * @param validator The validator to check for presence. Compared by function reference.\n   * @returns Whether the provided validator was found on this control.\n   */\n  hasValidator(validator) {\n    return hasValidator(this._rawValidators, validator);\n  }\n  /**\n   * Check whether an asynchronous validator function is present on this control. The provided\n   * validator must be a reference to the exact same function that was provided.\n   *\n   * @param validator The asynchronous validator to check for presence. Compared by function\n   *     reference.\n   * @returns Whether the provided asynchronous validator was found on this control.\n   */\n  hasAsyncValidator(validator) {\n    return hasValidator(this._rawAsyncValidators, validator);\n  }\n  /**\n   * Empties out the synchronous validator list.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  clearValidators() {\n    this.validator = null;\n  }\n  /**\n   * Empties out the async validator list.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  clearAsyncValidators() {\n    this.asyncValidator = null;\n  }\n  /**\n   * Marks the control as `touched`. A control is touched by focus and\n   * blur events that do not change the value.\n   *\n   * @see {@link markAsUntouched()}\n   * @see {@link markAsDirty()}\n   * @see {@link markAsPristine()}\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsTouched(opts = {}) {\n    this.touched = true;\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsTouched(opts);\n    }\n  }\n  /**\n   * Marks the control and all its descendant controls as `touched`.\n   * @see {@link markAsTouched()}\n   */\n  markAllAsTouched() {\n    this.markAsTouched({\n      onlySelf: true\n    });\n    this._forEachChild(control => control.markAllAsTouched());\n  }\n  /**\n   * Marks the control as `untouched`.\n   *\n   * If the control has any children, also marks all children as `untouched`\n   * and recalculates the `touched` status of all parent controls.\n   *\n   * @see {@link markAsTouched()}\n   * @see {@link markAsDirty()}\n   * @see {@link markAsPristine()}\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after the marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsUntouched(opts = {}) {\n    this.touched = false;\n    this._pendingTouched = false;\n    this._forEachChild(control => {\n      control.markAsUntouched({\n        onlySelf: true\n      });\n    });\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts);\n    }\n  }\n  /**\n   * Marks the control as `dirty`. A control becomes dirty when\n   * the control's value is changed through the UI; compare `markAsTouched`.\n   *\n   * @see {@link markAsTouched()}\n   * @see {@link markAsUntouched()}\n   * @see {@link markAsPristine()}\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsDirty(opts = {}) {\n    this.pristine = false;\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsDirty(opts);\n    }\n  }\n  /**\n   * Marks the control as `pristine`.\n   *\n   * If the control has any children, marks all children as `pristine`,\n   * and recalculates the `pristine` status of all parent\n   * controls.\n   *\n   * @see {@link markAsTouched()}\n   * @see {@link markAsUntouched()}\n   * @see {@link markAsDirty()}\n   *\n   * @param opts Configuration options that determine how the control emits events after\n   * marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsPristine(opts = {}) {\n    this.pristine = true;\n    this._pendingDirty = false;\n    this._forEachChild(control => {\n      control.markAsPristine({\n        onlySelf: true\n      });\n    });\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts);\n    }\n  }\n  /**\n   * Marks the control as `pending`.\n   *\n   * A control is pending while the control performs async validation.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @param opts Configuration options that determine how the control propagates changes and\n   * emits events after marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n   * observable emits an event with the latest status the control is marked pending.\n   * When false, no events are emitted.\n   *\n   */\n  markAsPending(opts = {}) {\n    this.status = PENDING;\n    if (opts.emitEvent !== false) {\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsPending(opts);\n    }\n  }\n  /**\n   * Disables the control. This means the control is exempt from validation checks and\n   * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n   *\n   * If the control has children, all children are also disabled.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @param opts Configuration options that determine how the control propagates\n   * changes and emits events after the control is disabled.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is disabled.\n   * When false, no events are emitted.\n   */\n  disable(opts = {}) {\n    // If parent has been marked artificially dirty we don't want to re-calculate the\n    // parent's dirtiness based on the children.\n    const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n    this.status = DISABLED;\n    this.errors = null;\n    this._forEachChild(control => {\n      control.disable({\n        ...opts,\n        onlySelf: true\n      });\n    });\n    this._updateValue();\n    if (opts.emitEvent !== false) {\n      this.valueChanges.emit(this.value);\n      this.statusChanges.emit(this.status);\n    }\n    this._updateAncestors({\n      ...opts,\n      skipPristineCheck\n    });\n    this._onDisabledChange.forEach(changeFn => changeFn(true));\n  }\n  /**\n   * Enables the control. This means the control is included in validation checks and\n   * the aggregate value of its parent. Its status recalculates based on its value and\n   * its validators.\n   *\n   * By default, if the control has children, all children are enabled.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @param opts Configure options that control how the control propagates changes and\n   * emits events when marked as untouched\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is enabled.\n   * When false, no events are emitted.\n   */\n  enable(opts = {}) {\n    // If parent has been marked artificially dirty we don't want to re-calculate the\n    // parent's dirtiness based on the children.\n    const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n    this.status = VALID;\n    this._forEachChild(control => {\n      control.enable({\n        ...opts,\n        onlySelf: true\n      });\n    });\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: opts.emitEvent\n    });\n    this._updateAncestors({\n      ...opts,\n      skipPristineCheck\n    });\n    this._onDisabledChange.forEach(changeFn => changeFn(false));\n  }\n  _updateAncestors(opts) {\n    if (this._parent && !opts.onlySelf) {\n      this._parent.updateValueAndValidity(opts);\n      if (!opts.skipPristineCheck) {\n        this._parent._updatePristine();\n      }\n      this._parent._updateTouched();\n    }\n  }\n  /**\n   * Sets the parent of the control\n   *\n   * @param parent The new parent.\n   */\n  setParent(parent) {\n    this._parent = parent;\n  }\n  /**\n   * The raw value of this control. For most control implementations, the raw value will include\n   * disabled children.\n   */\n  getRawValue() {\n    return this.value;\n  }\n  /**\n   * Recalculates the value and validation status of the control.\n   *\n   * By default, it also updates the value and validity of its ancestors.\n   *\n   * @param opts Configuration options determine how the control propagates changes and emits events\n   * after updates and validity checks are applied.\n   * * `onlySelf`: When true, only update this control. When false or not supplied,\n   * update all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is updated.\n   * When false, no events are emitted.\n   */\n  updateValueAndValidity(opts = {}) {\n    this._setInitialStatus();\n    this._updateValue();\n    if (this.enabled) {\n      this._cancelExistingSubscription();\n      this.errors = this._runValidator();\n      this.status = this._calculateStatus();\n      if (this.status === VALID || this.status === PENDING) {\n        this._runAsyncValidator(opts.emitEvent);\n      }\n    }\n    if (opts.emitEvent !== false) {\n      this.valueChanges.emit(this.value);\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent && !opts.onlySelf) {\n      this._parent.updateValueAndValidity(opts);\n    }\n  }\n  /** @internal */\n  _updateTreeValidity(opts = {\n    emitEvent: true\n  }) {\n    this._forEachChild(ctrl => ctrl._updateTreeValidity(opts));\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: opts.emitEvent\n    });\n  }\n  _setInitialStatus() {\n    this.status = this._allControlsDisabled() ? DISABLED : VALID;\n  }\n  _runValidator() {\n    return this.validator ? this.validator(this) : null;\n  }\n  _runAsyncValidator(emitEvent) {\n    if (this.asyncValidator) {\n      this.status = PENDING;\n      this._hasOwnPendingAsyncValidator = true;\n      const obs = toObservable(this.asyncValidator(this));\n      this._asyncValidationSubscription = obs.subscribe(errors => {\n        this._hasOwnPendingAsyncValidator = false;\n        // This will trigger the recalculation of the validation status, which depends on\n        // the state of the asynchronous validation (whether it is in progress or not). So, it is\n        // necessary that we have updated the `_hasOwnPendingAsyncValidator` boolean flag first.\n        this.setErrors(errors, {\n          emitEvent\n        });\n      });\n    }\n  }\n  _cancelExistingSubscription() {\n    if (this._asyncValidationSubscription) {\n      this._asyncValidationSubscription.unsubscribe();\n      this._hasOwnPendingAsyncValidator = false;\n    }\n  }\n  /**\n   * Sets errors on a form control when running validations manually, rather than automatically.\n   *\n   * Calling `setErrors` also updates the validity of the parent control.\n   *\n   * @param opts Configuration options that determine how the control propagates\n   * changes and emits events after the control errors are set.\n   * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n   * observable emits an event after the errors are set.\n   *\n   * @usageNotes\n   *\n   * ### Manually set the errors for a control\n   *\n   * ```\n   * const login = new FormControl('someLogin');\n   * login.setErrors({\n   *   notUnique: true\n   * });\n   *\n   * expect(login.valid).toEqual(false);\n   * expect(login.errors).toEqual({ notUnique: true });\n   *\n   * login.setValue('someOtherLogin');\n   *\n   * expect(login.valid).toEqual(true);\n   * ```\n   */\n  setErrors(errors, opts = {}) {\n    this.errors = errors;\n    this._updateControlsErrors(opts.emitEvent !== false);\n  }\n  /**\n   * Retrieves a child control given the control's name or path.\n   *\n   * @param path A dot-delimited string or array of string/number values that define the path to the\n   * control. If a string is provided, passing it as a string literal will result in improved type\n   * information. Likewise, if an array is provided, passing it `as const` will cause improved type\n   * information to be available.\n   *\n   * @usageNotes\n   * ### Retrieve a nested control\n   *\n   * For example, to get a `name` control nested within a `person` sub-group:\n   *\n   * * `this.form.get('person.name');`\n   *\n   * -OR-\n   *\n   * * `this.form.get(['person', 'name'] as const);` // `as const` gives improved typings\n   *\n   * ### Retrieve a control in a FormArray\n   *\n   * When accessing an element inside a FormArray, you can use an element index.\n   * For example, to get a `price` control from the first element in an `items` array you can use:\n   *\n   * * `this.form.get('items.0.price');`\n   *\n   * -OR-\n   *\n   * * `this.form.get(['items', 0, 'price']);`\n   */\n  get(path) {\n    let currPath = path;\n    if (currPath == null) return null;\n    if (!Array.isArray(currPath)) currPath = currPath.split('.');\n    if (currPath.length === 0) return null;\n    return currPath.reduce((control, name) => control && control._find(name), this);\n  }\n  /**\n   * @description\n   * Reports error data for the control with the given path.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * @returns error data for that particular error. If the control or error is not present,\n   * null is returned.\n   */\n  getError(errorCode, path) {\n    const control = path ? this.get(path) : this;\n    return control && control.errors ? control.errors[errorCode] : null;\n  }\n  /**\n   * @description\n   * Reports whether the control with the given path has the error specified.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * If no path is given, this method checks for the error on the current control.\n   *\n   * @returns whether the given error is present in the control at the given path.\n   *\n   * If the control is not present, false is returned.\n   */\n  hasError(errorCode, path) {\n    return !!this.getError(errorCode, path);\n  }\n  /**\n   * Retrieves the top-level ancestor of this control.\n   */\n  get root() {\n    let x = this;\n    while (x._parent) {\n      x = x._parent;\n    }\n    return x;\n  }\n  /** @internal */\n  _updateControlsErrors(emitEvent) {\n    this.status = this._calculateStatus();\n    if (emitEvent) {\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent) {\n      this._parent._updateControlsErrors(emitEvent);\n    }\n  }\n  /** @internal */\n  _initObservables() {\n    this.valueChanges = new EventEmitter();\n    this.statusChanges = new EventEmitter();\n  }\n  _calculateStatus() {\n    if (this._allControlsDisabled()) return DISABLED;\n    if (this.errors) return INVALID;\n    if (this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(PENDING)) return PENDING;\n    if (this._anyControlsHaveStatus(INVALID)) return INVALID;\n    return VALID;\n  }\n  /** @internal */\n  _anyControlsHaveStatus(status) {\n    return this._anyControls(control => control.status === status);\n  }\n  /** @internal */\n  _anyControlsDirty() {\n    return this._anyControls(control => control.dirty);\n  }\n  /** @internal */\n  _anyControlsTouched() {\n    return this._anyControls(control => control.touched);\n  }\n  /** @internal */\n  _updatePristine(opts = {}) {\n    this.pristine = !this._anyControlsDirty();\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts);\n    }\n  }\n  /** @internal */\n  _updateTouched(opts = {}) {\n    this.touched = this._anyControlsTouched();\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts);\n    }\n  }\n  /** @internal */\n  _registerOnCollectionChange(fn) {\n    this._onCollectionChange = fn;\n  }\n  /** @internal */\n  _setUpdateStrategy(opts) {\n    if (isOptionsObj(opts) && opts.updateOn != null) {\n      this._updateOn = opts.updateOn;\n    }\n  }\n  /**\n   * Check to see if parent has been marked artificially dirty.\n   *\n   * @internal\n   */\n  _parentMarkedDirty(onlySelf) {\n    const parentDirty = this._parent && this._parent.dirty;\n    return !onlySelf && !!parentDirty && !this._parent._anyControlsDirty();\n  }\n  /** @internal */\n  _find(name) {\n    return null;\n  }\n  /**\n   * Internal implementation of the `setValidators` method. Needs to be separated out into a\n   * different method, because it is called in the constructor and it can break cases where\n   * a control is extended.\n   */\n  _assignValidators(validators) {\n    this._rawValidators = Array.isArray(validators) ? validators.slice() : validators;\n    this._composedValidatorFn = coerceToValidator(this._rawValidators);\n  }\n  /**\n   * Internal implementation of the `setAsyncValidators` method. Needs to be separated out into a\n   * different method, because it is called in the constructor and it can break cases where\n   * a control is extended.\n   */\n  _assignAsyncValidators(validators) {\n    this._rawAsyncValidators = Array.isArray(validators) ? validators.slice() : validators;\n    this._composedAsyncValidatorFn = coerceToAsyncValidator(this._rawAsyncValidators);\n  }\n}\n\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormArray`, and `FormRecord`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * `FormGroup` is intended for use cases where the keys are known ahead of time.\n * If you need to dynamically add and remove controls, use {@link FormRecord} instead.\n *\n * `FormGroup` accepts an optional type parameter `TControl`, which is an object type with inner\n * control types as values.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### The type argument, and optional controls\n *\n * `FormGroup` accepts one generic argument, which is an object containing its inner controls.\n * This type will usually be inferred automatically, but you can always specify it explicitly if you\n * wish.\n *\n * If you have controls that are optional (i.e. they can be removed, you can use the `?` in the\n * type):\n *\n * ```\n * const form = new FormGroup<{\n *   first: FormControl<string|null>,\n *   middle?: FormControl<string|null>, // Middle name is optional.\n *   last: FormControl<string|null>,\n * }>({\n *   first: new FormControl('Nancy'),\n *   last: new FormControl('Drew'),\n * });\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * ### Using a FormGroup with optional controls\n *\n * It is possible to have optional controls in a FormGroup. An optional control can be removed later\n * using `removeControl`, and can be omitted when calling `reset`. Optional controls must be\n * declared optional in the group's type.\n *\n * ```ts\n * const c = new FormGroup<{one?: FormControl<string>}>({\n *   one: new FormControl('')\n * });\n * ```\n *\n * Notice that `c.value.one` has type `string|null|undefined`. This is because calling `c.reset({})`\n * without providing the optional key `one` will cause it to become `null`.\n *\n * @publicApi\n */\nclass FormGroup extends AbstractControl {\n  /**\n   * Creates a new `FormGroup` instance.\n   *\n   * @param controls A collection of child controls. The key for each child is the name\n   * under which it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains validation functions\n   * and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions\n   *\n   */\n  constructor(controls, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    (typeof ngDevMode === 'undefined' || ngDevMode) && validateFormGroupControls(controls);\n    this.controls = controls;\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`. The status should be broadcasted via the `statusChanges` observable,\n      // so we set `emitEvent` to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n  }\n  registerControl(name, control) {\n    if (this.controls[name]) return this.controls[name];\n    this.controls[name] = control;\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n    return control;\n  }\n  addControl(name, control, options = {}) {\n    this.registerControl(name, control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Remove a control from this group. In a strongly-typed group, required controls cannot be\n   * removed.\n   *\n   * This method also updates the value and validity of the control.\n   *\n   * @param name The control name to remove from the collection\n   * @param options Specifies whether this FormGroup instance should emit events after a\n   *     control is removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * removed. When false, no events are emitted.\n   */\n  removeControl(name, options = {}) {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete this.controls[name];\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  setControl(name, control, options = {}) {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete this.controls[name];\n    if (control) this.registerControl(name, control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  contains(controlName) {\n    return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n  }\n  /**\n   * Sets the value of the `FormGroup`. It accepts an object that matches\n   * the structure of the group, with control names as keys.\n   *\n   * @usageNotes\n   * ### Set the complete value for the form group\n   *\n   * ```\n   * const form = new FormGroup({\n   *   first: new FormControl(),\n   *   last: new FormControl()\n   * });\n   *\n   * console.log(form.value);   // {first: null, last: null}\n   *\n   * form.setValue({first: 'Nancy', last: 'Drew'});\n   * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n   * ```\n   *\n   * @throws When strict checks fail, such as setting the value of a control\n   * that doesn't exist or if you exclude a value of a control that does exist.\n   *\n   * @param value The new value for the control that matches the structure of the group.\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events after the value changes.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   */\n  setValue(value, options = {}) {\n    assertAllValuesPresent(this, true, value);\n    Object.keys(value).forEach(name => {\n      assertControlPresent(this, true, name);\n      this.controls[name].setValue(value[name], {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Patches the value of the `FormGroup`. It accepts an object with control\n   * names as keys, and does its best to match the values to the correct controls\n   * in the group.\n   *\n   * It accepts both super-sets and sub-sets of the group without throwing an error.\n   *\n   * @usageNotes\n   * ### Patch the value for a form group\n   *\n   * ```\n   * const form = new FormGroup({\n   *    first: new FormControl(),\n   *    last: new FormControl()\n   * });\n   * console.log(form.value);   // {first: null, last: null}\n   *\n   * form.patchValue({first: 'Nancy'});\n   * console.log(form.value);   // {first: 'Nancy', last: null}\n   * ```\n   *\n   * @param value The object that matches the structure of the group.\n   * @param options Configuration options that determine how the control propagates changes and\n   * emits events after the value is patched.\n   * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n   * true.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control value\n   * is updated. When false, no events are emitted. The configuration options are passed to\n   * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n   */\n  patchValue(value, options = {}) {\n    // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n    // `patchValue` can be called recursively and inner data structures might have these values, so\n    // we just ignore such cases when a field containing FormGroup instance receives `null` or\n    // `undefined` as a value.\n    if (value == null /* both `null` and `undefined` */) return;\n    Object.keys(value).forEach(name => {\n      // The compiler cannot see through the uninstantiated conditional type of `this.controls`, so\n      // `as any` is required.\n      const control = this.controls[name];\n      if (control) {\n        control.patchValue( /* Guaranteed to be present, due to the outer forEach. */value[name], {\n          onlySelf: true,\n          emitEvent: options.emitEvent\n        });\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Resets the `FormGroup`, marks all descendants `pristine` and `untouched` and sets\n   * the value of all descendants to their default values, or null if no defaults were provided.\n   *\n   * You reset to a specific form state by passing in a map of states\n   * that matches the structure of your form, with control names as keys. The state\n   * is a standalone value or a form state object with both a value and a disabled\n   * status.\n   *\n   * @param value Resets the control with an initial value,\n   * or an object that defines the initial value and disabled state.\n   *\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events when the group is reset.\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is reset.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   *\n   * @usageNotes\n   *\n   * ### Reset the form group values\n   *\n   * ```ts\n   * const form = new FormGroup({\n   *   first: new FormControl('first name'),\n   *   last: new FormControl('last name')\n   * });\n   *\n   * console.log(form.value);  // {first: 'first name', last: 'last name'}\n   *\n   * form.reset({ first: 'name', last: 'last name' });\n   *\n   * console.log(form.value);  // {first: 'name', last: 'last name'}\n   * ```\n   *\n   * ### Reset the form group values and disabled status\n   *\n   * ```\n   * const form = new FormGroup({\n   *   first: new FormControl('first name'),\n   *   last: new FormControl('last name')\n   * });\n   *\n   * form.reset({\n   *   first: {value: 'name', disabled: true},\n   *   last: 'last'\n   * });\n   *\n   * console.log(form.value);  // {last: 'last'}\n   * console.log(form.get('first').status);  // 'DISABLED'\n   * ```\n   */\n  reset(value = {}, options = {}) {\n    this._forEachChild((control, name) => {\n      control.reset(value ? value[name] : null, {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this._updatePristine(options);\n    this._updateTouched(options);\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * The aggregate value of the `FormGroup`, including any disabled controls.\n   *\n   * Retrieves all values regardless of disabled status.\n   */\n  getRawValue() {\n    return this._reduceChildren({}, (acc, control, name) => {\n      acc[name] = control.getRawValue();\n      return acc;\n    });\n  }\n  /** @internal */\n  _syncPendingControls() {\n    let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n      return child._syncPendingControls() ? true : updated;\n    });\n    if (subtreeUpdated) this.updateValueAndValidity({\n      onlySelf: true\n    });\n    return subtreeUpdated;\n  }\n  /** @internal */\n  _forEachChild(cb) {\n    Object.keys(this.controls).forEach(key => {\n      // The list of controls can change (for ex. controls might be removed) while the loop\n      // is running (as a result of invoking Forms API in `valueChanges` subscription), so we\n      // have to null check before invoking the callback.\n      const control = this.controls[key];\n      control && cb(control, key);\n    });\n  }\n  /** @internal */\n  _setUpControls() {\n    this._forEachChild(control => {\n      control.setParent(this);\n      control._registerOnCollectionChange(this._onCollectionChange);\n    });\n  }\n  /** @internal */\n  _updateValue() {\n    this.value = this._reduceValue();\n  }\n  /** @internal */\n  _anyControls(condition) {\n    for (const [controlName, control] of Object.entries(this.controls)) {\n      if (this.contains(controlName) && condition(control)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /** @internal */\n  _reduceValue() {\n    let acc = {};\n    return this._reduceChildren(acc, (acc, control, name) => {\n      if (control.enabled || this.disabled) {\n        acc[name] = control.value;\n      }\n      return acc;\n    });\n  }\n  /** @internal */\n  _reduceChildren(initValue, fn) {\n    let res = initValue;\n    this._forEachChild((control, name) => {\n      res = fn(res, control, name);\n    });\n    return res;\n  }\n  /** @internal */\n  _allControlsDisabled() {\n    for (const controlName of Object.keys(this.controls)) {\n      if (this.controls[controlName].enabled) {\n        return false;\n      }\n    }\n    return Object.keys(this.controls).length > 0 || this.disabled;\n  }\n  /** @internal */\n  _find(name) {\n    return this.controls.hasOwnProperty(name) ? this.controls[name] : null;\n  }\n}\n/**\n * Will validate that none of the controls has a key with a dot\n * Throws other wise\n */\nfunction validateFormGroupControls(controls) {\n  const invalidKeys = Object.keys(controls).filter(key => key.includes('.'));\n  if (invalidKeys.length > 0) {\n    // TODO: make this an error once there are no more uses in G3\n    console.warn(`FormGroup keys cannot include \\`.\\`, please replace the keys for: ${invalidKeys.join(',')}.`);\n  }\n}\nconst UntypedFormGroup = FormGroup;\n/**\n * @description\n * Asserts that the given control is an instance of `FormGroup`\n *\n * @publicApi\n */\nconst isFormGroup = control => control instanceof FormGroup;\n/**\n * Tracks the value and validity state of a collection of `FormControl` instances, each of which has\n * the same value type.\n *\n * `FormRecord` is very similar to {@link FormGroup}, except it can be used with a dynamic keys,\n * with controls added and removed as needed.\n *\n * `FormRecord` accepts one generic argument, which describes the type of the controls it contains.\n *\n * @usageNotes\n *\n * ```\n * let numbers = new FormRecord({bill: new FormControl('415-123-456')});\n * numbers.addControl('bob', new FormControl('415-234-567'));\n * numbers.removeControl('bill');\n * ```\n *\n * @publicApi\n */\nclass FormRecord extends FormGroup {}\n/**\n * @description\n * Asserts that the given control is an instance of `FormRecord`\n *\n * @publicApi\n */\nconst isFormRecord = control => control instanceof FormRecord;\n\n/**\n * Token to provide to allow SetDisabledState to always be called when a CVA is added, regardless of\n * whether the control is disabled or enabled.\n *\n * @see {@link FormsModule#withconfig}\n */\nconst CALL_SET_DISABLED_STATE = /*#__PURE__*/new InjectionToken('CallSetDisabledState', {\n  providedIn: 'root',\n  factory: () => setDisabledStateDefault\n});\n/**\n * Whether to use the fixed setDisabledState behavior by default.\n */\nconst setDisabledStateDefault = 'always';\nfunction controlPath(name, parent) {\n  return [...parent.path, name];\n}\n/**\n * Links a Form control and a Form directive by setting up callbacks (such as `onChange`) on both\n * instances. This function is typically invoked when form directive is being initialized.\n *\n * @param control Form control instance that should be linked.\n * @param dir Directive that should be linked with a given control.\n */\nfunction setUpControl(control, dir, callSetDisabledState = setDisabledStateDefault) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (!control) _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor) _throwMissingValueAccessorError(dir);\n  }\n  setUpValidators(control, dir);\n  dir.valueAccessor.writeValue(control.value);\n  // The legacy behavior only calls the CVA's `setDisabledState` if the control is disabled.\n  // If the `callSetDisabledState` option is set to `always`, then this bug is fixed and\n  // the method is always called.\n  if (control.disabled || callSetDisabledState === 'always') {\n    dir.valueAccessor.setDisabledState?.(control.disabled);\n  }\n  setUpViewChangePipeline(control, dir);\n  setUpModelChangePipeline(control, dir);\n  setUpBlurPipeline(control, dir);\n  setUpDisabledChangeHandler(control, dir);\n}\n/**\n * Reverts configuration performed by the `setUpControl` control function.\n * Effectively disconnects form control with a given form directive.\n * This function is typically invoked when corresponding form directive is being destroyed.\n *\n * @param control Form control which should be cleaned up.\n * @param dir Directive that should be disconnected from a given control.\n * @param validateControlPresenceOnChange Flag that indicates whether onChange handler should\n *     contain asserts to verify that it's not called once directive is destroyed. We need this flag\n *     to avoid potentially breaking changes caused by better control cleanup introduced in #39235.\n */\nfunction cleanUpControl(control, dir, validateControlPresenceOnChange = true) {\n  const noop = () => {\n    if (validateControlPresenceOnChange && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      _noControlError(dir);\n    }\n  };\n  // The `valueAccessor` field is typically defined on FromControl and FormControlName directive\n  // instances and there is a logic in `selectValueAccessor` function that throws if it's not the\n  // case. We still check the presence of `valueAccessor` before invoking its methods to make sure\n  // that cleanup works correctly if app code or tests are setup to ignore the error thrown from\n  // `selectValueAccessor`. See https://github.com/angular/angular/issues/40521.\n  if (dir.valueAccessor) {\n    dir.valueAccessor.registerOnChange(noop);\n    dir.valueAccessor.registerOnTouched(noop);\n  }\n  cleanUpValidators(control, dir);\n  if (control) {\n    dir._invokeOnDestroyCallbacks();\n    control._registerOnCollectionChange(() => {});\n  }\n}\nfunction registerOnValidatorChange(validators, onChange) {\n  validators.forEach(validator => {\n    if (validator.registerOnValidatorChange) validator.registerOnValidatorChange(onChange);\n  });\n}\n/**\n * Sets up disabled change handler function on a given form control if ControlValueAccessor\n * associated with a given directive instance supports the `setDisabledState` call.\n *\n * @param control Form control where disabled change handler should be setup.\n * @param dir Corresponding directive instance associated with this control.\n */\nfunction setUpDisabledChangeHandler(control, dir) {\n  if (dir.valueAccessor.setDisabledState) {\n    const onDisabledChange = isDisabled => {\n      dir.valueAccessor.setDisabledState(isDisabled);\n    };\n    control.registerOnDisabledChange(onDisabledChange);\n    // Register a callback function to cleanup disabled change handler\n    // from a control instance when a directive is destroyed.\n    dir._registerOnDestroy(() => {\n      control._unregisterOnDisabledChange(onDisabledChange);\n    });\n  }\n}\n/**\n * Sets up sync and async directive validators on provided form control.\n * This function merges validators from the directive into the validators of the control.\n *\n * @param control Form control where directive validators should be setup.\n * @param dir Directive instance that contains validators to be setup.\n */\nfunction setUpValidators(control, dir) {\n  const validators = getControlValidators(control);\n  if (dir.validator !== null) {\n    control.setValidators(mergeValidators(validators, dir.validator));\n  } else if (typeof validators === 'function') {\n    // If sync validators are represented by a single validator function, we force the\n    // `Validators.compose` call to happen by executing the `setValidators` function with\n    // an array that contains that function. We need this to avoid possible discrepancies in\n    // validators behavior, so sync validators are always processed by the `Validators.compose`.\n    // Note: we should consider moving this logic inside the `setValidators` function itself, so we\n    // have consistent behavior on AbstractControl API level. The same applies to the async\n    // validators logic below.\n    control.setValidators([validators]);\n  }\n  const asyncValidators = getControlAsyncValidators(control);\n  if (dir.asyncValidator !== null) {\n    control.setAsyncValidators(mergeValidators(asyncValidators, dir.asyncValidator));\n  } else if (typeof asyncValidators === 'function') {\n    control.setAsyncValidators([asyncValidators]);\n  }\n  // Re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n  const onValidatorChange = () => control.updateValueAndValidity();\n  registerOnValidatorChange(dir._rawValidators, onValidatorChange);\n  registerOnValidatorChange(dir._rawAsyncValidators, onValidatorChange);\n}\n/**\n * Cleans up sync and async directive validators on provided form control.\n * This function reverts the setup performed by the `setUpValidators` function, i.e.\n * removes directive-specific validators from a given control instance.\n *\n * @param control Form control from where directive validators should be removed.\n * @param dir Directive instance that contains validators to be removed.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpValidators(control, dir) {\n  let isControlUpdated = false;\n  if (control !== null) {\n    if (dir.validator !== null) {\n      const validators = getControlValidators(control);\n      if (Array.isArray(validators) && validators.length > 0) {\n        // Filter out directive validator function.\n        const updatedValidators = validators.filter(validator => validator !== dir.validator);\n        if (updatedValidators.length !== validators.length) {\n          isControlUpdated = true;\n          control.setValidators(updatedValidators);\n        }\n      }\n    }\n    if (dir.asyncValidator !== null) {\n      const asyncValidators = getControlAsyncValidators(control);\n      if (Array.isArray(asyncValidators) && asyncValidators.length > 0) {\n        // Filter out directive async validator function.\n        const updatedAsyncValidators = asyncValidators.filter(asyncValidator => asyncValidator !== dir.asyncValidator);\n        if (updatedAsyncValidators.length !== asyncValidators.length) {\n          isControlUpdated = true;\n          control.setAsyncValidators(updatedAsyncValidators);\n        }\n      }\n    }\n  }\n  // Clear onValidatorChange callbacks by providing a noop function.\n  const noop = () => {};\n  registerOnValidatorChange(dir._rawValidators, noop);\n  registerOnValidatorChange(dir._rawAsyncValidators, noop);\n  return isControlUpdated;\n}\nfunction setUpViewChangePipeline(control, dir) {\n  dir.valueAccessor.registerOnChange(newValue => {\n    control._pendingValue = newValue;\n    control._pendingChange = true;\n    control._pendingDirty = true;\n    if (control.updateOn === 'change') updateControl(control, dir);\n  });\n}\nfunction setUpBlurPipeline(control, dir) {\n  dir.valueAccessor.registerOnTouched(() => {\n    control._pendingTouched = true;\n    if (control.updateOn === 'blur' && control._pendingChange) updateControl(control, dir);\n    if (control.updateOn !== 'submit') control.markAsTouched();\n  });\n}\nfunction updateControl(control, dir) {\n  if (control._pendingDirty) control.markAsDirty();\n  control.setValue(control._pendingValue, {\n    emitModelToViewChange: false\n  });\n  dir.viewToModelUpdate(control._pendingValue);\n  control._pendingChange = false;\n}\nfunction setUpModelChangePipeline(control, dir) {\n  const onChange = (newValue, emitModelEvent) => {\n    // control -> view\n    dir.valueAccessor.writeValue(newValue);\n    // control -> ngModel\n    if (emitModelEvent) dir.viewToModelUpdate(newValue);\n  };\n  control.registerOnChange(onChange);\n  // Register a callback function to cleanup onChange handler\n  // from a control instance when a directive is destroyed.\n  dir._registerOnDestroy(() => {\n    control._unregisterOnChange(onChange);\n  });\n}\n/**\n * Links a FormGroup or FormArray instance and corresponding Form directive by setting up validators\n * present in the view.\n *\n * @param control FormGroup or FormArray instance that should be linked.\n * @param dir Directive that provides view validators.\n */\nfunction setUpFormContainer(control, dir) {\n  if (control == null && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'Cannot find control with');\n  setUpValidators(control, dir);\n}\n/**\n * Reverts the setup performed by the `setUpFormContainer` function.\n *\n * @param control FormGroup or FormArray instance that should be cleaned up.\n * @param dir Directive that provided view validators.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpFormContainer(control, dir) {\n  return cleanUpValidators(control, dir);\n}\nfunction _noControlError(dir) {\n  return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n  const messageEnd = _describeControlLocation(dir);\n  throw new Error(`${message} ${messageEnd}`);\n}\nfunction _describeControlLocation(dir) {\n  const path = dir.path;\n  if (path && path.length > 1) return `path: '${path.join(' -> ')}'`;\n  if (path?.[0]) return `name: '${path}'`;\n  return 'unspecified name attribute';\n}\nfunction _throwMissingValueAccessorError(dir) {\n  const loc = _describeControlLocation(dir);\n  throw new ɵRuntimeError(-1203 /* RuntimeErrorCode.NG_MISSING_VALUE_ACCESSOR */, `No value accessor for form control ${loc}.`);\n}\nfunction _throwInvalidValueAccessorError(dir) {\n  const loc = _describeControlLocation(dir);\n  throw new ɵRuntimeError(1200 /* RuntimeErrorCode.NG_VALUE_ACCESSOR_NOT_PROVIDED */, `Value accessor was not provided as an array for form control with ${loc}. ` + `Check that the \\`NG_VALUE_ACCESSOR\\` token is configured as a \\`multi: true\\` provider.`);\n}\nfunction isPropertyUpdated(changes, viewModel) {\n  if (!changes.hasOwnProperty('model')) return false;\n  const change = changes['model'];\n  if (change.isFirstChange()) return true;\n  return !Object.is(viewModel, change.currentValue);\n}\nfunction isBuiltInAccessor(valueAccessor) {\n  // Check if a given value accessor is an instance of a class that directly extends\n  // `BuiltInControlValueAccessor` one.\n  return Object.getPrototypeOf(valueAccessor.constructor) === BuiltInControlValueAccessor;\n}\nfunction syncPendingControls(form, directives) {\n  form._syncPendingControls();\n  directives.forEach(dir => {\n    const control = dir.control;\n    if (control.updateOn === 'submit' && control._pendingChange) {\n      dir.viewToModelUpdate(control._pendingValue);\n      control._pendingChange = false;\n    }\n  });\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n  if (!valueAccessors) return null;\n  if (!Array.isArray(valueAccessors) && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwInvalidValueAccessorError(dir);\n  let defaultAccessor = undefined;\n  let builtinAccessor = undefined;\n  let customAccessor = undefined;\n  valueAccessors.forEach(v => {\n    if (v.constructor === DefaultValueAccessor) {\n      defaultAccessor = v;\n    } else if (isBuiltInAccessor(v)) {\n      if (builtinAccessor && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'More than one built-in value accessor matches form control with');\n      builtinAccessor = v;\n    } else {\n      if (customAccessor && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'More than one custom value accessor matches form control with');\n      customAccessor = v;\n    }\n  });\n  if (customAccessor) return customAccessor;\n  if (builtinAccessor) return builtinAccessor;\n  if (defaultAccessor) return defaultAccessor;\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    _throwError(dir, 'No valid value accessor for form control with');\n  }\n  return null;\n}\nfunction removeListItem$1(list, el) {\n  const index = list.indexOf(el);\n  if (index > -1) list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n  if (warningConfig === 'never') return;\n  if ((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce || warningConfig === 'always' && !instance._ngModelWarningSent) {\n    console.warn(ngModelWarning(name));\n    type._ngModelWarningSentOnce = true;\n    instance._ngModelWarningSent = true;\n  }\n}\nconst formDirectiveProvider$1 = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => NgForm)\n};\nconst resolvedPromise$1 = /*#__PURE__*/(() => Promise.resolve())();\n/**\n * @description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * @usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgForm = /*#__PURE__*/(() => {\n  class NgForm extends ControlContainer {\n    constructor(validators, asyncValidators, callSetDisabledState) {\n      super();\n      this.callSetDisabledState = callSetDisabledState;\n      /**\n       * @description\n       * Returns whether the form submission has been triggered.\n       */\n      this.submitted = false;\n      this._directives = new Set();\n      /**\n       * @description\n       * Event emitter for the \"ngSubmit\" event\n       */\n      this.ngSubmit = new EventEmitter();\n      this.form = new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n    }\n    /** @nodoc */\n    ngAfterViewInit() {\n      this._setUpdateStrategy();\n    }\n    /**\n     * @description\n     * The directive instance.\n     */\n    get formDirective() {\n      return this;\n    }\n    /**\n     * @description\n     * The internal `FormGroup` instance.\n     */\n    get control() {\n      return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it is always an empty array.\n     */\n    get path() {\n      return [];\n    }\n    /**\n     * @description\n     * Returns a map of the controls in this group.\n     */\n    get controls() {\n      return this.form.controls;\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    addControl(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        dir.control = container.registerControl(dir.name, dir.control);\n        setUpControl(dir.control, dir, this.callSetDisabledState);\n        dir.control.updateValueAndValidity({\n          emitEvent: false\n        });\n        this._directives.add(dir);\n      });\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    getControl(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `NgModel` instance from the internal list of directives\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    removeControl(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        if (container) {\n          container.removeControl(dir.name);\n        }\n        this._directives.delete(dir);\n      });\n    }\n    /**\n     * @description\n     * Adds a new `NgModelGroup` directive instance to the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    addFormGroup(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        const group = new FormGroup({});\n        setUpFormContainer(group, dir);\n        container.registerControl(dir.name, group);\n        group.updateValueAndValidity({\n          emitEvent: false\n        });\n      });\n    }\n    /**\n     * @description\n     * Removes the `NgModelGroup` directive instance from the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    removeFormGroup(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        if (container) {\n          container.removeControl(dir.name);\n        }\n      });\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    getFormGroup(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `NgControl` directive.\n     *\n     * @param dir The `NgControl` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n      resolvedPromise$1.then(() => {\n        const ctrl = this.form.get(dir.path);\n        ctrl.setValue(value);\n      });\n    }\n    /**\n     * @description\n     * Sets the value for this `FormGroup`.\n     *\n     * @param value The new value\n     */\n    setValue(value) {\n      this.control.setValue(value);\n    }\n    /**\n     * @description\n     * Method called when the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n      this.submitted = true;\n      syncPendingControls(this.form, this._directives);\n      this.ngSubmit.emit($event);\n      // Forms with `method=\"dialog\"` have some special behavior\n      // that won't reload the page and that shouldn't be prevented.\n      return $event?.target?.method === 'dialog';\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n      this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n      this.form.reset(value);\n      this.submitted = false;\n    }\n    _setUpdateStrategy() {\n      if (this.options && this.options.updateOn != null) {\n        this.form._updateOn = this.options.updateOn;\n      }\n    }\n    _findContainer(path) {\n      path.pop();\n      return path.length ? this.form.get(path) : this.form;\n    }\n    static {\n      this.ɵfac = function NgForm_Factory(t) {\n        return new (t || NgForm)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: NgForm,\n        selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"formGroup\", \"\"], [\"ng-form\"], [\"\", \"ngForm\", \"\"]],\n        hostBindings: function NgForm_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"submit\", function NgForm_submit_HostBindingHandler($event) {\n              return ctx.onSubmit($event);\n            })(\"reset\", function NgForm_reset_HostBindingHandler() {\n              return ctx.onReset();\n            });\n          }\n        },\n        inputs: {\n          options: [\"ngFormOptions\", \"options\"]\n        },\n        outputs: {\n          ngSubmit: \"ngSubmit\"\n        },\n        exportAs: [\"ngForm\"],\n        features: [i0.ɵɵProvidersFeature([formDirectiveProvider$1]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return NgForm;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction removeListItem(list, el) {\n  const index = list.indexOf(el);\n  if (index > -1) list.splice(index, 1);\n}\nfunction isFormControlState(formState) {\n  return typeof formState === 'object' && formState !== null && Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n}\nconst FormControl = class FormControl extends AbstractControl {\n  constructor(\n  // formState and defaultValue will only be null if T is nullable\n  formState = null, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    /** @publicApi */\n    this.defaultValue = null;\n    /** @internal */\n    this._onChange = [];\n    /** @internal */\n    this._pendingChange = false;\n    this._applyFormState(formState);\n    this._setUpdateStrategy(validatorOrOpts);\n    this._initObservables();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`.\n      // The status should be broadcasted via the `statusChanges` observable, so we set\n      // `emitEvent` to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n    if (isOptionsObj(validatorOrOpts) && (validatorOrOpts.nonNullable || validatorOrOpts.initialValueIsDefault)) {\n      if (isFormControlState(formState)) {\n        this.defaultValue = formState.value;\n      } else {\n        this.defaultValue = formState;\n      }\n    }\n  }\n  setValue(value, options = {}) {\n    this.value = this._pendingValue = value;\n    if (this._onChange.length && options.emitModelToViewChange !== false) {\n      this._onChange.forEach(changeFn => changeFn(this.value, options.emitViewToModelChange !== false));\n    }\n    this.updateValueAndValidity(options);\n  }\n  patchValue(value, options = {}) {\n    this.setValue(value, options);\n  }\n  reset(formState = this.defaultValue, options = {}) {\n    this._applyFormState(formState);\n    this.markAsPristine(options);\n    this.markAsUntouched(options);\n    this.setValue(this.value, options);\n    this._pendingChange = false;\n  }\n  /**  @internal */\n  _updateValue() {}\n  /**  @internal */\n  _anyControls(condition) {\n    return false;\n  }\n  /**  @internal */\n  _allControlsDisabled() {\n    return this.disabled;\n  }\n  registerOnChange(fn) {\n    this._onChange.push(fn);\n  }\n  /** @internal */\n  _unregisterOnChange(fn) {\n    removeListItem(this._onChange, fn);\n  }\n  registerOnDisabledChange(fn) {\n    this._onDisabledChange.push(fn);\n  }\n  /** @internal */\n  _unregisterOnDisabledChange(fn) {\n    removeListItem(this._onDisabledChange, fn);\n  }\n  /** @internal */\n  _forEachChild(cb) {}\n  /** @internal */\n  _syncPendingControls() {\n    if (this.updateOn === 'submit') {\n      if (this._pendingDirty) this.markAsDirty();\n      if (this._pendingTouched) this.markAsTouched();\n      if (this._pendingChange) {\n        this.setValue(this._pendingValue, {\n          onlySelf: true,\n          emitModelToViewChange: false\n        });\n        return true;\n      }\n    }\n    return false;\n  }\n  _applyFormState(formState) {\n    if (isFormControlState(formState)) {\n      this.value = this._pendingValue = formState.value;\n      formState.disabled ? this.disable({\n        onlySelf: true,\n        emitEvent: false\n      }) : this.enable({\n        onlySelf: true,\n        emitEvent: false\n      });\n    } else {\n      this.value = this._pendingValue = formState;\n    }\n  }\n};\nconst UntypedFormControl = FormControl;\n/**\n * @description\n * Asserts that the given control is an instance of `FormControl`\n *\n * @publicApi\n */\nconst isFormControl = control => control instanceof FormControl;\n\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\nlet AbstractFormGroupDirective = /*#__PURE__*/(() => {\n  class AbstractFormGroupDirective extends ControlContainer {\n    /** @nodoc */\n    ngOnInit() {\n      this._checkParentType();\n      // Register the group with its parent group.\n      this.formDirective.addFormGroup(this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.formDirective) {\n        // Remove the group from its parent group.\n        this.formDirective.removeFormGroup(this);\n      }\n    }\n    /**\n     * @description\n     * The `FormGroup` bound to this directive.\n     */\n    get control() {\n      return this.formDirective.getFormGroup(this);\n    }\n    /**\n     * @description\n     * The path to this group from the top-level directive.\n     */\n    get path() {\n      return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    /** @internal */\n    _checkParentType() {}\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵAbstractFormGroupDirective_BaseFactory;\n        return function AbstractFormGroupDirective_Factory(t) {\n          return (ɵAbstractFormGroupDirective_BaseFactory || (ɵAbstractFormGroupDirective_BaseFactory = i0.ɵɵgetInheritedFactory(AbstractFormGroupDirective)))(t || AbstractFormGroupDirective);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: AbstractFormGroupDirective,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return AbstractFormGroupDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction modelParentException() {\n  return new ɵRuntimeError(1350 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP */, `\n    ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n    formGroup's partner directive \"formControlName\" instead.  Example:\n\n    ${formControlNameExample}\n\n    Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n    Example:\n\n    ${ngModelWithFormGroupExample}`);\n}\nfunction formGroupNameException() {\n  return new ɵRuntimeError(1351 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP_NAME */, `\n    ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n    Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nfunction missingNameException() {\n  return new ɵRuntimeError(1352 /* RuntimeErrorCode.NGMODEL_WITHOUT_NAME */, `If ngModel is used within a form tag, either the name attribute must be set or the form\n    control must be defined as 'standalone' in ngModelOptions.\n\n    Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n    Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n}\nfunction modelGroupParentException() {\n  return new ɵRuntimeError(1353 /* RuntimeErrorCode.NGMODELGROUP_IN_FORM_GROUP */, `\n    ngModelGroup cannot be used with a parent formGroup directive.\n\n    Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nconst modelGroupProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => NgModelGroup)\n};\n/**\n * @description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * @usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgModelGroup = /*#__PURE__*/(() => {\n  class NgModelGroup extends AbstractFormGroupDirective {\n    constructor(parent, validators, asyncValidators) {\n      super();\n      /**\n       * @description\n       * Tracks the name of the `NgModelGroup` bound to the directive. The name corresponds\n       * to a key in the parent `NgForm`.\n       */\n      this.name = '';\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n      if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw modelGroupParentException();\n      }\n    }\n    static {\n      this.ɵfac = function NgModelGroup_Factory(t) {\n        return new (t || NgModelGroup)(i0.ɵɵdirectiveInject(ControlContainer, 5), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: NgModelGroup,\n        selectors: [[\"\", \"ngModelGroup\", \"\"]],\n        inputs: {\n          name: [\"ngModelGroup\", \"name\"]\n        },\n        exportAs: [\"ngModelGroup\"],\n        features: [i0.ɵɵProvidersFeature([modelGroupProvider]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return NgModelGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formControlBinding$1 = {\n  provide: NgControl,\n  useExisting: /*#__PURE__*/forwardRef(() => NgModel)\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have an old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel`s have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise = /*#__PURE__*/(() => Promise.resolve())();\n/**\n * @description\n * Creates a `FormControl` instance from a [domain\n * model](https://en.wikipedia.org/wiki/Domain_model) and binds it to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the domain model's value in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-in-a-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like the validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex:\n * `#myVar=\"ngModel\"`). You can then access the control using the directive's `control` property.\n * However, the most commonly used properties (like `valid` and `dirty`) also exist on the control\n * for direct access. See a full list of properties directly available in\n * `AbstractControlDirective`.\n *\n * @see {@link RadioControlValueAccessor}\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel `name` attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. Here,\n * an attribute identified as name is used within a custom form control component. To still be able\n * to specify the NgModel's name, you must specify it using the `ngModelOptions` input instead.\n *\n * ```html\n * <form>\n *   <my-custom-form-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-custom-form-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgModel = /*#__PURE__*/(() => {\n  class NgModel extends NgControl {\n    constructor(parent, validators, asyncValidators, valueAccessors, _changeDetectorRef, callSetDisabledState) {\n      super();\n      this._changeDetectorRef = _changeDetectorRef;\n      this.callSetDisabledState = callSetDisabledState;\n      this.control = new FormControl();\n      /** @internal */\n      this._registered = false;\n      /**\n       * @description\n       * Tracks the name bound to the directive. If a parent form exists, it\n       * uses this name as a key to retrieve this control's value.\n       */\n      this.name = '';\n      /**\n       * @description\n       * Event emitter for producing the `ngModelChange` event after\n       * the view model updates.\n       */\n      this.update = new EventEmitter();\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n      this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      this._checkForErrors();\n      if (!this._registered || 'name' in changes) {\n        if (this._registered) {\n          this._checkName();\n          if (this.formDirective) {\n            // We can't call `formDirective.removeControl(this)`, because the `name` has already been\n            // changed. We also can't reset the name temporarily since the logic in `removeControl`\n            // is inside a promise and it won't run immediately. We work around it by giving it an\n            // object with the same shape instead.\n            const oldName = changes['name'].previousValue;\n            this.formDirective.removeControl({\n              name: oldName,\n              path: this._getPath(oldName)\n            });\n          }\n        }\n        this._setUpControl();\n      }\n      if ('isDisabled' in changes) {\n        this._updateDisabled(changes);\n      }\n      if (isPropertyUpdated(changes, this.viewModel)) {\n        this._updateValue(this.model);\n        this.viewModel = this.model;\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this.formDirective && this.formDirective.removeControl(this);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return this._getPath(this.name);\n    }\n    /**\n     * @description\n     * The top-level directive for this control if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value emitted by `ngModelChange`.\n     */\n    viewToModelUpdate(newValue) {\n      this.viewModel = newValue;\n      this.update.emit(newValue);\n    }\n    _setUpControl() {\n      this._setUpdateStrategy();\n      this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n      this._registered = true;\n    }\n    _setUpdateStrategy() {\n      if (this.options && this.options.updateOn != null) {\n        this.control._updateOn = this.options.updateOn;\n      }\n    }\n    _isStandalone() {\n      return !this._parent || !!(this.options && this.options.standalone);\n    }\n    _setUpStandalone() {\n      setUpControl(this.control, this, this.callSetDisabledState);\n      this.control.updateValueAndValidity({\n        emitEvent: false\n      });\n    }\n    _checkForErrors() {\n      if (!this._isStandalone()) {\n        this._checkParentType();\n      }\n      this._checkName();\n    }\n    _checkParentType() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!(this._parent instanceof NgModelGroup) && this._parent instanceof AbstractFormGroupDirective) {\n          throw formGroupNameException();\n        } else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n          throw modelParentException();\n        }\n      }\n    }\n    _checkName() {\n      if (this.options && this.options.name) this.name = this.options.name;\n      if (!this._isStandalone() && !this.name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw missingNameException();\n      }\n    }\n    _updateValue(value) {\n      resolvedPromise.then(() => {\n        this.control.setValue(value, {\n          emitViewToModelChange: false\n        });\n        this._changeDetectorRef?.markForCheck();\n      });\n    }\n    _updateDisabled(changes) {\n      const disabledValue = changes['isDisabled'].currentValue;\n      // checking for 0 to avoid breaking change\n      const isDisabled = disabledValue !== 0 && booleanAttribute(disabledValue);\n      resolvedPromise.then(() => {\n        if (isDisabled && !this.control.disabled) {\n          this.control.disable();\n        } else if (!isDisabled && this.control.disabled) {\n          this.control.enable();\n        }\n        this._changeDetectorRef?.markForCheck();\n      });\n    }\n    _getPath(controlName) {\n      return this._parent ? controlPath(controlName, this._parent) : [controlName];\n    }\n    static {\n      this.ɵfac = function NgModel_Factory(t) {\n        return new (t || NgModel)(i0.ɵɵdirectiveInject(ControlContainer, 9), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef, 8), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: NgModel,\n        selectors: [[\"\", \"ngModel\", \"\", 3, \"formControlName\", \"\", 3, \"formControl\", \"\"]],\n        inputs: {\n          name: \"name\",\n          isDisabled: [\"disabled\", \"isDisabled\"],\n          model: [\"ngModel\", \"model\"],\n          options: [\"ngModelOptions\", \"options\"]\n        },\n        outputs: {\n          update: \"ngModelChange\"\n        },\n        exportAs: [\"ngModel\"],\n        features: [i0.ɵɵProvidersFeature([formControlBinding$1]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return NgModel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * @publicApi\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n */\nlet ɵNgNoValidate = /*#__PURE__*/(() => {\n  class ɵNgNoValidate {\n    static {\n      this.ɵfac = function ɵNgNoValidate_Factory(t) {\n        return new (t || ɵNgNoValidate)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: ɵNgNoValidate,\n        selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"ngNativeValidate\", \"\"]],\n        hostAttrs: [\"novalidate\", \"\"]\n      });\n    }\n  }\n  return ɵNgNoValidate;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst NUMBER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => NumberValueAccessor),\n  multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NumberValueAccessor = /*#__PURE__*/(() => {\n  class NumberValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n      const normalizedValue = value == null ? '' : value;\n      this.setProperty('value', normalizedValue);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = value => {\n        fn(value == '' ? null : parseFloat(value));\n      };\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵNumberValueAccessor_BaseFactory;\n        return function NumberValueAccessor_Factory(t) {\n          return (ɵNumberValueAccessor_BaseFactory || (ɵNumberValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(NumberValueAccessor)))(t || NumberValueAccessor);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: NumberValueAccessor,\n        selectors: [[\"input\", \"type\", \"number\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"ngModel\", \"\"]],\n        hostBindings: function NumberValueAccessor_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"input\", function NumberValueAccessor_input_HostBindingHandler($event) {\n              return ctx.onChange($event.target.value);\n            })(\"blur\", function NumberValueAccessor_blur_HostBindingHandler() {\n              return ctx.onTouched();\n            });\n          }\n        },\n        features: [i0.ɵɵProvidersFeature([NUMBER_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return NumberValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => RadioControlValueAccessor),\n  multi: true\n};\nfunction throwNameError() {\n  throw new ɵRuntimeError(1202 /* RuntimeErrorCode.NAME_AND_FORM_CONTROL_NAME_MUST_MATCH */, `\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n}\n/**\n * Internal-only NgModule that works as a host for the `RadioControlRegistry` tree-shakable\n * provider. Note: the `InternalFormsSharedModule` can not be used here directly, since it's\n * declared *after* the `RadioControlRegistry` class and the `providedIn` doesn't support\n * `forwardRef` logic.\n */\nlet RadioControlRegistryModule = /*#__PURE__*/(() => {\n  class RadioControlRegistryModule {\n    static {\n      this.ɵfac = function RadioControlRegistryModule_Factory(t) {\n        return new (t || RadioControlRegistryModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: RadioControlRegistryModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return RadioControlRegistryModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nlet RadioControlRegistry = /*#__PURE__*/(() => {\n  class RadioControlRegistry {\n    constructor() {\n      this._accessors = [];\n    }\n    /**\n     * @description\n     * Adds a control to the internal registry. For internal use only.\n     */\n    add(control, accessor) {\n      this._accessors.push([control, accessor]);\n    }\n    /**\n     * @description\n     * Removes a control from the internal registry. For internal use only.\n     */\n    remove(accessor) {\n      for (let i = this._accessors.length - 1; i >= 0; --i) {\n        if (this._accessors[i][1] === accessor) {\n          this._accessors.splice(i, 1);\n          return;\n        }\n      }\n    }\n    /**\n     * @description\n     * Selects a radio button. For internal use only.\n     */\n    select(accessor) {\n      this._accessors.forEach(c => {\n        if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n          c[1].fireUncheck(accessor.value);\n        }\n      });\n    }\n    _isSameGroup(controlPair, accessor) {\n      if (!controlPair[0].control) return false;\n      return controlPair[0]._parent === accessor._control._parent && controlPair[1].name === accessor.name;\n    }\n    static {\n      this.ɵfac = function RadioControlRegistry_Factory(t) {\n        return new (t || RadioControlRegistry)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: RadioControlRegistry,\n        factory: RadioControlRegistry.ɵfac,\n        providedIn: RadioControlRegistryModule\n      });\n    }\n  }\n  return RadioControlRegistry;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet RadioControlValueAccessor = /*#__PURE__*/(() => {\n  class RadioControlValueAccessor extends BuiltInControlValueAccessor {\n    constructor(renderer, elementRef, _registry, _injector) {\n      super(renderer, elementRef);\n      this._registry = _registry;\n      this._injector = _injector;\n      this.setDisabledStateFired = false;\n      /**\n       * The registered callback function called when a change event occurs on the input element.\n       * Note: we declare `onChange` here (also used as host listener) as a function with no arguments\n       * to override the `onChange` function (which expects 1 argument) in the parent\n       * `BaseControlValueAccessor` class.\n       * @nodoc\n       */\n      this.onChange = () => {};\n      this.callSetDisabledState = inject(CALL_SET_DISABLED_STATE, {\n        optional: true\n      }) ?? setDisabledStateDefault;\n    }\n    /** @nodoc */\n    ngOnInit() {\n      this._control = this._injector.get(NgControl);\n      this._checkName();\n      this._registry.add(this._control, this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this._registry.remove(this);\n    }\n    /**\n     * Sets the \"checked\" property value on the radio input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this._state = value === this.value;\n      this.setProperty('checked', this._state);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this._fn = fn;\n      this.onChange = () => {\n        fn(this.value);\n        this._registry.select(this);\n      };\n    }\n    /** @nodoc */\n    setDisabledState(isDisabled) {\n      /**\n       * `setDisabledState` is supposed to be called whenever the disabled state of a control changes,\n       * including upon control creation. However, a longstanding bug caused the method to not fire\n       * when an *enabled* control was attached. This bug was fixed in v15 in #47576.\n       *\n       * This had a side effect: previously, it was possible to instantiate a reactive form control\n       * with `[attr.disabled]=true`, even though the corresponding control was enabled in the\n       * model. This resulted in a mismatch between the model and the DOM. Now, because\n       * `setDisabledState` is always called, the value in the DOM will be immediately overwritten\n       * with the \"correct\" enabled value.\n       *\n       * However, the fix also created an exceptional case: radio buttons. Because Reactive Forms\n       * models the entire group of radio buttons as a single `FormControl`, there is no way to\n       * control the disabled state for individual radios, so they can no longer be configured as\n       * disabled. Thus, we keep the old behavior for radio buttons, so that `[attr.disabled]`\n       * continues to work. Specifically, we drop the first call to `setDisabledState` if `disabled`\n       * is `false`, and we are not in legacy mode.\n       */\n      if (this.setDisabledStateFired || isDisabled || this.callSetDisabledState === 'whenDisabledForLegacyCode') {\n        this.setProperty('disabled', isDisabled);\n      }\n      this.setDisabledStateFired = true;\n    }\n    /**\n     * Sets the \"value\" on the radio input element and unchecks it.\n     *\n     * @param value\n     */\n    fireUncheck(value) {\n      this.writeValue(value);\n    }\n    _checkName() {\n      if (this.name && this.formControlName && this.name !== this.formControlName && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throwNameError();\n      }\n      if (!this.name && this.formControlName) this.name = this.formControlName;\n    }\n    static {\n      this.ɵfac = function RadioControlValueAccessor_Factory(t) {\n        return new (t || RadioControlValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(RadioControlRegistry), i0.ɵɵdirectiveInject(i0.Injector));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: RadioControlValueAccessor,\n        selectors: [[\"input\", \"type\", \"radio\", \"formControlName\", \"\"], [\"input\", \"type\", \"radio\", \"formControl\", \"\"], [\"input\", \"type\", \"radio\", \"ngModel\", \"\"]],\n        hostBindings: function RadioControlValueAccessor_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"change\", function RadioControlValueAccessor_change_HostBindingHandler() {\n              return ctx.onChange();\n            })(\"blur\", function RadioControlValueAccessor_blur_HostBindingHandler() {\n              return ctx.onTouched();\n            });\n          }\n        },\n        inputs: {\n          name: \"name\",\n          formControlName: \"formControlName\",\n          value: \"value\"\n        },\n        features: [i0.ɵɵProvidersFeature([RADIO_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return RadioControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst RANGE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => RangeValueAccessor),\n  multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet RangeValueAccessor = /*#__PURE__*/(() => {\n  class RangeValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.setProperty('value', parseFloat(value));\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = value => {\n        fn(value == '' ? null : parseFloat(value));\n      };\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵRangeValueAccessor_BaseFactory;\n        return function RangeValueAccessor_Factory(t) {\n          return (ɵRangeValueAccessor_BaseFactory || (ɵRangeValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(RangeValueAccessor)))(t || RangeValueAccessor);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: RangeValueAccessor,\n        selectors: [[\"input\", \"type\", \"range\", \"formControlName\", \"\"], [\"input\", \"type\", \"range\", \"formControl\", \"\"], [\"input\", \"type\", \"range\", \"ngModel\", \"\"]],\n        hostBindings: function RangeValueAccessor_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"change\", function RangeValueAccessor_change_HostBindingHandler($event) {\n              return ctx.onChange($event.target.value);\n            })(\"input\", function RangeValueAccessor_input_HostBindingHandler($event) {\n              return ctx.onChange($event.target.value);\n            })(\"blur\", function RangeValueAccessor_blur_HostBindingHandler() {\n              return ctx.onTouched();\n            });\n          }\n        },\n        features: [i0.ɵɵProvidersFeature([RANGE_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return RangeValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = /*#__PURE__*/new InjectionToken('NgModelWithFormControlWarning');\nconst formControlBinding = {\n  provide: NgControl,\n  useExisting: /*#__PURE__*/forwardRef(() => FormControlDirective)\n};\n/**\n * @description\n * Synchronizes a standalone `FormControl` instance to a form control element.\n *\n * Note that support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives was deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * The following example shows how to register a standalone control and set its value.\n *\n * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormControlDirective = /*#__PURE__*/(() => {\n  class FormControlDirective extends NgControl {\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        console.warn(disabledAttrWarning);\n      }\n    }\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlDirective. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    static {\n      this._ngModelWarningSentOnce = false;\n    }\n    constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig, callSetDisabledState) {\n      super();\n      this._ngModelWarningConfig = _ngModelWarningConfig;\n      this.callSetDisabledState = callSetDisabledState;\n      /** @deprecated as of v6 */\n      this.update = new EventEmitter();\n      /**\n       * @description\n       * Instance property used to track whether an ngModel warning has been sent out for this\n       * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n       *\n       * @internal\n       */\n      this._ngModelWarningSent = false;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n      this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (this._isControlChanged(changes)) {\n        const previousForm = changes['form'].previousValue;\n        if (previousForm) {\n          cleanUpControl(previousForm, this, /* validateControlPresenceOnChange */false);\n        }\n        setUpControl(this.form, this, this.callSetDisabledState);\n        this.form.updateValueAndValidity({\n          emitEvent: false\n        });\n      }\n      if (isPropertyUpdated(changes, this.viewModel)) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n        }\n        this.form.setValue(this.model);\n        this.viewModel = this.model;\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.form) {\n        cleanUpControl(this.form, this, /* validateControlPresenceOnChange */false);\n      }\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return [];\n    }\n    /**\n     * @description\n     * The `FormControl` bound to this directive.\n     */\n    get control() {\n      return this.form;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n      this.viewModel = newValue;\n      this.update.emit(newValue);\n    }\n    _isControlChanged(changes) {\n      return changes.hasOwnProperty('form');\n    }\n    static {\n      this.ɵfac = function FormControlDirective_Factory(t) {\n        return new (t || FormControlDirective)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: FormControlDirective,\n        selectors: [[\"\", \"formControl\", \"\"]],\n        inputs: {\n          form: [\"formControl\", \"form\"],\n          isDisabled: [\"disabled\", \"isDisabled\"],\n          model: [\"ngModel\", \"model\"]\n        },\n        outputs: {\n          update: \"ngModelChange\"\n        },\n        exportAs: [\"ngForm\"],\n        features: [i0.ɵɵProvidersFeature([formControlBinding]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return FormControlDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formDirectiveProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => FormGroupDirective)\n};\n/**\n * @description\n *\n * Binds an existing `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`/`FormRecord`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormGroupDirective = /*#__PURE__*/(() => {\n  class FormGroupDirective extends ControlContainer {\n    constructor(validators, asyncValidators, callSetDisabledState) {\n      super();\n      this.callSetDisabledState = callSetDisabledState;\n      /**\n       * @description\n       * Reports whether the form submission has been triggered.\n       */\n      this.submitted = false;\n      /**\n       * Callback that should be invoked when controls in FormGroup or FormArray collection change\n       * (added or removed). This callback triggers corresponding DOM updates.\n       */\n      this._onCollectionChange = () => this._updateDomValue();\n      /**\n       * @description\n       * Tracks the list of added `FormControlName` instances\n       */\n      this.directives = [];\n      /**\n       * @description\n       * Tracks the `FormGroup` bound to this directive.\n       */\n      this.form = null;\n      /**\n       * @description\n       * Emits an event when the form submission has been triggered.\n       */\n      this.ngSubmit = new EventEmitter();\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      this._checkFormPresent();\n      if (changes.hasOwnProperty('form')) {\n        this._updateValidators();\n        this._updateDomValue();\n        this._updateRegistrations();\n        this._oldForm = this.form;\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.form) {\n        cleanUpValidators(this.form, this);\n        // Currently the `onCollectionChange` callback is rewritten each time the\n        // `_registerOnCollectionChange` function is invoked. The implication is that cleanup should\n        // happen *only* when the `onCollectionChange` callback was set by this directive instance.\n        // Otherwise it might cause overriding a callback of some other directive instances. We should\n        // consider updating this logic later to make it similar to how `onChange` callbacks are\n        // handled, see https://github.com/angular/angular/issues/39732 for additional info.\n        if (this.form._onCollectionChange === this._onCollectionChange) {\n          this.form._registerOnCollectionChange(() => {});\n        }\n      }\n    }\n    /**\n     * @description\n     * Returns this directive's instance.\n     */\n    get formDirective() {\n      return this;\n    }\n    /**\n     * @description\n     * Returns the `FormGroup` bound to this directive.\n     */\n    get control() {\n      return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it always an empty array.\n     */\n    get path() {\n      return [];\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    addControl(dir) {\n      const ctrl = this.form.get(dir.path);\n      setUpControl(ctrl, dir, this.callSetDisabledState);\n      ctrl.updateValueAndValidity({\n        emitEvent: false\n      });\n      this.directives.push(dir);\n      return ctrl;\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    getControl(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `FormControlName` instance from the internal list of directives\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    removeControl(dir) {\n      cleanUpControl(dir.control || null, dir, /* validateControlPresenceOnChange */false);\n      removeListItem$1(this.directives, dir);\n    }\n    /**\n     * Adds a new `FormGroupName` directive instance to the form.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    addFormGroup(dir) {\n      this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormGroupName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    removeFormGroup(dir) {\n      this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    getFormGroup(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * Performs the necessary setup when a `FormArrayName` directive instance is added to the view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    addFormArray(dir) {\n      this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormArrayName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    removeFormArray(dir) {\n      this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    getFormArray(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `FormControlName` directive.\n     *\n     * @param dir The `FormControlName` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n      const ctrl = this.form.get(dir.path);\n      ctrl.setValue(value);\n    }\n    /**\n     * @description\n     * Method called with the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n      this.submitted = true;\n      syncPendingControls(this.form, this.directives);\n      this.ngSubmit.emit($event);\n      // Forms with `method=\"dialog\"` have some special behavior that won't reload the page and that\n      // shouldn't be prevented. Note that we need to null check the `event` and the `target`, because\n      // some internal apps call this method directly with the wrong arguments.\n      return $event?.target?.method === 'dialog';\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n      this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n      this.form.reset(value);\n      this.submitted = false;\n    }\n    /** @internal */\n    _updateDomValue() {\n      this.directives.forEach(dir => {\n        const oldCtrl = dir.control;\n        const newCtrl = this.form.get(dir.path);\n        if (oldCtrl !== newCtrl) {\n          // Note: the value of the `dir.control` may not be defined, for example when it's a first\n          // `FormControl` that is added to a `FormGroup` instance (via `addControl` call).\n          cleanUpControl(oldCtrl || null, dir);\n          // Check whether new control at the same location inside the corresponding `FormGroup` is an\n          // instance of `FormControl` and perform control setup only if that's the case.\n          // Note: we don't need to clear the list of directives (`this.directives`) here, it would be\n          // taken care of in the `removeControl` method invoked when corresponding `formControlName`\n          // directive instance is being removed (invoked from `FormControlName.ngOnDestroy`).\n          if (isFormControl(newCtrl)) {\n            setUpControl(newCtrl, dir, this.callSetDisabledState);\n            dir.control = newCtrl;\n          }\n        }\n      });\n      this.form._updateTreeValidity({\n        emitEvent: false\n      });\n    }\n    _setUpFormContainer(dir) {\n      const ctrl = this.form.get(dir.path);\n      setUpFormContainer(ctrl, dir);\n      // NOTE: this operation looks unnecessary in case no new validators were added in\n      // `setUpFormContainer` call. Consider updating this code to match the logic in\n      // `_cleanUpFormContainer` function.\n      ctrl.updateValueAndValidity({\n        emitEvent: false\n      });\n    }\n    _cleanUpFormContainer(dir) {\n      if (this.form) {\n        const ctrl = this.form.get(dir.path);\n        if (ctrl) {\n          const isControlUpdated = cleanUpFormContainer(ctrl, dir);\n          if (isControlUpdated) {\n            // Run validity check only in case a control was updated (i.e. view validators were\n            // removed) as removing view validators might cause validity to change.\n            ctrl.updateValueAndValidity({\n              emitEvent: false\n            });\n          }\n        }\n      }\n    }\n    _updateRegistrations() {\n      this.form._registerOnCollectionChange(this._onCollectionChange);\n      if (this._oldForm) {\n        this._oldForm._registerOnCollectionChange(() => {});\n      }\n    }\n    _updateValidators() {\n      setUpValidators(this.form, this);\n      if (this._oldForm) {\n        cleanUpValidators(this._oldForm, this);\n      }\n    }\n    _checkFormPresent() {\n      if (!this.form && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw missingFormException();\n      }\n    }\n    static {\n      this.ɵfac = function FormGroupDirective_Factory(t) {\n        return new (t || FormGroupDirective)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: FormGroupDirective,\n        selectors: [[\"\", \"formGroup\", \"\"]],\n        hostBindings: function FormGroupDirective_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"submit\", function FormGroupDirective_submit_HostBindingHandler($event) {\n              return ctx.onSubmit($event);\n            })(\"reset\", function FormGroupDirective_reset_HostBindingHandler() {\n              return ctx.onReset();\n            });\n          }\n        },\n        inputs: {\n          form: [\"formGroup\", \"form\"]\n        },\n        outputs: {\n          ngSubmit: \"ngSubmit\"\n        },\n        exportAs: [\"ngForm\"],\n        features: [i0.ɵɵProvidersFeature([formDirectiveProvider]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return FormGroupDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formGroupNameProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => FormGroupName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` or `FormRecord` to link, and\n * looks for a `FormGroup` or `FormRecord` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the `AbstractControl.get` method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the `AbstractControl.get` method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormGroupName = /*#__PURE__*/(() => {\n  class FormGroupName extends AbstractFormGroupDirective {\n    constructor(parent, validators, asyncValidators) {\n      super();\n      /**\n       * @description\n       * Tracks the name of the `FormGroup` bound to the directive. The name corresponds\n       * to a key in the parent `FormGroup` or `FormArray`.\n       * Accepts a name as a string or a number.\n       * The name in the form of a string is useful for individual forms,\n       * while the numerical form allows for form groups to be bound\n       * to indices when iterating over groups in a `FormArray`.\n       */\n      this.name = null;\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n      if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw groupParentException();\n      }\n    }\n    static {\n      this.ɵfac = function FormGroupName_Factory(t) {\n        return new (t || FormGroupName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: FormGroupName,\n        selectors: [[\"\", \"formGroupName\", \"\"]],\n        inputs: {\n          name: [\"formGroupName\", \"name\"]\n        },\n        features: [i0.ɵɵProvidersFeature([formGroupNameProvider]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return FormGroupName;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formArrayNameProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => FormArrayName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormArrayName = /*#__PURE__*/(() => {\n  class FormArrayName extends ControlContainer {\n    constructor(parent, validators, asyncValidators) {\n      super();\n      /**\n       * @description\n       * Tracks the name of the `FormArray` bound to the directive. The name corresponds\n       * to a key in the parent `FormGroup` or `FormArray`.\n       * Accepts a name as a string or a number.\n       * The name in the form of a string is useful for individual forms,\n       * while the numerical form allows for form arrays to be bound\n       * to indices when iterating over arrays in a `FormArray`.\n       */\n      this.name = null;\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /**\n     * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n     * @throws If the directive does not have a valid parent.\n     * @nodoc\n     */\n    ngOnInit() {\n      this._checkParentType();\n      this.formDirective.addFormArray(this);\n    }\n    /**\n     * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @nodoc\n     */\n    ngOnDestroy() {\n      if (this.formDirective) {\n        this.formDirective.removeFormArray(this);\n      }\n    }\n    /**\n     * @description\n     * The `FormArray` bound to this directive.\n     */\n    get control() {\n      return this.formDirective.getFormArray(this);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    _checkParentType() {\n      if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw arrayParentException();\n      }\n    }\n    static {\n      this.ɵfac = function FormArrayName_Factory(t) {\n        return new (t || FormArrayName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: FormArrayName,\n        selectors: [[\"\", \"formArrayName\", \"\"]],\n        inputs: {\n          name: [\"formArrayName\", \"name\"]\n        },\n        features: [i0.ɵɵProvidersFeature([formArrayNameProvider]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return FormArrayName;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction _hasInvalidParent(parent) {\n  return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) && !(parent instanceof FormArrayName);\n}\nconst controlNameBinding = {\n  provide: NgControl,\n  useExisting: /*#__PURE__*/forwardRef(() => FormControlName)\n};\n/**\n * @description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel is deprecated\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormControlName = /*#__PURE__*/(() => {\n  class FormControlName extends NgControl {\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        console.warn(disabledAttrWarning);\n      }\n    }\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlName. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    static {\n      this._ngModelWarningSentOnce = false;\n    }\n    constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n      super();\n      this._ngModelWarningConfig = _ngModelWarningConfig;\n      this._added = false;\n      /**\n       * @description\n       * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n       * to a key in the parent `FormGroup` or `FormArray`.\n       * Accepts a name as a string or a number.\n       * The name in the form of a string is useful for individual forms,\n       * while the numerical form allows for form controls to be bound\n       * to indices when iterating over controls in a `FormArray`.\n       */\n      this.name = null;\n      /** @deprecated as of v6 */\n      this.update = new EventEmitter();\n      /**\n       * @description\n       * Instance property used to track whether an ngModel warning has been sent out for this\n       * particular FormControlName instance. Used to support warning config of \"always\".\n       *\n       * @internal\n       */\n      this._ngModelWarningSent = false;\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n      this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (!this._added) this._setUpControl();\n      if (isPropertyUpdated(changes, this.viewModel)) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n        }\n        this.viewModel = this.model;\n        this.formDirective.updateModel(this, this.model);\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.formDirective) {\n        this.formDirective.removeControl(this);\n      }\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n      this.viewModel = newValue;\n      this.update.emit(newValue);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    _checkParentType() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!(this._parent instanceof FormGroupName) && this._parent instanceof AbstractFormGroupDirective) {\n          throw ngModelGroupException();\n        } else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) && !(this._parent instanceof FormArrayName)) {\n          throw controlParentException();\n        }\n      }\n    }\n    _setUpControl() {\n      this._checkParentType();\n      this.control = this.formDirective.addControl(this);\n      this._added = true;\n    }\n    static {\n      this.ɵfac = function FormControlName_Factory(t) {\n        return new (t || FormControlName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: FormControlName,\n        selectors: [[\"\", \"formControlName\", \"\"]],\n        inputs: {\n          name: [\"formControlName\", \"name\"],\n          isDisabled: [\"disabled\", \"isDisabled\"],\n          model: [\"ngModel\", \"model\"]\n        },\n        outputs: {\n          update: \"ngModelChange\"\n        },\n        features: [i0.ɵɵProvidersFeature([controlNameBinding]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return FormControlName;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst SELECT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => SelectControlValueAccessor),\n  multi: true\n};\nfunction _buildValueString$1(id, value) {\n  if (id == null) return `${value}`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId$1(valueString) {\n  return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in IE, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event#browser_compatibility\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet SelectControlValueAccessor = /*#__PURE__*/(() => {\n  class SelectControlValueAccessor extends BuiltInControlValueAccessor {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this._optionMap = new Map();\n      /** @internal */\n      this._idCounter = 0;\n      this._compareWith = Object.is;\n    }\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n      if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new ɵRuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n      }\n      this._compareWith = fn;\n    }\n    /**\n     * Sets the \"value\" property on the select element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.value = value;\n      const id = this._getOptionId(value);\n      const valueString = _buildValueString$1(id, value);\n      this.setProperty('value', valueString);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = valueString => {\n        this.value = this._getOptionValue(valueString);\n        fn(this.value);\n      };\n    }\n    /** @internal */\n    _registerOption() {\n      return (this._idCounter++).toString();\n    }\n    /** @internal */\n    _getOptionId(value) {\n      for (const id of this._optionMap.keys()) {\n        if (this._compareWith(this._optionMap.get(id), value)) return id;\n      }\n      return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n      const id = _extractId$1(valueString);\n      return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵSelectControlValueAccessor_BaseFactory;\n        return function SelectControlValueAccessor_Factory(t) {\n          return (ɵSelectControlValueAccessor_BaseFactory || (ɵSelectControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(SelectControlValueAccessor)))(t || SelectControlValueAccessor);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: SelectControlValueAccessor,\n        selectors: [[\"select\", \"formControlName\", \"\", 3, \"multiple\", \"\"], [\"select\", \"formControl\", \"\", 3, \"multiple\", \"\"], [\"select\", \"ngModel\", \"\", 3, \"multiple\", \"\"]],\n        hostBindings: function SelectControlValueAccessor_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"change\", function SelectControlValueAccessor_change_HostBindingHandler($event) {\n              return ctx.onChange($event.target.value);\n            })(\"blur\", function SelectControlValueAccessor_blur_HostBindingHandler() {\n              return ctx.onTouched();\n            });\n          }\n        },\n        inputs: {\n          compareWith: \"compareWith\"\n        },\n        features: [i0.ɵɵProvidersFeature([SELECT_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return SelectControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgSelectOption = /*#__PURE__*/(() => {\n  class NgSelectOption {\n    constructor(_element, _renderer, _select) {\n      this._element = _element;\n      this._renderer = _renderer;\n      this._select = _select;\n      if (this._select) this.id = this._select._registerOption();\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n      if (this._select == null) return;\n      this._select._optionMap.set(this.id, value);\n      this._setElementValue(_buildValueString$1(this.id, value));\n      this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n      this._setElementValue(value);\n      if (this._select) this._select.writeValue(this._select.value);\n    }\n    /** @internal */\n    _setElementValue(value) {\n      this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this._select) {\n        this._select._optionMap.delete(this.id);\n        this._select.writeValue(this._select.value);\n      }\n    }\n    static {\n      this.ɵfac = function NgSelectOption_Factory(t) {\n        return new (t || NgSelectOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(SelectControlValueAccessor, 9));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: NgSelectOption,\n        selectors: [[\"option\"]],\n        inputs: {\n          ngValue: \"ngValue\",\n          value: \"value\"\n        }\n      });\n    }\n  }\n  return NgSelectOption;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => SelectMultipleControlValueAccessor),\n  multi: true\n};\nfunction _buildValueString(id, value) {\n  if (id == null) return `${value}`;\n  if (typeof value === 'string') value = `'${value}'`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId(valueString) {\n  return valueString.split(':')[0];\n}\n/** Mock interface for HTMLCollection */\nclass HTMLCollection {}\n/**\n * @description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select\n * control changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *     {{ country.name }}\n *   </option>\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet SelectMultipleControlValueAccessor = /*#__PURE__*/(() => {\n  class SelectMultipleControlValueAccessor extends BuiltInControlValueAccessor {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this._optionMap = new Map();\n      /** @internal */\n      this._idCounter = 0;\n      this._compareWith = Object.is;\n    }\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n      if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new ɵRuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n      }\n      this._compareWith = fn;\n    }\n    /**\n     * Sets the \"value\" property on one or of more of the select's options.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.value = value;\n      let optionSelectedStateSetter;\n      if (Array.isArray(value)) {\n        // convert values to ids\n        const ids = value.map(v => this._getOptionId(v));\n        optionSelectedStateSetter = (opt, o) => {\n          opt._setSelected(ids.indexOf(o.toString()) > -1);\n        };\n      } else {\n        optionSelectedStateSetter = (opt, o) => {\n          opt._setSelected(false);\n        };\n      }\n      this._optionMap.forEach(optionSelectedStateSetter);\n    }\n    /**\n     * Registers a function called when the control value changes\n     * and writes an array of the selected options.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = element => {\n        const selected = [];\n        const selectedOptions = element.selectedOptions;\n        if (selectedOptions !== undefined) {\n          const options = selectedOptions;\n          for (let i = 0; i < options.length; i++) {\n            const opt = options[i];\n            const val = this._getOptionValue(opt.value);\n            selected.push(val);\n          }\n        }\n        // Degrade to use `options` when `selectedOptions` property is not available.\n        // Note: the `selectedOptions` is available in all supported browsers, but the Domino lib\n        // doesn't have it currently, see https://github.com/fgnass/domino/issues/177.\n        else {\n          const options = element.options;\n          for (let i = 0; i < options.length; i++) {\n            const opt = options[i];\n            if (opt.selected) {\n              const val = this._getOptionValue(opt.value);\n              selected.push(val);\n            }\n          }\n        }\n        this.value = selected;\n        fn(selected);\n      };\n    }\n    /** @internal */\n    _registerOption(value) {\n      const id = (this._idCounter++).toString();\n      this._optionMap.set(id, value);\n      return id;\n    }\n    /** @internal */\n    _getOptionId(value) {\n      for (const id of this._optionMap.keys()) {\n        if (this._compareWith(this._optionMap.get(id)._value, value)) return id;\n      }\n      return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n      const id = _extractId(valueString);\n      return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵSelectMultipleControlValueAccessor_BaseFactory;\n        return function SelectMultipleControlValueAccessor_Factory(t) {\n          return (ɵSelectMultipleControlValueAccessor_BaseFactory || (ɵSelectMultipleControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(SelectMultipleControlValueAccessor)))(t || SelectMultipleControlValueAccessor);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: SelectMultipleControlValueAccessor,\n        selectors: [[\"select\", \"multiple\", \"\", \"formControlName\", \"\"], [\"select\", \"multiple\", \"\", \"formControl\", \"\"], [\"select\", \"multiple\", \"\", \"ngModel\", \"\"]],\n        hostBindings: function SelectMultipleControlValueAccessor_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"change\", function SelectMultipleControlValueAccessor_change_HostBindingHandler($event) {\n              return ctx.onChange($event.target);\n            })(\"blur\", function SelectMultipleControlValueAccessor_blur_HostBindingHandler() {\n              return ctx.onTouched();\n            });\n          }\n        },\n        inputs: {\n          compareWith: \"compareWith\"\n        },\n        features: [i0.ɵɵProvidersFeature([SELECT_MULTIPLE_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return SelectMultipleControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectMultipleControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet ɵNgSelectMultipleOption = /*#__PURE__*/(() => {\n  class ɵNgSelectMultipleOption {\n    constructor(_element, _renderer, _select) {\n      this._element = _element;\n      this._renderer = _renderer;\n      this._select = _select;\n      if (this._select) {\n        this.id = this._select._registerOption(this);\n      }\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n      if (this._select == null) return;\n      this._value = value;\n      this._setElementValue(_buildValueString(this.id, value));\n      this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n      if (this._select) {\n        this._value = value;\n        this._setElementValue(_buildValueString(this.id, value));\n        this._select.writeValue(this._select.value);\n      } else {\n        this._setElementValue(value);\n      }\n    }\n    /** @internal */\n    _setElementValue(value) {\n      this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @internal */\n    _setSelected(selected) {\n      this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this._select) {\n        this._select._optionMap.delete(this.id);\n        this._select.writeValue(this._select.value);\n      }\n    }\n    static {\n      this.ɵfac = function ɵNgSelectMultipleOption_Factory(t) {\n        return new (t || ɵNgSelectMultipleOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(SelectMultipleControlValueAccessor, 9));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: ɵNgSelectMultipleOption,\n        selectors: [[\"option\"]],\n        inputs: {\n          ngValue: \"ngValue\",\n          value: \"value\"\n        }\n      });\n    }\n  }\n  return ɵNgSelectMultipleOption;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Method that updates string to integer if not already a number\n *\n * @param value The value to convert to integer.\n * @returns value of parameter converted to number or integer.\n */\nfunction toInteger(value) {\n  return typeof value === 'number' ? value : parseInt(value, 10);\n}\n/**\n * Method that ensures that provided value is a float (and converts it to float if needed).\n *\n * @param value The value to convert to float.\n * @returns value of parameter converted to number or float.\n */\nfunction toFloat(value) {\n  return typeof value === 'number' ? value : parseFloat(value);\n}\n/**\n * A base class for Validator-based Directives. The class contains common logic shared across such\n * Directives.\n *\n * For internal use only, this class is not intended for use outside of the Forms package.\n */\nlet AbstractValidatorDirective = /*#__PURE__*/(() => {\n  class AbstractValidatorDirective {\n    constructor() {\n      this._validator = nullValidator;\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (this.inputName in changes) {\n        const input = this.normalizeInput(changes[this.inputName].currentValue);\n        this._enabled = this.enabled(input);\n        this._validator = this._enabled ? this.createValidator(input) : nullValidator;\n        if (this._onChange) {\n          this._onChange();\n        }\n      }\n    }\n    /** @nodoc */\n    validate(control) {\n      return this._validator(control);\n    }\n    /** @nodoc */\n    registerOnValidatorChange(fn) {\n      this._onChange = fn;\n    }\n    /**\n     * @description\n     * Determines whether this validator should be active or not based on an input.\n     * Base class implementation checks whether an input is defined (if the value is different from\n     * `null` and `undefined`). Validator classes that extend this base class can override this\n     * function with the logic specific to a particular validator directive.\n     */\n    enabled(input) {\n      return input != null /* both `null` and `undefined` */;\n    }\n\n    static {\n      this.ɵfac = function AbstractValidatorDirective_Factory(t) {\n        return new (t || AbstractValidatorDirective)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: AbstractValidatorDirective,\n        features: [i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return AbstractValidatorDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MaxValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MaxValidator),\n  multi: true\n};\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `max` attribute.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a max validator\n *\n * The following example shows how to add a max validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel max=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MaxValidator = /*#__PURE__*/(() => {\n  class MaxValidator extends AbstractValidatorDirective {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.inputName = 'max';\n      /** @internal */\n      this.normalizeInput = input => toFloat(input);\n      /** @internal */\n      this.createValidator = max => maxValidator(max);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMaxValidator_BaseFactory;\n        return function MaxValidator_Factory(t) {\n          return (ɵMaxValidator_BaseFactory || (ɵMaxValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MaxValidator)))(t || MaxValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MaxValidator,\n        selectors: [[\"input\", \"type\", \"number\", \"max\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"max\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"max\", \"\", \"ngModel\", \"\"]],\n        hostVars: 1,\n        hostBindings: function MaxValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"max\", ctx._enabled ? ctx.max : null);\n          }\n        },\n        inputs: {\n          max: \"max\"\n        },\n        features: [i0.ɵɵProvidersFeature([MAX_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MaxValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MinValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MinValidator),\n  multi: true\n};\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a min validator\n *\n * The following example shows how to add a min validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel min=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MinValidator = /*#__PURE__*/(() => {\n  class MinValidator extends AbstractValidatorDirective {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.inputName = 'min';\n      /** @internal */\n      this.normalizeInput = input => toFloat(input);\n      /** @internal */\n      this.createValidator = min => minValidator(min);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMinValidator_BaseFactory;\n        return function MinValidator_Factory(t) {\n          return (ɵMinValidator_BaseFactory || (ɵMinValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MinValidator)))(t || MinValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MinValidator,\n        selectors: [[\"input\", \"type\", \"number\", \"min\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"min\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"min\", \"\", \"ngModel\", \"\"]],\n        hostVars: 1,\n        hostBindings: function MinValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"min\", ctx._enabled ? ctx.min : null);\n          }\n        },\n        inputs: {\n          min: \"min\"\n        },\n        features: [i0.ɵɵProvidersFeature([MIN_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MinValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => RequiredValidator),\n  multi: true\n};\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => CheckboxRequiredValidator),\n  multi: true\n};\n/**\n * @description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet RequiredValidator = /*#__PURE__*/(() => {\n  class RequiredValidator extends AbstractValidatorDirective {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.inputName = 'required';\n      /** @internal */\n      this.normalizeInput = booleanAttribute;\n      /** @internal */\n      this.createValidator = input => requiredValidator;\n    }\n    /** @nodoc */\n    enabled(input) {\n      return input;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵRequiredValidator_BaseFactory;\n        return function RequiredValidator_Factory(t) {\n          return (ɵRequiredValidator_BaseFactory || (ɵRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(RequiredValidator)))(t || RequiredValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: RequiredValidator,\n        selectors: [[\"\", \"required\", \"\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"]],\n        hostVars: 1,\n        hostBindings: function RequiredValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"required\", ctx._enabled ? \"\" : null);\n          }\n        },\n        inputs: {\n          required: \"required\"\n        },\n        features: [i0.ɵɵProvidersFeature([REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return RequiredValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an\n * ngModel binding.\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nlet CheckboxRequiredValidator = /*#__PURE__*/(() => {\n  class CheckboxRequiredValidator extends RequiredValidator {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.createValidator = input => requiredTrueValidator;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵCheckboxRequiredValidator_BaseFactory;\n        return function CheckboxRequiredValidator_Factory(t) {\n          return (ɵCheckboxRequiredValidator_BaseFactory || (ɵCheckboxRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(CheckboxRequiredValidator)))(t || CheckboxRequiredValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CheckboxRequiredValidator,\n        selectors: [[\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"ngModel\", \"\"]],\n        hostVars: 1,\n        hostBindings: function CheckboxRequiredValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"required\", ctx._enabled ? \"\" : null);\n          }\n        },\n        features: [i0.ɵɵProvidersFeature([CHECKBOX_REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return CheckboxRequiredValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst EMAIL_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => EmailValidator),\n  multi: true\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * The email validation is based on the WHATWG HTML specification with some enhancements to\n * incorporate more RFC rules. More information can be found on the [Validators.email\n * page](api/forms/Validators#email).\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel\n * binding.\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nlet EmailValidator = /*#__PURE__*/(() => {\n  class EmailValidator extends AbstractValidatorDirective {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.inputName = 'email';\n      /** @internal */\n      this.normalizeInput = booleanAttribute;\n      /** @internal */\n      this.createValidator = input => emailValidator;\n    }\n    /** @nodoc */\n    enabled(input) {\n      return input;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵEmailValidator_BaseFactory;\n        return function EmailValidator_Factory(t) {\n          return (ɵEmailValidator_BaseFactory || (ɵEmailValidator_BaseFactory = i0.ɵɵgetInheritedFactory(EmailValidator)))(t || EmailValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: EmailValidator,\n        selectors: [[\"\", \"email\", \"\", \"formControlName\", \"\"], [\"\", \"email\", \"\", \"formControl\", \"\"], [\"\", \"email\", \"\", \"ngModel\", \"\"]],\n        inputs: {\n          email: \"email\"\n        },\n        features: [i0.ɵɵProvidersFeature([EMAIL_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return EmailValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_LENGTH_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MinLengthValidator),\n  multi: true\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MinLengthValidator = /*#__PURE__*/(() => {\n  class MinLengthValidator extends AbstractValidatorDirective {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.inputName = 'minlength';\n      /** @internal */\n      this.normalizeInput = input => toInteger(input);\n      /** @internal */\n      this.createValidator = minlength => minLengthValidator(minlength);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMinLengthValidator_BaseFactory;\n        return function MinLengthValidator_Factory(t) {\n          return (ɵMinLengthValidator_BaseFactory || (ɵMinLengthValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MinLengthValidator)))(t || MinLengthValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MinLengthValidator,\n        selectors: [[\"\", \"minlength\", \"\", \"formControlName\", \"\"], [\"\", \"minlength\", \"\", \"formControl\", \"\"], [\"\", \"minlength\", \"\", \"ngModel\", \"\"]],\n        hostVars: 1,\n        hostBindings: function MinLengthValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"minlength\", ctx._enabled ? ctx.minlength : null);\n          }\n        },\n        inputs: {\n          minlength: \"minlength\"\n        },\n        features: [i0.ɵɵProvidersFeature([MIN_LENGTH_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MinLengthValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_LENGTH_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MaxLengthValidator),\n  multi: true\n};\n/**\n * A directive that adds max length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MaxLengthValidator = /*#__PURE__*/(() => {\n  class MaxLengthValidator extends AbstractValidatorDirective {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.inputName = 'maxlength';\n      /** @internal */\n      this.normalizeInput = input => toInteger(input);\n      /** @internal */\n      this.createValidator = maxlength => maxLengthValidator(maxlength);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMaxLengthValidator_BaseFactory;\n        return function MaxLengthValidator_Factory(t) {\n          return (ɵMaxLengthValidator_BaseFactory || (ɵMaxLengthValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MaxLengthValidator)))(t || MaxLengthValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MaxLengthValidator,\n        selectors: [[\"\", \"maxlength\", \"\", \"formControlName\", \"\"], [\"\", \"maxlength\", \"\", \"formControl\", \"\"], [\"\", \"maxlength\", \"\", \"ngModel\", \"\"]],\n        hostVars: 1,\n        hostBindings: function MaxLengthValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"maxlength\", ctx._enabled ? ctx.maxlength : null);\n          }\n        },\n        inputs: {\n          maxlength: \"maxlength\"\n        },\n        features: [i0.ɵɵProvidersFeature([MAX_LENGTH_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MaxLengthValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst PATTERN_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => PatternValidator),\n  multi: true\n};\n/**\n * @description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet PatternValidator = /*#__PURE__*/(() => {\n  class PatternValidator extends AbstractValidatorDirective {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.inputName = 'pattern';\n      /** @internal */\n      this.normalizeInput = input => input;\n      /** @internal */\n      this.createValidator = input => patternValidator(input);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵPatternValidator_BaseFactory;\n        return function PatternValidator_Factory(t) {\n          return (ɵPatternValidator_BaseFactory || (ɵPatternValidator_BaseFactory = i0.ɵɵgetInheritedFactory(PatternValidator)))(t || PatternValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: PatternValidator,\n        selectors: [[\"\", \"pattern\", \"\", \"formControlName\", \"\"], [\"\", \"pattern\", \"\", \"formControl\", \"\"], [\"\", \"pattern\", \"\", \"ngModel\", \"\"]],\n        hostVars: 1,\n        hostBindings: function PatternValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"pattern\", ctx._enabled ? ctx.pattern : null);\n          }\n        },\n        inputs: {\n          pattern: \"pattern\"\n        },\n        features: [i0.ɵɵProvidersFeature([PATTERN_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return PatternValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst SHARED_FORM_DIRECTIVES = [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator, MinValidator, MaxValidator];\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nconst REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nlet ɵInternalFormsSharedModule = /*#__PURE__*/(() => {\n  class ɵInternalFormsSharedModule {\n    static {\n      this.ɵfac = function ɵInternalFormsSharedModule_Factory(t) {\n        return new (t || ɵInternalFormsSharedModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: ɵInternalFormsSharedModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [RadioControlRegistryModule]\n      });\n    }\n  }\n  return ɵInternalFormsSharedModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` accepts one generic argument, which is the type of the controls inside.\n * If you need a heterogenous array, use {@link UntypedFormArray}.\n *\n * `FormArray` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormGroup`, and `FormRecord`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nclass FormArray extends AbstractControl {\n  /**\n   * Creates a new `FormArray` instance.\n   *\n   * @param controls An array of child controls. Each child control is given an index\n   * where it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains validation functions\n   * and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions\n   *\n   */\n  constructor(controls, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    this.controls = controls;\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`.\n      // The status should be broadcasted via the `statusChanges` observable, so we set `emitEvent`\n      // to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n  }\n  /**\n   * Get the `AbstractControl` at the given `index` in the array.\n   *\n   * @param index Index in the array to retrieve the control. If `index` is negative, it will wrap\n   *     around from the back, and if index is greatly negative (less than `-length`), the result is\n   * undefined. This behavior is the same as `Array.at(index)`.\n   */\n  at(index) {\n    return this.controls[this._adjustIndex(index)];\n  }\n  /**\n   * Insert a new `AbstractControl` at the end of the array.\n   *\n   * @param control Form control to be inserted\n   * @param options Specifies whether this FormArray instance should emit events after a new\n   *     control is added.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * inserted. When false, no events are emitted.\n   */\n  push(control, options = {}) {\n    this.controls.push(control);\n    this._registerControl(control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Insert a new `AbstractControl` at the given `index` in the array.\n   *\n   * @param index Index in the array to insert the control. If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), prepends to the array.\n   * This behavior is the same as `Array.splice(index, 0, control)`.\n   * @param control Form control to be inserted\n   * @param options Specifies whether this FormArray instance should emit events after a new\n   *     control is inserted.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * inserted. When false, no events are emitted.\n   */\n  insert(index, control, options = {}) {\n    this.controls.splice(index, 0, control);\n    this._registerControl(control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Remove the control at the given `index` in the array.\n   *\n   * @param index Index in the array to remove the control.  If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), removes the first\n   *     element. This behavior is the same as `Array.splice(index, 1)`.\n   * @param options Specifies whether this FormArray instance should emit events after a\n   *     control is removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * removed. When false, no events are emitted.\n   */\n  removeAt(index, options = {}) {\n    // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n    let adjustedIndex = this._adjustIndex(index);\n    if (adjustedIndex < 0) adjustedIndex = 0;\n    if (this.controls[adjustedIndex]) this.controls[adjustedIndex]._registerOnCollectionChange(() => {});\n    this.controls.splice(adjustedIndex, 1);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Replace an existing control.\n   *\n   * @param index Index in the array to replace the control. If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), replaces the first\n   *     element. This behavior is the same as `Array.splice(index, 1, control)`.\n   * @param control The `AbstractControl` control to replace the existing control\n   * @param options Specifies whether this FormArray instance should emit events after an\n   *     existing control is replaced with a new one.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * replaced with a new one. When false, no events are emitted.\n   */\n  setControl(index, control, options = {}) {\n    // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n    let adjustedIndex = this._adjustIndex(index);\n    if (adjustedIndex < 0) adjustedIndex = 0;\n    if (this.controls[adjustedIndex]) this.controls[adjustedIndex]._registerOnCollectionChange(() => {});\n    this.controls.splice(adjustedIndex, 1);\n    if (control) {\n      this.controls.splice(adjustedIndex, 0, control);\n      this._registerControl(control);\n    }\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Length of the control array.\n   */\n  get length() {\n    return this.controls.length;\n  }\n  /**\n   * Sets the value of the `FormArray`. It accepts an array that matches\n   * the structure of the control.\n   *\n   * This method performs strict checks, and throws an error if you try\n   * to set the value of a control that doesn't exist or if you exclude the\n   * value of a control.\n   *\n   * @usageNotes\n   * ### Set the values for the controls in the form array\n   *\n   * ```\n   * const arr = new FormArray([\n   *   new FormControl(),\n   *   new FormControl()\n   * ]);\n   * console.log(arr.value);   // [null, null]\n   *\n   * arr.setValue(['Nancy', 'Drew']);\n   * console.log(arr.value);   // ['Nancy', 'Drew']\n   * ```\n   *\n   * @param value Array of values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  setValue(value, options = {}) {\n    assertAllValuesPresent(this, false, value);\n    value.forEach((newValue, index) => {\n      assertControlPresent(this, false, index);\n      this.at(index).setValue(newValue, {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Patches the value of the `FormArray`. It accepts an array that matches the\n   * structure of the control, and does its best to match the values to the correct\n   * controls in the group.\n   *\n   * It accepts both super-sets and sub-sets of the array without throwing an error.\n   *\n   * @usageNotes\n   * ### Patch the values for controls in a form array\n   *\n   * ```\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * console.log(arr.value);   // [null, null]\n   *\n   * arr.patchValue(['Nancy']);\n   * console.log(arr.value);   // ['Nancy', null]\n   * ```\n   *\n   * @param value Array of latest values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control\n   * value is updated. When false, no events are emitted. The configuration options are passed to\n   * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n   */\n  patchValue(value, options = {}) {\n    // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n    // `patchValue` can be called recursively and inner data structures might have these values,\n    // so we just ignore such cases when a field containing FormArray instance receives `null` or\n    // `undefined` as a value.\n    if (value == null /* both `null` and `undefined` */) return;\n    value.forEach((newValue, index) => {\n      if (this.at(index)) {\n        this.at(index).patchValue(newValue, {\n          onlySelf: true,\n          emitEvent: options.emitEvent\n        });\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n   * value of all descendants to null or null maps.\n   *\n   * You reset to a specific form state by passing in an array of states\n   * that matches the structure of the control. The state is a standalone value\n   * or a form state object with both a value and a disabled status.\n   *\n   * @usageNotes\n   * ### Reset the values in a form array\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * arr.reset(['name', 'last name']);\n   *\n   * console.log(arr.value);  // ['name', 'last name']\n   * ```\n   *\n   * ### Reset the values in a form array and the disabled status for the first control\n   *\n   * ```\n   * arr.reset([\n   *   {value: 'name', disabled: true},\n   *   'last'\n   * ]);\n   *\n   * console.log(arr.value);  // ['last']\n   * console.log(arr.at(0).status);  // 'DISABLED'\n   * ```\n   *\n   * @param value Array of values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is reset.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  reset(value = [], options = {}) {\n    this._forEachChild((control, index) => {\n      control.reset(value[index], {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this._updatePristine(options);\n    this._updateTouched(options);\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * The aggregate value of the array, including any disabled controls.\n   *\n   * Reports all values regardless of disabled status.\n   */\n  getRawValue() {\n    return this.controls.map(control => control.getRawValue());\n  }\n  /**\n   * Remove all controls in the `FormArray`.\n   *\n   * @param options Specifies whether this FormArray instance should emit events after all\n   *     controls are removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when all controls\n   * in this FormArray instance are removed. When false, no events are emitted.\n   *\n   * @usageNotes\n   * ### Remove all elements from a FormArray\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * console.log(arr.length);  // 2\n   *\n   * arr.clear();\n   * console.log(arr.length);  // 0\n   * ```\n   *\n   * It's a simpler and more efficient alternative to removing all elements one by one:\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   *\n   * while (arr.length) {\n   *    arr.removeAt(0);\n   * }\n   * ```\n   */\n  clear(options = {}) {\n    if (this.controls.length < 1) return;\n    this._forEachChild(control => control._registerOnCollectionChange(() => {}));\n    this.controls.splice(0);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Adjusts a negative index by summing it with the length of the array. For very negative\n   * indices, the result may remain negative.\n   * @internal\n   */\n  _adjustIndex(index) {\n    return index < 0 ? index + this.length : index;\n  }\n  /** @internal */\n  _syncPendingControls() {\n    let subtreeUpdated = this.controls.reduce((updated, child) => {\n      return child._syncPendingControls() ? true : updated;\n    }, false);\n    if (subtreeUpdated) this.updateValueAndValidity({\n      onlySelf: true\n    });\n    return subtreeUpdated;\n  }\n  /** @internal */\n  _forEachChild(cb) {\n    this.controls.forEach((control, index) => {\n      cb(control, index);\n    });\n  }\n  /** @internal */\n  _updateValue() {\n    this.value = this.controls.filter(control => control.enabled || this.disabled).map(control => control.value);\n  }\n  /** @internal */\n  _anyControls(condition) {\n    return this.controls.some(control => control.enabled && condition(control));\n  }\n  /** @internal */\n  _setUpControls() {\n    this._forEachChild(control => this._registerControl(control));\n  }\n  /** @internal */\n  _allControlsDisabled() {\n    for (const control of this.controls) {\n      if (control.enabled) return false;\n    }\n    return this.controls.length > 0 || this.disabled;\n  }\n  _registerControl(control) {\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n  }\n  /** @internal */\n  _find(name) {\n    return this.at(name) ?? null;\n  }\n}\nconst UntypedFormArray = FormArray;\n/**\n * @description\n * Asserts that the given control is an instance of `FormArray`\n *\n * @publicApi\n */\nconst isFormArray = control => control instanceof FormArray;\nfunction isAbstractControlOptions(options) {\n  return !!options && (options.asyncValidators !== undefined || options.validators !== undefined || options.updateOn !== undefined);\n}\n// clang-format on\n/**\n * @description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a\n * `FormControl`, `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to\n * build complex forms.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @publicApi\n */\nlet FormBuilder = /*#__PURE__*/(() => {\n  class FormBuilder {\n    constructor() {\n      this.useNonNullable = false;\n    }\n    /**\n     * @description\n     * Returns a FormBuilder in which automatically constructed `FormControl` elements\n     * have `{nonNullable: true}` and are non-nullable.\n     *\n     * **Constructing non-nullable controls**\n     *\n     * When constructing a control, it will be non-nullable, and will reset to its initial value.\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * let name = nnfb.control('Alex'); // FormControl<string>\n     * name.reset();\n     * console.log(name); // 'Alex'\n     * ```\n     *\n     * **Constructing non-nullable groups or arrays**\n     *\n     * When constructing a group or array, all automatically created inner controls will be\n     * non-nullable, and will reset to their initial values.\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * let name = nnfb.group({who: 'Alex'}); // FormGroup<{who: FormControl<string>}>\n     * name.reset();\n     * console.log(name); // {who: 'Alex'}\n     * ```\n     * **Constructing *nullable* fields on groups or arrays**\n     *\n     * It is still possible to have a nullable field. In particular, any `FormControl` which is\n     * *already* constructed will not be altered. For example:\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * // FormGroup<{who: FormControl<string|null>}>\n     * let name = nnfb.group({who: new FormControl('Alex')});\n     * name.reset(); console.log(name); // {who: null}\n     * ```\n     *\n     * Because the inner control is constructed explicitly by the caller, the builder has\n     * no control over how it is created, and cannot exclude the `null`.\n     */\n    get nonNullable() {\n      const nnfb = new FormBuilder();\n      nnfb.useNonNullable = true;\n      return nnfb;\n    }\n    group(controls, options = null) {\n      const reducedControls = this._reduceControls(controls);\n      let newOptions = {};\n      if (isAbstractControlOptions(options)) {\n        // `options` are `AbstractControlOptions`\n        newOptions = options;\n      } else if (options !== null) {\n        // `options` are legacy form group options\n        newOptions.validators = options.validator;\n        newOptions.asyncValidators = options.asyncValidator;\n      }\n      return new FormGroup(reducedControls, newOptions);\n    }\n    /**\n     * @description\n     * Constructs a new `FormRecord` instance. Accepts a single generic argument, which is an object\n     * containing all the keys and corresponding inner control types.\n     *\n     * @param controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param options Configuration options object for the `FormRecord`. The object should have the\n     * `AbstractControlOptions` type and might contain the following fields:\n     * * `validators`: A synchronous validator function, or an array of validator functions.\n     * * `asyncValidators`: A single async validator or array of async validator functions.\n     * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur'\n     * | submit').\n     */\n    record(controls, options = null) {\n      const reducedControls = this._reduceControls(controls);\n      // Cast to `any` because the inferred types are not as specific as Element.\n      return new FormRecord(reducedControls, options);\n    }\n    /**\n     * @description\n     * Constructs a new `FormControl` with the given state, validators and options. Sets\n     * `{nonNullable: true}` in the options to get a non-nullable control. Otherwise, the\n     * control will be nullable. Accepts a single generic argument, which is the type  of the\n     * control's value.\n     *\n     * @param formState Initializes the control with an initial state value, or\n     * with an object that contains both a value and a disabled status.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or a `FormControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator\n     * functions.\n     *\n     * @usageNotes\n     *\n     * ### Initialize a control as disabled\n     *\n     * The following example returns a control with an initial value in a disabled state.\n     *\n     * <code-example path=\"forms/ts/formBuilder/form_builder_example.ts\" region=\"disabled-control\">\n     * </code-example>\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n      let newOptions = {};\n      if (!this.useNonNullable) {\n        return new FormControl(formState, validatorOrOpts, asyncValidator);\n      }\n      if (isAbstractControlOptions(validatorOrOpts)) {\n        // If the second argument is options, then they are copied.\n        newOptions = validatorOrOpts;\n      } else {\n        // If the other arguments are validators, they are copied into an options object.\n        newOptions.validators = validatorOrOpts;\n        newOptions.asyncValidators = asyncValidator;\n      }\n      return new FormControl(formState, {\n        ...newOptions,\n        nonNullable: true\n      });\n    }\n    /**\n     * Constructs a new `FormArray` from the given array of configurations,\n     * validators and options. Accepts a single generic argument, which is the type of each control\n     * inside the array.\n     *\n     * @param controls An array of child controls or control configs. Each child control is given an\n     *     index when it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of such functions, or an\n     *     `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions.\n     */\n    array(controls, validatorOrOpts, asyncValidator) {\n      const createdControls = controls.map(c => this._createControl(c));\n      // Cast to `any` because the inferred types are not as specific as Element.\n      return new FormArray(createdControls, validatorOrOpts, asyncValidator);\n    }\n    /** @internal */\n    _reduceControls(controls) {\n      const createdControls = {};\n      Object.keys(controls).forEach(controlName => {\n        createdControls[controlName] = this._createControl(controls[controlName]);\n      });\n      return createdControls;\n    }\n    /** @internal */\n    _createControl(controls) {\n      if (controls instanceof FormControl) {\n        return controls;\n      } else if (controls instanceof AbstractControl) {\n        // A control; just return it\n        return controls;\n      } else if (Array.isArray(controls)) {\n        // ControlConfig Tuple\n        const value = controls[0];\n        const validator = controls.length > 1 ? controls[1] : null;\n        const asyncValidator = controls.length > 2 ? controls[2] : null;\n        return this.control(value, validator, asyncValidator);\n      } else {\n        // T or FormControlState<T>\n        return this.control(controls);\n      }\n    }\n    static {\n      this.ɵfac = function FormBuilder_Factory(t) {\n        return new (t || FormBuilder)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: FormBuilder,\n        factory: FormBuilder.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return FormBuilder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * `NonNullableFormBuilder` is similar to {@link FormBuilder}, but automatically constructed\n * {@link FormControl} elements have `{nonNullable: true}` and are non-nullable.\n *\n * @publicApi\n */\nlet NonNullableFormBuilder = /*#__PURE__*/(() => {\n  class NonNullableFormBuilder {\n    static {\n      this.ɵfac = function NonNullableFormBuilder_Factory(t) {\n        return new (t || NonNullableFormBuilder)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: NonNullableFormBuilder,\n        factory: () => (() => inject(FormBuilder).nonNullable)(),\n        providedIn: 'root'\n      });\n    }\n  }\n  return NonNullableFormBuilder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * UntypedFormBuilder is the same as `FormBuilder`, but it provides untyped controls.\n */\nlet UntypedFormBuilder = /*#__PURE__*/(() => {\n  class UntypedFormBuilder extends FormBuilder {\n    group(controlsConfig, options = null) {\n      return super.group(controlsConfig, options);\n    }\n    /**\n     * Like `FormBuilder#control`, except the resulting control is untyped.\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n      return super.control(formState, validatorOrOpts, asyncValidator);\n    }\n    /**\n     * Like `FormBuilder#array`, except the resulting array is untyped.\n     */\n    array(controlsConfig, validatorOrOpts, asyncValidator) {\n      return super.array(controlsConfig, validatorOrOpts, asyncValidator);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵUntypedFormBuilder_BaseFactory;\n        return function UntypedFormBuilder_Factory(t) {\n          return (ɵUntypedFormBuilder_BaseFactory || (ɵUntypedFormBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(UntypedFormBuilder)))(t || UntypedFormBuilder);\n        };\n      })();\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: UntypedFormBuilder,\n        factory: UntypedFormBuilder.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return UntypedFormBuilder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the forms package.\n */\n/**\n * @publicApi\n */\nconst VERSION = /*#__PURE__*/new Version('17.0.4');\n\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * Providers associated with this module:\n * * `RadioControlRegistry`\n *\n * @see [Forms Overview](/guide/forms-overview)\n * @see [Template-driven Forms Guide](/guide/forms)\n *\n * @publicApi\n */\nlet FormsModule = /*#__PURE__*/(() => {\n  class FormsModule {\n    /**\n     * @description\n     * Provides options for configuring the forms module.\n     *\n     * @param opts An object of configuration options\n     * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n     * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n     */\n    static withConfig(opts) {\n      return {\n        ngModule: FormsModule,\n        providers: [{\n          provide: CALL_SET_DISABLED_STATE,\n          useValue: opts.callSetDisabledState ?? setDisabledStateDefault\n        }]\n      };\n    }\n    static {\n      this.ɵfac = function FormsModule_Factory(t) {\n        return new (t || FormsModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: FormsModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ɵInternalFormsSharedModule]\n      });\n    }\n  }\n  return FormsModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * Providers associated with this module:\n * * `RadioControlRegistry`\n *\n * @see [Forms Overview](guide/forms-overview)\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @publicApi\n */\nlet ReactiveFormsModule = /*#__PURE__*/(() => {\n  class ReactiveFormsModule {\n    /**\n     * @description\n     * Provides options for configuring the reactive forms module.\n     *\n     * @param opts An object of configuration options\n     * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n     * binding is used with reactive form directives.\n     * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n     * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n     */\n    static withConfig(opts) {\n      return {\n        ngModule: ReactiveFormsModule,\n        providers: [{\n          provide: NG_MODEL_WITH_FORM_CONTROL_WARNING,\n          useValue: opts.warnOnNgModelWithFormControl ?? 'always'\n        }, {\n          provide: CALL_SET_DISABLED_STATE,\n          useValue: opts.callSetDisabledState ?? setDisabledStateDefault\n        }]\n      };\n    }\n    static {\n      this.ɵfac = function ReactiveFormsModule_Factory(t) {\n        return new (t || ReactiveFormsModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: ReactiveFormsModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ɵInternalFormsSharedModule]\n      });\n    }\n  }\n  return ReactiveFormsModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @module\n * @description\n * This module is used for handling user input, by defining and building a `FormGroup` that\n * consists of `FormControl` objects, and mapping them onto the DOM. `FormControl`\n * objects can then be used to read information from the form DOM elements.\n *\n * Forms providers are not included in default providers; you must import these providers\n * explicitly.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormRecord, FormsModule, MaxLengthValidator, MaxValidator, MinLengthValidator, MinValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NonNullableFormBuilder, NumberValueAccessor, PatternValidator, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, UntypedFormArray, UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, VERSION, Validators, isFormArray, isFormControl, isFormGroup, isFormRecord, ɵInternalFormsSharedModule, ɵNgNoValidate, ɵNgSelectMultipleOption };\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { loginForm } from '../../interfaces/login-form.interface';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrl: './login.component.css'\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  sendForm: boolean=false;\r\n\r\n  constructor(private fb:FormBuilder, private authService: AuthService, private router: Router){}\r\n\r\n  ngOnInit() {}\r\n\r\n  public form = this.fb.group({\r\n    Usuario: [localStorage.getItem('usuario') || '', [Validators.required]],\r\n    Contraseña: ['', [Validators.required]],\r\n    Remember: [ false || localStorage.getItem('usuario') ]\r\n  });\r\n\r\n  login(){\r\n    this.sendForm=true\r\n    console.log(this.sendForm);\r\n    if(!this.form.valid){\r\n      console.log('Errores en el formulario');\r\n    }else{\r\n      const formData: loginForm = {\r\n        ...this.form.value,\r\n        Usuario: this.form.value.Usuario || '',\r\n        Contraseña: this.form.value.Contraseña || '',\r\n        Remember: !!this.form.value.Remember\r\n      };\r\n      console.log('login');\r\n      this.authService.login(formData).subscribe(\r\n        (response:any) => {\r\n          localStorage.setItem('token', response.token);\r\n          if (this.form.get('Remember')?.value ?? ''){\r\n            localStorage.setItem('usuario', this.form.get('Usuario')?.value ?? '');\r\n          } else {\r\n            localStorage.removeItem('usuario');\r\n          }\r\n          console.log('Respuesta del servidor:', response);\r\n          if(response.rol == 'Admin'){\r\n            this.router.navigate(['admin/dashboard']);\r\n          }\r\n          \r\n          if(response.rol == 'Centro'){\r\n            this.router.navigate(['centros/dashboard']);\r\n          }\r\n          if(response.rol == 'Alumno'){\r\n            this.router.navigate(['alumnos/dashboard']);\r\n          }\r\n          if(response.rol == 'Profesor'){\r\n            this.router.navigate(['profesores/dashboard']);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.error('Error de autenticación:', error);\r\n          Swal.fire(error.error.msg);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  validarLogin(campo: string){\r\n    return this.form.get(campo)?.valid || !this.sendForm\r\n  }\r\n  \r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n<div\r\n  class=\"position-relative overflow-hidden radial-gradient min-vh-100 d-flex align-items-center justify-content-center\">\r\n  <div class=\"d-flex align-items-center justify-content-center w-100\">\r\n    <div class=\"row justify-content-center w-100\">\r\n      <div class=\"col-md-8 col-lg-6 col-xxl-3\">\r\n        <div class=\"card mb-0\">\r\n          <div class=\"card-body\">\r\n            <a href=\"./index.html\" class=\"text-nowrap logo-img text-center d-block py-3 w-100\">\r\n              <img src=\"../assets/images/logos/logo.png\" width=\"180\" alt=\"\">\r\n            </a>\r\n            <p class=\"text-center\">Bienvenido de nuevo</p>\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"mb-3\">\r\n                <label for=\"Usuario\" class=\"form-label\">Usuario / Email</label>\r\n                <input class=\"form-control\" formControlName=\"Usuario\" id=\"Usuario\">\r\n              </div>\r\n              <p class=\"text-danger\" *ngIf=\"!validarLogin('Usuario')\">El usuario es obligatorio</p>\r\n              <div class=\"mb-4\">\r\n                <label for=\"Contraseña\" class=\"form-label\">Constraseña</label>\r\n                <input type=\"password\" class=\"form-control\" formControlName=\"Contraseña\" id=\"Constraseña\">\r\n              </div>\r\n              <p class=\"text-danger\" *ngIf=\"!validarLogin('Contraseña')\">La contraseña es obligatoria</p>\r\n              <div class=\"d-flex align-items-center justify-content-between mb-4\">\r\n                <div class=\"form-check\">\r\n                  <input class=\"form-check-input primary\" type=\"checkbox\" value=\"\" id=\"flexCheckChecked\" formControlName=\"Remember\">\r\n                  <label class=\"form-check-label text-dark\" for=\"flexCheckChecked\">\r\n                    Recuérdame\r\n                  </label>\r\n                </div>\r\n                <a class=\"text-primary fw-bold\" [routerLink]=\"['/recovery']\">¿Has olvidado tu contraseña?</a>\r\n              </div>\r\n              <button class=\"btn btn-primary w-100 py-8 fs-4 mb-4 rounded-2\" (click)=\"login()\">Entrar</button>\r\n              <div class=\"d-flex align-items-center justify-content-center\">\r\n                <p class=\"fs-4 mb-0 fw-bold\">¿Eres un Centro?</p>\r\n                <a class=\"text-primary fw-bold ms-2\" [routerLink]=\"['/registro']\">Regístrate</a>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>","export const environment = {\r\n    production: true,\r\n    base_url: 'http://h214.eps.ua.es/api',\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { loginForm } from '../interfaces/login-form.interface'\r\nimport { environment } from '../../environments/environment';\r\nimport { tap, map } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { TokenResponse } from '../interfaces/token-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  httpOptions= {\r\n    headers: new HttpHeaders ({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n\r\n  // Manejador de errores API\r\n  handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      console.log(\"Ha ocurrido un error: \",error,error.message);\r\n    } else {\r\n      console.error(\r\n        `Codigo Error: '${error.status}' `+\r\n        `Body: '${error.error}'`);\r\n    } \r\n    return throwError ('Ha sucedido un problema, reintentalo más tarde');\r\n  }\r\n\r\n  login(formData: loginForm){\r\n    console.log(formData);\r\n    return this.http.post(`${environment.base_url}/login`, formData)\r\n      .pipe(\r\n        tap( (res:any) => {\r\n          localStorage.setItem('rol', res.rol);\r\n        })\r\n      );\r\n  }\r\n\r\n  registro(formData: any){\r\n    return this.http.post(`${environment.base_url}/centros`, formData);\r\n  }\r\n\r\n  validarToken() {\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (token === ''){\r\n      return of (false);\r\n    }\r\n\r\n    return this.http.get<TokenResponse>(`${environment.base_url}/login/token`, {\r\n      headers: {\r\n        'x-token': token\r\n      }\r\n    }).pipe(\r\n      tap( res => {\r\n        localStorage.setItem('token', res.token);\r\n      }),\r\n      map ( resp => {\r\n        return true;\r\n      }),\r\n      catchError ( err => {\r\n        console.warn(err);\r\n        return of(false);\r\n      })\r\n    )\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-recovery',\r\n  templateUrl: './recovery.component.html',\r\n  styleUrl: './recovery.component.css'\r\n})\r\nexport class RecoveryComponent {\r\n\r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n<div\r\n  class=\"position-relative overflow-hidden radial-gradient min-vh-100 d-flex align-items-center justify-content-center\">\r\n  <div class=\"d-flex align-items-center justify-content-center w-100\">\r\n    <div class=\"row justify-content-center w-100\">\r\n      <div class=\"col-md-8 col-lg-6 col-xxl-3\">\r\n        <div class=\"card mb-0\">\r\n          <div class=\"card-body\">\r\n            <a href=\"./index.html\" class=\"text-nowrap logo-img text-center d-block py-3 w-100\">\r\n              <img src=\"../assets/images/logos/logo.png\" width=\"180\" alt=\"\">\r\n            </a>\r\n            <p class=\"text-center\">¿Has olvidado tu contraseña?</p>\r\n            <p class=\"text-center\">Escribe tu email abajo y te enviaremos instrucciones de cómo recuperar tu contraseña</p>\r\n            <form>\r\n              <div class=\"mb-3\">\r\n                <label for=\"exampleInputEmail1\" class=\"form-label\">Email</label>\r\n                <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\r\n              </div>\r\n              <a href=\"./index.html\" class=\"btn btn-primary w-100 py-8 fs-4 mb-4 rounded-2\">Aceptar</a>\r\n              <a href=\"./login\" class=\"btn btn-secondary w-100 py-8 fs-4 mb-4 rounded-2\">Volver</a>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport Swal from 'sweetalert2'\r\n\r\n@Component({\r\n  selector: 'app-registro',\r\n  templateUrl: './registro.component.html',\r\n  styleUrl: './registro.component.css'\r\n})\r\nexport class RegistroComponent implements OnInit {\r\n  sendForm: boolean=false;\r\n\r\n  constructor(private fb:FormBuilder, private authService: AuthService, private router: Router){}\r\n\r\n  ngOnInit() {}\r\n\r\n  public form = this.fb.group({\r\n    Nombre: ['', [Validators.required]],\r\n    Email: ['', [Validators.required, Validators.email]],\r\n    Contraseña: ['', [Validators.required]],\r\n    Calle: ['', [Validators.required]],\r\n    CP: ['', [Validators.required]],\r\n    Localidad: ['', [Validators.required]],\r\n    Provincia: ['', [Validators.required]]\r\n  });\r\n\r\n  registro(){\r\n    this.sendForm=true;\r\n    if(!this.form.valid){\r\n      console.log('Errores en el formulario');\r\n    }else{\r\n      console.log('registro');\r\n      this.authService.registro(this.form.value).subscribe(\r\n        (response:any) => {\r\n          console.log('registro!', response);\r\n          this.router.navigate(['centros']);\r\n        },\r\n        (error) => {\r\n          console.error('Error de registro:', error);\r\n          Swal.fire(error.error.message);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  validarRegistro(campo: string){\r\n    return this.form.get(campo)?.valid || !this.sendForm\r\n  }\r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n<div\r\n  class=\"position-relative overflow-hidden radial-gradient min-vh-100 d-flex align-items-center justify-content-center\">\r\n  <div class=\"d-flex align-items-center justify-content-center w-100\">\r\n    <div class=\"row justify-content-center w-100\">\r\n      <div class=\"col-md-8 col-lg-6 col-xxl-3\">\r\n        <div class=\"card mb-0\">\r\n          <div class=\"card-body\">\r\n            <a href=\"./index.html\" class=\"text-nowrap logo-img text-center d-block py-3 w-100\">\r\n              <img src=\"../assets/images/logos/logo.png\" width=\"180\" alt=\"\">\r\n            </a>\r\n            <p class=\"text-center\">Bienvenido a Blooming</p>\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"mb-3\">\r\n                <label for=\"Nombre\" class=\"form-label\">Nombre</label>\r\n                <input class=\"form-control\" formControlName=\"Nombre\" id=\"Nombre\">\r\n              </div>\r\n              <p class=\"text-danger\" *ngIf=\"!validarRegistro('Nombre')\">El Nombre es obligatorio</p>\r\n              <div class=\"mb-3\">\r\n                <label for=\"Email\" class=\"form-label\">Email</label>\r\n                <input type=\"email\" class=\"form-control\" formControlName=\"Email\">\r\n              </div>\r\n              <p class=\"text-danger\" *ngIf=\"!validarRegistro('Email')\">El Email es obligatorio</p>\r\n              <div class=\"mb-4\">\r\n                <label for=\"Contraseña\" class=\"form-label\">Contraseña</label>\r\n                <input type=\"password\" class=\"form-control\" formControlName=\"Contraseña\" id=\"Contraseña\">\r\n              </div>\r\n              <p class=\"text-danger\" *ngIf=\"!validarRegistro('Contraseña')\">La Contraseña es obligatoria</p>\r\n              <div class=\"mb-4\">\r\n                <label for=\"Calle\" class=\"form-label\">Calle</label>\r\n                <input class=\"form-control\" formControlName=\"Calle\" id=\"Calle\">\r\n              </div>\r\n              <p class=\"text-danger\" *ngIf=\"!validarRegistro('Calle')\">La Calle es obligatoria</p>\r\n              <div class=\"mb-4\">\r\n                <label for=\"CP\" class=\"form-label\">Cóigo Postal</label>\r\n                <input class=\"form-control\" formControlName=\"CP\" id=\"CP\">\r\n              </div>\r\n              <p class=\"text-danger\" *ngIf=\"!validarRegistro('CP')\">El Código Postal es obligatorio</p>\r\n              <div class=\"mb-4\">\r\n                <label for=\"Localidad\" class=\"form-label\">Localidad</label>\r\n                <input class=\"form-control\" formControlName=\"Localidad\" id=\"Localidad\">\r\n              </div>\r\n              <p class=\"text-danger\" *ngIf=\"!validarRegistro('Localidad')\">La Localidad es obligatoria</p>\r\n              <div class=\"mb-4\">\r\n                <label for=\"Provincia\" class=\"form-label\">Provincia</label>\r\n                <input class=\"form-control\" formControlName=\"Provincia\" id=\"Provincia\">\r\n              </div>\r\n              <p class=\"text-danger\" *ngIf=\"!validarRegistro('Provincia')\">La Provincia es obligatoria</p>\r\n              <button class=\"btn btn-primary w-100 py-8 fs-4 mb-4 rounded-2\" (click)=\"registro()\">Entrar</button>\r\n              <button [routerLink]=\"['/inicio']\" class=\"btn btn-secondary w-100 py-8 fs-4 mb-4 rounded-2\">Volver</button>\r\n              <div class=\"d-flex align-items-center justify-content-center\">\r\n                <p class=\"fs-4 mb-0 fw-bold\">¿Ya tienes una cuenta?</p>\r\n                <a class=\"text-primary fw-bold ms-2\" [routerLink]=\"['/login']\">Inicia sesión</a>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-inicio',\r\n  templateUrl: './inicio.component.html',\r\n  styleUrl: './inicio.component.css'\r\n})\r\nexport class InicioComponent {\r\n\r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n<div\r\n  class=\"position-relative overflow-hidden radial-gradient min-vh-100 d-flex align-items-center justify-content-center\">\r\n  <div class=\"d-flex align-items-center justify-content-center w-100\">\r\n    <div class=\"row justify-content-center w-100\">\r\n      <div class=\"col-md-8 col-lg-6 col-xxl-3\">\r\n        <div class=\"card mb-0\">\r\n          <div class=\"card-body\">\r\n            <a href=\"./index.html\" class=\"text-nowrap logo-img text-center d-block py-3 w-100\">\r\n              <img src=\"../assets/images/logos/logo.png\" width=\"180\" alt=\"\">\r\n            </a>\r\n            <p class=\"text-center\">Bienvenido de nuevo</p>\r\n            <a href=\"./login\" class=\"btn btn-primary w-100 py-8 fs-4 mb-4 rounded-2\">Inicia Sesión</a>\r\n            <p class=\"text-center\">¿Eres nuevo? Registra tu centro clicando en el botón de abajo</p>\r\n            <a href=\"./registro\" class=\"btn btn-primary w-100 py-8 fs-4 mb-4 rounded-2\">Regístrate</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthLayoutComponent } from '../layouts/auth-layout/auth-layout.component';\r\n\r\nimport { LoginComponent } from '../auth/login/login.component';\r\nimport { RecoveryComponent } from '../auth/recovery/recovery.component';\r\nimport { RegistroComponent } from './registro/registro.component';\r\nimport { InicioComponent } from './inicio/inicio.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: AuthLayoutComponent,\r\n    children: [\r\n      { path: '', component: LoginComponent},\r\n      { path: '**', redirectTo: ''}                  \r\n    ]\r\n  },\r\n  { path: 'recovery', component: AuthLayoutComponent,\r\n    children: [\r\n      { path: '', component: RecoveryComponent},\r\n      { path: '**', redirectTo: ''}                  \r\n    ]\r\n  },\r\n  { path: 'registro', component: AuthLayoutComponent,\r\n    children: [\r\n      { path: '', component: RegistroComponent},\r\n      { path: '**', redirectTo: ''}                  \r\n    ]\r\n  },\r\n  { path: 'inicio', component: AuthLayoutComponent,\r\n    children: [\r\n      { path: '', component: InicioComponent},\r\n      { path: '**', redirectTo: ''}                  \r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService, \r\n              private router: Router) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot) {\r\n    return this.authService.validarToken()\r\n      .pipe(\r\n        tap( resp => {\r\n          if (!resp) {\r\n            this.router.navigateByUrl('/login');\r\n          }\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Component, AfterViewInit  } from '@angular/core';\r\nimport { CentroService } from '../../services/centros.service';\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\n@Component({\r\n  selector: 'app-centros',\r\n  templateUrl: './centros.component.html',\r\n  styleUrl: './centros.component.css'\r\n})\r\nexport class CentrosComponent {\r\n\r\n}\r\n","\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n\r\n\r\n<div class=\"container-fluid\">\r\n    <!--  Row 1 -->\r\n    <div class=\"container-fluid\">\r\n      <div class=\"container-fluid\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body text-center\">\r\n            <h5 class=\"card-title fw-semibold mb-4\">Bienvenido de nuevo</h5>\r\n            <div class=\"card\">\r\n                <div class=\"card-body d-flex flex-column justify-content-center\">\r\n                  <a href=\"/centros/ver-profesores\" class=\"btn btn-outline-secondary btn-custom\">Profesores</a>\r\n                  <a href=\"/centros/ver-alumnos\" class=\"btn btn-outline-secondary btn-custom\">Alumnos</a>\r\n                  <a href=\"/centros/ver-clases\" class=\"btn btn-outline-secondary btn-custom\">Clases</a>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  \r\n    <div class=\"py-6 px-6 text-center\">\r\n      <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n    </div>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { sidebarItem } from '../interfaces/sidebar.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SidebarService {\r\n\r\n  menuAdmin: sidebarItem[] = [\r\n    { titulo: 'Centros', icono: 'ti ti-home', url: '/admin/ver-centros'},\r\n    { titulo: 'Profesores', icono: 'ti ti-users', url: '/admin/ver-profesores'},\r\n    { titulo: 'Alumnos', icono: 'ti ti-friends', url: '/admin/ver-alumnos'},\r\n    { titulo: 'Clases', icono: 'ti ti-school', url: '/admin/ver-clases'}\r\n  ];\r\n  menuAlumno: sidebarItem[] = [];\r\n  menuProfesor: sidebarItem[] = [\r\n    { titulo: 'Alumnos', icono: 'ti ti-friends', url: '/profesores/ver-alumnos'},\r\n    { titulo: 'Clases', icono: 'ti ti-school', url: '/profesores/ver-clases'}\r\n  ];\r\n  menuCentro: sidebarItem[] = [\r\n    { titulo: 'Profesores', icono: 'ti ti-users', url: '/centros/ver-profesores'},\r\n    { titulo: 'Alumnos', icono: 'ti ti-friends', url: '/centros/ver-alumnos'},\r\n    { titulo: 'Clases', icono: 'ti ti-school', url: '/centros/ver-clases'}\r\n  ];\r\n\r\n\r\n  constructor() { }\r\n\r\n  getmenu(){\r\n    const rol = localStorage.getItem('rol');\r\n\r\n    switch(rol) {\r\n      case 'Admin':\r\n        return this.menuAdmin;\r\n      case 'Profesor':\r\n        return this.menuProfesor;\r\n      case 'Alumno':\r\n        return this.menuAlumno;\r\n      case 'Centro':\r\n        return this.menuCentro;\r\n    }\r\n    return [];\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { sidebarItem } from '../../interfaces/sidebar.interface';\r\nimport { SidebarService } from '../../services/sidebar.service';\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrl: './sidebar.component.css'\r\n})\r\nexport class SidebarComponent implements OnInit{\r\n  menu: sidebarItem[] = [];\r\n  constructor (private sidebar: SidebarService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.menu = this.sidebar.getmenu();\r\n    console.log(this.menu);\r\n  }\r\n}\r\n","<aside class=\"left-sidebar\">\r\n    <!-- Sidebar scroll-->\r\n    <div>\r\n      <div class=\"brand-logo d-flex align-items-center justify-content-between\">\r\n        <a href=\"./admin/admindashboard\" class=\"text-nowrap logo-img\">\r\n          <br>\r\n          <img src=\"../assets/images/logos/logo.png\" width=\"180\" alt=\"\" />\r\n        </a>\r\n        <div class=\"close-btn d-xl-none d-block sidebartoggler cursor-pointer\" id=\"sidebarCollapse\">\r\n          <i class=\"ti ti-x fs-8\"></i>\r\n        </div>\r\n      </div>\r\n      <!-- Sidebar navigation-->\r\n      <nav class=\"sidebar-nav scroll-sidebar\" data-simplebar=\"\">\r\n          <br>\r\n        <ul id=\"sidebarnav\">\r\n          <li class=\"nav-small-cap\">\r\n            <i class=\"ti ti-dots nav-small-cap-icon fs-4\"></i>\r\n            <span class=\"hide-menu\">Home</span>\r\n          </li>\r\n          <li class=\"sidebar-item\" *ngFor=\"let item of menu\">\r\n            <a class=\"sidebar-link\" [routerLink]=\"item.url\" aria-expanded=\"false\">\r\n              <span>\r\n                <i class=\"{{item.icono}}\"></i>\r\n              </span>\r\n              <span class=\"hide-menu\">{{item.titulo}}</span>\r\n            </a>\r\n          </li>\r\n          <!--\r\n          <li class=\"nav-small-cap\">\r\n            <i class=\"ti ti-dots nav-small-cap-icon fs-4\"></i>\r\n            <span class=\"hide-menu\">Home</span>\r\n          </li>\r\n          <li class=\"sidebar-item\">\r\n            <a class=\"sidebar-link\" href=\"./admin/ver-centros\" aria-expanded=\"false\">\r\n              <span>\r\n                <i class=\"ti ti-home\"></i>\r\n              </span>\r\n              <span class=\"hide-menu\">Centros</span>\r\n            </a>\r\n          </li>\r\n          <li class=\"sidebar-item\">\r\n            <a class=\"sidebar-link\" href=\"./admin/ver-profesores\" aria-expanded=\"false\">\r\n              <span>\r\n                <i class=\"ti ti-address-book\"></i>\r\n              </span>\r\n              <span class=\"hide-menu\">Profesores</span>\r\n            </a>\r\n          </li>\r\n          <li class=\"sidebar-item\">\r\n            <a class=\"sidebar-link\" href=\"./admin/ver-alumnos\" aria-expanded=\"false\">\r\n              <span>\r\n                <i class=\"ti ti-address-book\"></i>\r\n              </span>\r\n              <span class=\"hide-menu\">Alumnos</span>\r\n            </a>\r\n          </li>\r\n          <li class=\"sidebar-item\">\r\n            <a class=\"sidebar-link\" href=\"./admin/ver-clases\" aria-expanded=\"false\">\r\n              <span>\r\n                <i class=\"ti ti-address-book\"></i>\r\n              </span>\r\n              <span class=\"hide-menu\">Clases</span>\r\n            </a>\r\n        </li>-->\r\n        </ul>\r\n        \r\n      </nav>\r\n      <!-- End Sidebar navigation -->\r\n    </div>\r\n    <!-- End Sidebar scroll-->\r\n</aside>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrl: './navbar.component.css'\r\n})\r\nexport class NavbarComponent {\r\n\r\n}\r\n","\r\n<!--  Header Start -->\r\n<header class=\"app-header\">\r\n    <nav class=\"navbar navbar-expand-lg navbar-light\">\r\n      <ul class=\"navbar-nav\">\r\n        <li class=\"nav-item d-block d-xl-none\">\r\n          <a class=\"nav-link sidebartoggler nav-icon-hover\" id=\"headerCollapse\" href=\"javascript:void(0)\">\r\n            <i class=\"ti ti-menu-2\"></i>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div class=\"navbar-collapse justify-content-end px-0\" id=\"navbarNav\">\r\n        <ul class=\"navbar-nav flex-row ms-auto align-items-center justify-content-end\">\r\n          <li class=\"nav-item dropdown\">\r\n            <a class=\"nav-link nav-icon-hover\" href=\"javascript:void(0)\" id=\"drop2\" data-bs-toggle=\"dropdown\"\r\n              aria-expanded=\"false\">\r\n              <img src=\"../assets/images/profile/user-1.jpg\" alt=\"\" width=\"35\" height=\"35\" class=\"rounded-circle\">\r\n            </a>\r\n            <div class=\"dropdown-menu dropdown-menu-end dropdown-menu-animate-up\" aria-labelledby=\"drop2\">\r\n              <div class=\"message-body\">\r\n                <a href=\"javascript:void(0)\" class=\"d-flex align-items-center gap-2 dropdown-item\">\r\n                  <i class=\"ti ti-user fs-6\"></i>\r\n                  <p class=\"mb-0 fs-3\">My Profile</p>\r\n                </a>\r\n                <a href=\"javascript:void(0)\" class=\"d-flex align-items-center gap-2 dropdown-item\">\r\n                  <i class=\"ti ti-mail fs-6\"></i>\r\n                  <p class=\"mb-0 fs-3\">My Account</p>\r\n                </a>\r\n                <a href=\"javascript:void(0)\" class=\"d-flex align-items-center gap-2 dropdown-item\">\r\n                  <i class=\"ti ti-list-check fs-6\"></i>\r\n                  <p class=\"mb-0 fs-3\">My Task</p>\r\n                </a>\r\n                <a href=\"./authentication-login.html\" class=\"btn btn-outline-primary mx-3 mt-2 d-block\">Logout</a>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  </header>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin-layout',\r\n  templateUrl: './admin-layout.component.html',\r\n  styleUrl: './admin-layout.component.css'\r\n})\r\n\r\n\r\nexport class AdminLayoutComponent {\r\n\r\n}\r\n","<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n    <div>\r\n        <app-sidebar></app-sidebar>\r\n    </div>\r\n\r\n    <div class=\"body-wrapper\">\r\n        <app-navbar></app-navbar>\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { AlumnoService } from '../../../services/alumnos.service';\r\nimport Swal from 'sweetalert2'\r\n\r\n@Component({\r\n  selector: 'app-crear-alumnos',\r\n  templateUrl: './crear-alumnos.component.html',\r\n  styleUrl: './crear-alumnos.component.css'\r\n})\r\nexport class CrearAlumnosComponent {\r\n\r\n  sendForm: boolean=false;\r\n\r\n  constructor(private fb:FormBuilder, private alumnoService: AlumnoService, private router: Router){}\r\n\r\n  public form = this.fb.group({\r\n    Nombre: ['', [Validators.required]],\r\n    Apellidos: ['', [Validators.required]],\r\n    Contraseña: ['', [Validators.required]],\r\n    FechaNacimiento: ['', [Validators.required]],\r\n    ID_Clase: ['', [Validators.required]]\r\n  });\r\n\r\n  crearAlumno(){\r\n    this.sendForm=true;\r\n    if(!this.form.valid){\r\n      console.log('Errores en el formulario');\r\n    }else{\r\n      this.alumnoService.postAlumno(this.form.value).subscribe(\r\n        (response:any) => {\r\n          this.router.navigate(['admin/ver-alumnos']);\r\n        },\r\n        (error) => {\r\n          console.error('Error de creación:', error);\r\n          Swal.fire(error.error.message);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  validarForm(campo: string){\r\n    return this.form.get(campo)?.valid || !this.sendForm\r\n  }\r\n\r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n<!--  Main wrapper -->\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n  \r\n  <!--  Header End -->\r\n  <div class=\"container-fluid\">\r\n    <!--  Row 1 -->\r\n    \r\n    <div class=\"container-fluid\">\r\n        <div class=\"container-fluid\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title fw-semibold mb-4\">Crear Alumno</h5>\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <form [formGroup]=\"form\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"Nombre\" class=\"form-label\">Nombre</label>\r\n                      <input class=\"form-control\" formControlName=\"Nombre\" id=\"Nombre\">\r\n                    </div>\r\n                    <p class=\"text-danger\" *ngIf=\"!validarForm('Nombre')\">El Nombre es obligatorio</p>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"Apellidos\" class=\"form-label\">Apellidos</label>\r\n                      <input class=\"form-control\" formControlName=\"Apellidos\" id=\"Apellidos\">\r\n                    </div>\r\n                    <p class=\"text-danger\" *ngIf=\"!validarForm('Apellidos')\">El Nombre es obligatorio</p>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"Contraseña\" class=\"form-label\">Contraseña</label>\r\n                      <input type=\"password\" class=\"form-control\" formControlName=\"Contraseña\" id=\"Contraseña\">\r\n                    </div>\r\n                    <p class=\"text-danger\" *ngIf=\"!validarForm('Contraseña')\">El Nombre es obligatorio</p>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"FechaNacimiento\" class=\"form-label\">Fecha de Nacimiento</label>\r\n                      <input class=\"form-control\" formControlName=\"FechaNacimiento\" id=\"FechaNacimiento\">\r\n                    </div>\r\n                    <p class=\"text-danger\" *ngIf=\"!validarForm('FechaNacimiento')\">El Nombre es obligatorio</p>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"ID_Clase\" class=\"form-label\">Clase</label>\r\n                      <input class=\"form-control\" formControlName=\"ID_Clase\" id=\"ID_Clase\">\r\n                    </div>\r\n                    <p class=\"text-danger\" *ngIf=\"!validarForm('ID_Clase')\">El Nombre es obligatorio</p>\r\n                    <!-- <div class=\"mb-3\">\r\n                      <label for=\"ID_Centro\" class=\"form-label\">Centro</label>\r\n                      <input class=\"form-control\" formControlName=\"ID_Centro\" id=\"ID_Centro\">\r\n                    </div>\r\n                    <p class=\"text-danger\" *ngIf=\"!validarForm('ID_Centro')\">El Centro es obligatorio</p> -->\r\n                    <button class=\"btn btn-danger\" (click)=\"crearAlumno()\">Aceptar</button>\r\n                    <button routerLink=\"/admin/ver-alumnos\" class=\"btn btn-danger\">Volver</button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n      \r\n    <div class=\"py-6 px-6 text-center\">\r\n        <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n      </div>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlumnoService {\r\n\r\n  private basePath=`${environment.base_url}/alumnos/`;\r\n  private httpOptions: any;\r\n  constructor(private http: HttpClient) { \r\n  }\r\n  \r\n  // Opciones Http\r\n  private getHeader(){\r\n    this.httpOptions = {\r\n      headers: this.addToken(),\r\n    };\r\n  }\r\n\r\n    private getToken(){\r\n      let token;\r\n      if (typeof localStorage !== 'undefined') {\r\n        token = localStorage.getItem('token');\r\n      } \r\n      return token;\r\n    }\r\n\r\n    private addToken(): HttpHeaders {\r\n      const token = this.getToken();\r\n      return new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-token': `${token}`,\r\n      });\r\n    }\r\n\r\n  //LLAMADAS API  \r\n  getAlumnos(){\r\n    this.getHeader();\r\n    return this.http.get(this.basePath, this.httpOptions );\r\n  }\r\n\r\n  deleteAlumno(id:number){\r\n    this.getHeader();\r\n    return this.http.delete(this.basePath+id, this.httpOptions);\r\n  }\r\n\r\n  postAlumno(formData: any){\r\n    this.getHeader();\r\n    return this.http.post(this.basePath, formData, this.httpOptions);\r\n  }\r\n\r\n  putAlumno(formData: any){\r\n    this.getHeader();\r\n    return this.http.put(this.basePath+formData.ID_Alumno, formData, this.httpOptions);\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { CentroService } from '../../../services/centros.service';\r\nimport Swal from 'sweetalert2'\r\n\r\n@Component({\r\n  selector: 'app-crear-centros',\r\n  templateUrl: './crear-centros.component.html',\r\n  styleUrl: './crear-centros.component.css'\r\n})\r\nexport class CrearCentrosComponent {\r\n  sendForm: boolean=false;\r\n\r\n  constructor(private fb:FormBuilder, private centroService: CentroService, private router: Router){}\r\n\r\n  public form = this.fb.group({\r\n    Nombre: ['', [Validators.required]],\r\n    Email: ['', [Validators.required, Validators.email]],\r\n    Contraseña: ['', [Validators.required]],\r\n    Calle: ['', [Validators.required]],\r\n    CP: ['', [Validators.required]],\r\n    Localidad: ['', [Validators.required]],\r\n    Provincia: ['', [Validators.required]]\r\n  });\r\n\r\n  crearCentro(){\r\n    this.sendForm=true;\r\n    if(!this.form.valid){\r\n      console.log('Errores en el formulario');\r\n    }else{\r\n      this.centroService.postCentro(this.form.value).subscribe(\r\n        (response:any) => {\r\n          this.router.navigate(['admin/ver-centros']);\r\n        },\r\n        (error) => {\r\n          console.error('Error de creación:', error);\r\n          Swal.fire(error.error.message);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  validarForm(campo: string){\r\n    return this.form.get(campo)?.valid || !this.sendForm\r\n  }\r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n<!--  Main wrapper -->\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n \r\n  <div class=\"container-fluid\">\r\n    <!--  Row 1 -->\r\n    \r\n    <div class=\"container-fluid\">\r\n        <div class=\"container-fluid\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title fw-semibold mb-4\">Crear Centro</h5>\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <form [formGroup]=\"form\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"Nombre\" class=\"form-label\">Nombre</label>\r\n                      <input class=\"form-control\" formControlName=\"Nombre\" id=\"Nombre\">\r\n                    </div>\r\n                    <p class=\"text-danger\" *ngIf=\"!validarForm('Nombre')\">El Nombre es obligatorio</p>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"Email\" class=\"form-label\">Email</label>\r\n                      <input type=\"email\" class=\"form-control\" formControlName=\"Email\">\r\n                    </div>\r\n                    <p class=\"text-danger\" *ngIf=\"!validarForm('Email')\">El Email es obligatorio</p>\r\n                    <div class=\"mb-4\">\r\n                      <label for=\"Contraseña\" class=\"form-label\">Contraseña</label>\r\n                      <input type=\"password\" class=\"form-control\" formControlName=\"Contraseña\" id=\"Contraseña\">\r\n                    </div>\r\n                    <p class=\"text-danger\" *ngIf=\"!validarForm('Contraseña')\">La Contraseña es obligatoria</p>\r\n                    <div class=\"mb-4\">\r\n                      <label for=\"Calle\" class=\"form-label\">Calle</label>\r\n                      <input class=\"form-control\" formControlName=\"Calle\" id=\"Calle\">\r\n                    </div>\r\n                    <p class=\"text-danger\" *ngIf=\"!validarForm('Calle')\">La Calle es obligatoria</p>\r\n                    <div class=\"mb-4\">\r\n                      <label for=\"CP\" class=\"form-label\">Cóigo Postal</label>\r\n                      <input class=\"form-control\" formControlName=\"CP\" id=\"CP\">\r\n                    </div>\r\n                    <p class=\"text-danger\" *ngIf=\"!validarForm('CP')\">El Código Postal es obligatorio</p>\r\n                    <div class=\"mb-4\">\r\n                      <label for=\"Localidad\" class=\"form-label\">Localidad</label>\r\n                      <input class=\"form-control\" formControlName=\"Localidad\" id=\"Localidad\">\r\n                    </div>\r\n                    <p class=\"text-danger\" *ngIf=\"!validarForm('Localidad')\">La Localidad es obligatoria</p>\r\n                    <div class=\"mb-4\">\r\n                      <label for=\"Provincia\" class=\"form-label\">Provincia</label>\r\n                      <input class=\"form-control d-inline-block\" formControlName=\"Provincia\" id=\"Provincia\">\r\n                    </div>\r\n                    <p class=\"text-danger\" *ngIf=\"!validarForm('Provincia')\">La Provincia es obligatoria</p>\r\n                    <button class=\"btn btn-danger\" (click)=\"crearCentro()\">Aceptar</button>\r\n                    <button  routerLink=\"/admin/ver-centros\" class=\"btn btn-danger\">Volver</button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    \r\n      \r\n    <div class=\"py-6 px-6 text-center\">\r\n        <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n      </div>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CentroService {\r\n\r\n  private basePath=`${environment.base_url}/centros/`;\r\n  private httpOptions: any;\r\n  constructor(private http: HttpClient) { \r\n  }\r\n  \r\n  // Opciones Http\r\n  private getHeader(){\r\n    this.httpOptions = {\r\n      headers: this.addToken(),\r\n    };\r\n  }\r\n\r\n    private getToken(){\r\n      let token;\r\n      if (typeof localStorage !== 'undefined') {\r\n        token = localStorage.getItem('token');\r\n      } \r\n      return token;\r\n    }\r\n\r\n    private addToken(): HttpHeaders {\r\n      const token = this.getToken();\r\n      return new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-token': `${token}`,\r\n      });\r\n    }\r\n\r\n  //LLAMADAS API  \r\n  getCentros(){\r\n    this.getHeader();\r\n    return this.http.get(this.basePath, this.httpOptions );\r\n  }\r\n\r\n  deleteCentro(id:number){\r\n    this.getHeader();\r\n    return this.http.delete(this.basePath+id, this.httpOptions);\r\n  }\r\n\r\n  postCentro(formData: any){\r\n    return this.http.post(this.basePath, formData);\r\n  }\r\n\r\n  putCentro(formData: any){\r\n    this.getHeader();\r\n    return this.http.put(this.basePath+formData.ID_Centro, formData, this.httpOptions);\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ClaseService } from '../../../services/clases.service';\r\nimport Swal from 'sweetalert2'\r\n\r\n@Component({\r\n  selector: 'app-crear-clases',\r\n  templateUrl: './crear-clases.component.html',\r\n  styleUrl: './crear-clases.component.css'\r\n})\r\nexport class CrearClasesComponent {\r\n  sendForm: boolean=false;\r\n\r\n  constructor(private fb:FormBuilder, private claseService: ClaseService, private router: Router){}\r\n\r\n  public form = this.fb.group({\r\n    Nombre: ['', [Validators.required]],\r\n    ID_Centro: ['', [Validators.required]],\r\n    NumAlumnos: ['', [Validators.required]]\r\n  });\r\n\r\n  crearClase(){\r\n    this.sendForm=true;\r\n    if(!this.form.valid){\r\n      console.log('Errores en el formulario');\r\n    }else{\r\n      this.claseService.postClase(this.form.value).subscribe(\r\n        (response:any) => {\r\n          this.router.navigate(['admin/ver-clases']);\r\n        },\r\n        (error) => {\r\n          console.error('Error de creación:', error);\r\n          Swal.fire(error.error.message);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  validarForm(campo: string){\r\n    return this.form.get(campo)?.valid || !this.sendForm\r\n  }\r\n\r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n<!--  Main wrapper -->\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n  \r\n  <div class=\"container-fluid\">\r\n    <!--  Row 1 -->\r\n    \r\n    <div class=\"container-fluid\">\r\n      <div class=\"container-fluid\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title fw-semibold mb-4\">Crear Clase</h5>\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <form [formGroup]=\"form\">\r\n                  <div class=\"mb-3\">\r\n                    <label for=\"Nombre\" class=\"form-label\">Nombre</label>\r\n                    <input class=\"form-control\" formControlName=\"Nombre\" id=\"Nombre\">\r\n                  </div>\r\n                  <p class=\"text-danger\" *ngIf=\"!validarForm('Nombre')\">El Nombre es obligatorio</p>\r\n                  <div class=\"mb-3\">\r\n                    <label for=\"ID_Centro\" class=\"form-label\">Centro</label>\r\n                    <input class=\"form-control\" formControlName=\"ID_Centro\" id=\"ID_Centro\">\r\n                  </div>\r\n                  <p class=\"text-danger\" *ngIf=\"!validarForm('ID_Centro')\">El Centro es obligatorio</p>\r\n                  <div class=\"mb-3\">\r\n                    <label for=\"NumAlumnos\" class=\"form-label\">Nº Alumnos</label>\r\n                    <input class=\"form-control\" formControlName=\"NumAlumnos\" id=\"NumAlumnos\">\r\n                  </div>\r\n                  <p class=\"text-danger\" *ngIf=\"!validarForm('NumAlumnos')\">El Número de alumnos es obligatorio</p>\r\n                  <button class=\"btn btn-danger\" (click)=\"crearClase()\">Aceptar</button>\r\n                  <button routerLink=\"/admin/ver-clases\" class=\"btn btn-danger\">Volver</button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </div>\r\n      \r\n    <div class=\"py-6 px-6 text-center\">\r\n        <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n      </div>\r\n  </div>\r\n</div>\r\n</div>\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ClaseService {\r\n\r\n    private basePath=`${environment.base_url}/clases/`;\r\n    private httpOptions: any;\r\n    constructor(private http: HttpClient) { \r\n    }\r\n    \r\n    // Opciones Http\r\n    private getHeader(){\r\n      this.httpOptions = {\r\n        headers: this.addToken(),\r\n      };\r\n    }\r\n  \r\n      private getToken(){\r\n        let token;\r\n        if (typeof localStorage !== 'undefined') {\r\n          token = localStorage.getItem('token');\r\n        } \r\n        return token;\r\n      }\r\n  \r\n      private addToken(): HttpHeaders {\r\n        const token = this.getToken();\r\n        return new HttpHeaders({\r\n          'Content-Type': 'application/json',\r\n          'x-token': `${token}`,\r\n        });\r\n      }\r\n  \r\n    //LLAMADAS API  \r\n    getClases(){\r\n      this.getHeader();\r\n      return this.http.get(this.basePath, this.httpOptions );\r\n    }\r\n  \r\n    deleteClase(id:number){\r\n      this.getHeader();\r\n      return this.http.delete(this.basePath+id, this.httpOptions);\r\n    }\r\n  \r\n    postClase(formData: any){\r\n      this.getHeader();\r\n      return this.http.post(this.basePath, formData, this.httpOptions);\r\n    }\r\n\r\n    putClase(formData: any){\r\n      this.getHeader();\r\n      return this.http.put(this.basePath+formData.ID_Clase, formData, this.httpOptions);\r\n    }\r\n\r\n}","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ProfesorService } from '../../../services/profesores.service';\r\nimport Swal from 'sweetalert2'\r\n\r\n@Component({\r\n  selector: 'app-crear-profesores',\r\n  templateUrl: './crear-profesores.component.html',\r\n  styleUrl: './crear-profesores.component.css'\r\n})\r\nexport class CrearProfesoresComponent {\r\n\r\n  sendForm: boolean=false;\r\n\r\n  constructor(private fb:FormBuilder, private profesorService: ProfesorService, private router: Router){}\r\n\r\n  public form = this.fb.group({\r\n    Nombre: ['', [Validators.required]],\r\n    Apellidos: ['', [Validators.required]],\r\n    Email: ['', [Validators.required, Validators.email]],\r\n    Contraseña: ['', [Validators.required]],\r\n    ID_Centro: ['', [Validators.required]],\r\n    ID_Clase: ['', [Validators.required]]\r\n  });\r\n\r\n  crearProfesor(){\r\n    this.sendForm=true;\r\n    if(!this.form.valid){\r\n      console.log('Errores en el formulario');\r\n    }else{\r\n      this.profesorService.postProfesor(this.form.value).subscribe(\r\n        (response:any) => {\r\n          this.router.navigate(['admin/ver-profesores']);\r\n        },\r\n        (error) => {\r\n          console.error('Error de creación:', error);\r\n          Swal.fire(error.error.message);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  validarForm(campo: string){\r\n    return this.form.get(campo)?.valid || !this.sendForm\r\n  }\r\n\r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n<!--  Main wrapper -->\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n  \r\n  <div class=\"container-fluid\">\r\n    <!--  Row 1 -->\r\n    \r\n    <div class=\"container-fluid\">\r\n      <div class=\"container-fluid\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title fw-semibold mb-4\">Crear Profesor</h5>\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <form [formGroup]=\"form\">\r\n                  <div class=\"mb-3\">\r\n                    <label for=\"Nombre\" class=\"form-label\">Nombre</label>\r\n                    <input class=\"form-control\" formControlName=\"Nombre\" id=\"Nombre\">\r\n                  </div>\r\n                  <p class=\"text-danger\" *ngIf=\"!validarForm('Nombre')\">El Centro es obligatorio</p>\r\n                  <div class=\"mb-3\">\r\n                    <label for=\"Apellidos\" class=\"form-label\">Apellidos</label>\r\n                    <input class=\"form-control\" formControlName=\"Apellidos\" id=\"Apellidos\">\r\n                  </div>\r\n                  <p class=\"text-danger\" *ngIf=\"!validarForm('Apellidos')\">El Centro es obligatorio</p>\r\n                  <div class=\"mb-3\">\r\n                    <label for=\"Email\" class=\"form-label\">Email</label>\r\n                    <input type=\"email\" class=\"form-control\" formControlName=\"Email\" id=\"Email\">\r\n                  </div>\r\n                  <p class=\"text-danger\" *ngIf=\"!validarForm('Email')\">El Centro es obligatorio</p>\r\n                  <div class=\"mb-3\">\r\n                    <label for=\"Contraseña\" class=\"form-label\">Contraseña</label>\r\n                    <input type=\"password\" class=\"form-control\" formControlName=\"Contraseña\" id=\"Contraseña\">\r\n                  </div>\r\n                  <p class=\"text-danger\" *ngIf=\"!validarForm('Contraseña')\">El Centro es obligatorio</p>\r\n                  <div class=\"mb-3\">\r\n                    <label for=\"ID_Centro\" class=\"form-label\">Centro</label>\r\n                    <input class=\"form-control\" formControlName=\"ID_Centro\" id=\"ID_Centro\">\r\n                  </div>\r\n                  <p class=\"text-danger\" *ngIf=\"!validarForm('ID_Centro')\">El Centro es obligatorio</p>\r\n                  <div class=\"mb-3\">\r\n                    <label for=\"ID_Clase\" class=\"form-label\">Clase</label>\r\n                    <input class=\"form-control\" formControlName=\"ID_Clase\" id=\"ID_Clase\">\r\n                  </div>\r\n                  <p class=\"text-danger\" *ngIf=\"!validarForm('ID_Clase')\">El Centro es obligatorio</p>\r\n                  <button class=\"btn btn-danger\" (click)=\"crearProfesor()\">Aceptar</button>\r\n                  <button  routerLink=\"/admin/ver-profesores\" class=\"btn btn-danger\">Volver</button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </div>\r\n      \r\n    <div class=\"py-6 px-6 text-center\">\r\n        <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n      </div>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { env } from 'process';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfesorService {\r\n\r\n  private basePath=`${environment.base_url}/profesores/`;\r\n  private httpOptions: any;\r\n  constructor(private http: HttpClient) { \r\n  }\r\n  \r\n  // Opciones Http\r\n  private getHeader(){\r\n    this.httpOptions = {\r\n      headers: this.addToken(),\r\n    };\r\n  }\r\n\r\n    private getToken(){\r\n      let token;\r\n      if (typeof localStorage !== 'undefined') {\r\n        token = localStorage.getItem('token');\r\n      } \r\n      return token;\r\n    }\r\n\r\n    private addToken(): HttpHeaders {\r\n      const token = this.getToken();\r\n      return new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-token': `${token}`,\r\n      });\r\n    }\r\n\r\n  //LLAMADAS API  \r\n  getProfesores(){\r\n    this.getHeader();\r\n    return this.http.get(this.basePath, this.httpOptions );\r\n  }\r\n\r\n  deleteProfesor(id:number){\r\n    this.getHeader();\r\n    return this.http.delete(this.basePath+id, this.httpOptions);\r\n  }\r\n\r\n  postProfesor(formData: any){\r\n    this.getHeader();\r\n    return this.http.post(this.basePath, formData, this.httpOptions);\r\n  }\r\n\r\n  putProfesor(formData: any){\r\n    this.getHeader();\r\n    return this.http.put(this.basePath+formData.ID_Profesor, formData, this.httpOptions);\r\n  }\r\n\r\n}\r\n","import { Component, AfterViewInit  } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AlumnoService } from '../../../services/alumnos.service';\r\n\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  selector: 'app-alumnos',\r\n  templateUrl: './ver-alumnos.component.html',\r\n  styleUrl: './ver-alumnos.component.css'\r\n})\r\nexport class VerAlumnosComponent implements AfterViewInit{\r\n  \r\n  alumnosData: any;\r\n\r\n  constructor(private alumnoService: AlumnoService, private router: Router){\r\n    this.alumnosData = [];\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.tryLocalStorage();\r\n  }\r\n\r\n  tryLocalStorage(){\r\n    this.getAlumnos();\r\n  }\r\n\r\n  getAlumnos(){\r\n    this.alumnoService.getAlumnos().subscribe(res => {\r\n      console.log(res);\r\n      this.alumnosData = res;\r\n    })\r\n  }\r\n\r\n  eliminarAlumno(id: number){\r\n    Swal.fire({\r\n      title: \"¿Estás seguro?\",\r\n      text: \"Esta acción no se podrá deshacer\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Eliminar\"\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.alumnoService.deleteAlumno(id).subscribe(res => {\r\n          this.getAlumnos();\r\n        })\r\n        Swal.fire({\r\n          title: \"Alumno Eliminado\",\r\n          icon: \"success\"\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  editarAlumno(alumno: any){\r\n    this.router.navigate(['admin/editar-alumnos'], {state: {alumno}});\r\n  }\r\n  \r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n<!--  Main wrapper -->\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n  <!--  Header End -->\r\n  <div class=\"container-fluid\">\r\n    <!--  Row 1 -->\r\n    \r\n    <div class=\"container-fluid\">\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title fw-semibold mb-4\">Alumnos</h5>\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">\r\n                            <table class=\"table text-nowrap mb-0 align-middle\" style=\"background-color: white; border-radius: 1em;\">\r\n                                <thead class=\"text-dark fs-4\">\r\n                                    <tr>\r\n                                        <th class=\"border-bottom-0\">Nombre</th>\r\n                                        <th class=\"border-bottom-0\">Apellidos</th>\r\n                                        <th class=\"border-bottom-0\">Usuario</th>\r\n                                        <th class=\"border-bottom-0\">Fecha de nacimiento</th>\r\n                                        <th class=\"border-bottom-0\">Clase</th>\r\n                                        <th class=\"border-bottom-0\">Centro</th>\r\n                                        <th class=\"border-bottom-0\"></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody *ngFor=\"let alumno of alumnosData.alumnos\">\r\n                                    <tr>\r\n                                        <td class=\"border-bottom-0\">{{alumno.Nombre}}</td>\r\n                                        <td class=\"border-bottom-0\">{{alumno.Apellidos}}</td>\r\n                                        <td class=\"border-bottom-0\">{{alumno.Usuario}}</td>\r\n                                        <td class=\"border-bottom-0\">{{alumno.FechaNacimiento}}</td>\r\n                                        <td class=\"border-bottom-0\">{{alumno.NomClase}}</td>\r\n                                        <td class=\"border-bottom-0\">{{alumno.NomCentro}}</td>\r\n                                        <td class=\"border-bottom-0\">\r\n                                            <button class=\"btn btn-primary\" (click)=\"editarAlumno(alumno)\">M</button>\r\n                                          <button class=\"btn btn-danger\" (click)=\"eliminarAlumno(alumno.ID_Alumno)\">E</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <a href=\"/admin/crear-alumnos\" class=\"btn btn-danger\">Crear Alumno</a>\r\n                    <a href=\"/admin/dashboard\" class=\"btn btn-danger\">Volver</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <br>\r\n    <br>\r\n\r\n    <div class=\"py-6 px-6 text-center\">\r\n      <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n","import { Component, AfterViewInit  } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { CentroService } from '../../../services/centros.service';\r\n\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-centros',\r\n  templateUrl: './ver-centros.component.html',\r\n  styleUrl: './ver-centros.component.css'\r\n})\r\nexport class VerCentrosComponent {\r\n\r\n  centrosData: any;\r\n\r\n  constructor(private centroService: CentroService, private router: Router){\r\n    this.centrosData = [];\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.tryLocalStorage();\r\n  }\r\n\r\n  tryLocalStorage(){\r\n    this.getCentros();\r\n  }\r\n\r\n  getCentros(){\r\n    this.centroService.getCentros().subscribe(res => {\r\n      this.centrosData = res;\r\n    })\r\n  }\r\n\r\n  eliminarCentro(id: number){\r\n    Swal.fire({\r\n      title: \"¿Estás seguro?\",\r\n      text: \"Esta acción no se podrá deshacer\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Eliminar\"\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.centroService.deleteCentro(id).subscribe(res => {\r\n          this.getCentros();\r\n        })\r\n        Swal.fire({\r\n          title: \"Centro Eliminado\",\r\n          icon: \"success\"\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  editarCentro(centro: any){\r\n    this.router.navigate(['admin/editar-centros'], {state: {centro}});\r\n  }\r\n\r\n}\r\n","<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n<div class=\"container-fluid\">\r\n    <!--  Row 1 -->\r\n    <div class=\"container-fluid\">\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card\" >\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title fw-semibold mb-4\">Centros</h5>\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">\r\n                            <table class=\"table text-nowrap mb-0 align-middle\" style=\"background-color: white; border-radius: 1em;\">\r\n                                <thead class=\"text-dark fs-4\">\r\n                                    <tr>\r\n                                        <th class=\"border-bottom-0\">Nombre</th>\r\n                                        <th class=\"border-bottom-0\">Email</th>\r\n                                        <th class=\"border-bottom-0\">Localidad</th>\r\n                                        <th class=\"border-bottom-0\">Provincia</th>\r\n                                        <th class=\"border-bottom-0\">Calle</th>\r\n                                        <th class=\"border-bottom-0\">CP</th>\r\n                                        <th class=\"border-bottom-0\"></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody *ngFor=\"let centro of centrosData.centros\">\r\n                                  <tr>\r\n                                    <td class=\"border-bottom-0\">{{centro.Nombre}}</td>\r\n                                    <td class=\"border-bottom-0\">{{centro.Email}}</td>\r\n                                    <td class=\"border-bottom-0\">{{centro.Localidad}}</td>\r\n                                    <td class=\"border-bottom-0\">{{centro.Provincia}}</td>\r\n                                    <td class=\"border-bottom-0\">{{centro.Calle}}</td>\r\n                                    <td class=\"border-bottom-0\">{{centro.CP}}</td>\r\n                                    <td class=\"border-bottom-0\">\r\n                                      <button class=\"btn btn-primary\" (click)=\"editarCentro(centro)\">M</button>\r\n                                      <button class=\"btn btn-danger\" (click)=\"eliminarCentro(centro.ID_Centro)\">E</button>\r\n                                    </td>\r\n                                </tr>\r\n                              </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <button  routerLink=\"/admin/crear-centros\"class=\"btn btn-danger\">Crear Centro</button>\r\n                    <a href=\"/admin/dashboard\" class=\"btn btn-danger\">Volver</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <br>\r\n    <br>\r\n    <div class=\"py-6 px-6 text-center\">\r\n      <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ClaseService } from '../../../services/clases.service';\r\n\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-clases',\r\n  templateUrl: './ver-clases.component.html',\r\n  styleUrl: './ver-clases.component.css'\r\n})\r\nexport class VerClasesComponent {\r\n  \r\n  clasesData: any;\r\n\r\n  constructor(private claseService: ClaseService, private router: Router){\r\n    this.clasesData = [];\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.tryLocalStorage();\r\n  }\r\n\r\n  tryLocalStorage(){\r\n    this.getClases();\r\n  }\r\n\r\n  getClases(){\r\n    this.claseService.getClases().subscribe(res => {\r\n      this.clasesData = res;\r\n    })\r\n  }\r\n\r\n  eliminarClase(id: number){\r\n    Swal.fire({\r\n      title: \"¿Estás seguro?\",\r\n      text: \"Esta acción no se podrá deshacer\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Eliminar\"\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.claseService.deleteClase(id).subscribe(res => {\r\n          this.getClases();\r\n        })\r\n        Swal.fire({\r\n          title: \"Clase Eliminada\",\r\n          icon: \"success\"\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  editarClase(clase: any){\r\n    this.router.navigate(['admin/editar-clases'], {state: {clase}});\r\n  }\r\n\r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n<!--  Main wrapper -->\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n  \r\n  <div class=\"container-fluid\">\r\n    <!--  Row 1 -->\r\n    \r\n    <div class=\"container-fluid\">\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title fw-semibold mb-4\">Clases</h5>\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">\r\n                            <table class=\"table text-nowrap mb-0 align-middle\" style=\"background-color: white; border-radius: 1em;\">\r\n                                <thead class=\"text-dark fs-4\">\r\n                                    <tr>\r\n                                        <th class=\"border-bottom-0\">Nombre</th>\r\n                                        <th class=\"border-bottom-0\">NºAlumnos</th>\r\n                                        <th class=\"border-bottom-0\">Centro</th>\r\n                                        <th class=\"border-bottom-0\"></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody *ngFor=\"let clase of clasesData.clases\">\r\n                                    <tr>\r\n                                        <td class=\"border-bottom-0\">{{clase.Nombre}}</td>\r\n                                        <td class=\"border-bottom-0\">{{clase.NumAlumnos}}</td>\r\n                                        <td class=\"border-bottom-0\">{{clase.NomCentro}}</td>\r\n                                        <td class=\"border-bottom-0\">\r\n                                            <button class=\"btn btn-primary\" (click)=\"editarClase(clase)\">M</button>\r\n                                          <button class=\"btn btn-danger\" (click)=\"eliminarClase(clase.ID_Clase)\">E</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <a href=\"/admin/crear-clases\" class=\"btn btn-danger\">Crear Clase</a>\r\n                    <a href=\"/admin/dashboard\" class=\"btn btn-danger\">Volver</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <br>\r\n    <br>\r\n\r\n    <div class=\"py-6 px-6 text-center\">\r\n      <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n","import { Component, AfterViewInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ProfesorService } from '../../../services/profesores.service';\r\n\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\n@Component({\r\n  selector: 'app-profesores',\r\n  templateUrl: './ver-profesores.component.html',\r\n  styleUrl: './ver-profesores.component.css'\r\n})\r\nexport class VerProfesoresComponent {\r\n\r\n  profesoresData: any;\r\n\r\n  constructor(private profesorService: ProfesorService, private router: Router){\r\n    this.profesoresData = [];\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.tryLocalStorage();\r\n  }\r\n\r\n  tryLocalStorage(){\r\n    this.getProfesores();\r\n  }\r\n\r\n  getProfesores(){\r\n    this.profesorService.getProfesores().subscribe(res => {\r\n      this.profesoresData = res;\r\n    })\r\n  }\r\n\r\n  eliminarProfesor(id: number){\r\n    Swal.fire({\r\n      title: \"¿Estás seguro?\",\r\n      text: \"Esta acción no se podrá deshacer\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Eliminar\"\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.profesorService.deleteProfesor(id).subscribe(res => {\r\n          this.getProfesores();\r\n        })\r\n        Swal.fire({\r\n          title: \"Profesor Eliminado\",\r\n          icon: \"success\"\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  editarProfesor(profesor: any){\r\n    this.router.navigate(['admin/editar-profesores'], {state: {profesor}});\r\n  }\r\n\r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n<!-- Sidebar Start -->\r\n  \r\n<!--  Main wrapper -->\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n  \r\n  <div class=\"container-fluid\">\r\n    <!--  Row 1 -->\r\n    \r\n    <div class=\"container-fluid\">\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title fw-semibold mb-4\">Profesores</h5>\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">\r\n                          <table class=\"table text-nowrap mb-0 align-middle\" style=\"background-color: white; border-radius: 1em;\">\r\n                            <thead class=\"text-dark fs-4\">\r\n                                <tr>\r\n                                    <th class=\"border-bottom-0\">Nombre</th>\r\n                                    <th class=\"border-bottom-0\">Apellidos</th>\r\n                                    <th class=\"border-bottom-0\">Email</th>\r\n                                    <th class=\"border-bottom-0\">Centro</th>\r\n                                    <th class=\"border-bottom-0\">Clase</th>\r\n                                    <th class=\"border-bottom-0\"></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngFor=\"let profesor of profesoresData.profesores\">\r\n                                <tr>\r\n                                    <td class=\"border-bottom-0\">{{profesor.Nombre}}</td>\r\n                                    <td class=\"border-bottom-0\">{{profesor.Apellidos}}</td>\r\n                                    <td class=\"border-bottom-0\">{{profesor.Email}}</td>\r\n                                    <td class=\"border-bottom-0\">{{profesor.NomCentro}}</td>\r\n                                    <td class=\"border-bottom-0\">{{profesor.NomClase}}</td>\r\n                                    <td class=\"border-bottom-0\">\r\n                                      <button class=\"btn btn-primary\" (click)=\"editarProfesor(profesor)\">M</button>\r\n                                      <button class=\"btn btn-danger\" (click)=\"eliminarProfesor(profesor.ID_Profesor)\">E</button>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                    </div>\r\n                    <a href=\"/admin/crear-profesores\" class=\"btn btn-danger\">Crear Profesor</a>\r\n                    <a href=\"/admin/dashboard\" class=\"btn btn-danger\">Volver</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <br>\r\n    <br>\r\n\r\n    <div class=\"py-6 px-6 text-center\">\r\n      <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admindashboard',\r\n  templateUrl: './admindashboard.component.html',\r\n  styleUrl: './admindashboard.component.css'\r\n})\r\nexport class AdmindashboardComponent {\r\n\r\n}\r\n","<!--  Main wrapper -->\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n  <div class=\"container-fluid\">\r\n    <!--  Row 1 -->\r\n    <div class=\"container-fluid\">\r\n      <div class=\"container-fluid\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body text-center\">\r\n            <h5 class=\"card-title fw-semibold mb-4\">Bienvenido de nuevo</h5>\r\n            <div class=\"card\">\r\n                <div class=\"card-body d-flex flex-column justify-content-center\">\r\n                  <a href=\"./admin/ver-centros\" class=\"btn btn-outline-danger btn-custom custom1\">Ver Centros</a>\r\n                  <a href=\"./admin/crear-centros\" class=\"btn btn-outline-danger btn-custom\">Crear Centro</a>\r\n                  <a href=\"./admin/ver-profesores\" class=\"btn btn-outline-danger btn-custom\">Ver Profesores</a>\r\n                  <a href=\"./admin/crear-profesores\" class=\"btn btn-outline-danger btn-custom\">Crear Profesor</a>\r\n                  <a href=\"./admin/ver-alumnos\" class=\"btn btn-outline-danger btn-custom\">Ver Alumnos</a>\r\n                  <a href=\"./admin/crear-alumnos\" class=\"btn btn-outline-danger btn-custom\">Crear Alumno</a>\r\n                  <a href=\"./admin/ver-clases\" class=\"btn btn-outline-danger btn-custom\">Ver Clases</a>\r\n                  <a href=\"./admin/crear-clases\" class=\"btn btn-outline-danger btn-custom\">Crear Clase</a>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"py-6 px-6 text-center\">\r\n      <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, AfterViewInit  } from '@angular/core';\r\nimport { AlumnoService } from '../../../services/alumnos.service';\r\nimport Swal from 'sweetalert2'\r\n\r\n@Component({\r\n  selector: 'app-ver-alumnos-c',\r\n  templateUrl: './ver-alumnos-c.component.html',\r\n  styleUrl: './ver-alumnos-c.component.css'\r\n})\r\nexport class VerAlumnosCComponent {\r\n\r\n  alumnosData: any;\r\n\r\n  constructor(private alumnoService: AlumnoService){\r\n    this.alumnosData = [];\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.tryLocalStorage();\r\n  }\r\n\r\n  tryLocalStorage(){\r\n    this.getAlumnos();\r\n  }\r\n\r\n  getAlumnos(){\r\n    this.alumnoService.getAlumnos().subscribe(res => {\r\n      console.log(res);\r\n      this.alumnosData = res;\r\n    })\r\n  }\r\n\r\n  eliminarAlumno(id: number){\r\n    Swal.fire({\r\n      title: \"¿Estás seguro?\",\r\n      text: \"Esta acción no se podrá deshacer\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Eliminar\"\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.alumnoService.deleteAlumno(id).subscribe(res => {\r\n          this.getAlumnos();\r\n        })\r\n        Swal.fire({\r\n          title: \"Alumno Eliminado\",\r\n          icon: \"success\"\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n<!--  Main wrapper -->\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n  <!--  Header End -->\r\n  <div class=\"container-fluid\">\r\n    <!--  Row 1 -->\r\n    \r\n    <div class=\"container-fluid\">\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title fw-semibold mb-4\">Alumnos</h5>\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">\r\n                            <table class=\"table text-nowrap mb-0 align-middle\" style=\"background-color: white; border-radius: 1em;\">\r\n                                <thead class=\"text-dark fs-4\">\r\n                                    <tr>\r\n                                        <th class=\"border-bottom-0\">Nombre</th>\r\n                                        <th class=\"border-bottom-0\">Apellidos</th>\r\n                                        <th class=\"border-bottom-0\">Usuario</th>\r\n                                        <th class=\"border-bottom-0\">Fecha de nacimiento</th>\r\n                                        <th class=\"border-bottom-0\">Clase</th>\r\n                                        <th class=\"border-bottom-0\">Centro</th>\r\n                                        <th class=\"border-bottom-0\"></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody *ngFor=\"let alumno of alumnosData.alumnos\">\r\n                                    <tr>\r\n                                        <td class=\"border-bottom-0\">{{alumno.Nombre}}</td>\r\n                                        <td class=\"border-bottom-0\">{{alumno.Apellidos}}</td>\r\n                                        <td class=\"border-bottom-0\">{{alumno.Usuario}}</td>\r\n                                        <td class=\"border-bottom-0\">{{alumno.FechaNacimiento}}</td>\r\n                                        <td class=\"border-bottom-0\">{{alumno.NomClase}}</td>\r\n                                        <td class=\"border-bottom-0\">{{alumno.NomCentro}}</td>\r\n                                        <td class=\"border-bottom-0\">\r\n                                          <a href=\"./centros/editar-alumnos\" class=\"btn btn-secondary\">M</a>\r\n                                          <button class=\"btn btn-danger\" (click)=\"eliminarAlumno(alumno.ID_Alumno)\">E</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <a href=\"/centros/crear-alumnos\" class=\"btn btn-secondary\">Crear Alumno</a>\r\n                    <a href=\"/centros/dashboard\" class=\"btn btn-secondary\">Volver</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <br>\r\n    <br>\r\n\r\n    <div class=\"py-6 px-6 text-center\">\r\n      <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n","import { Component } from '@angular/core';\r\nimport { ProfesorService } from '../../../services/profesores.service';\r\nimport Swal from 'sweetalert2'\r\n\r\n@Component({\r\n  selector: 'app-ver-profesores-c',\r\n  templateUrl: './ver-profesores-c.component.html',\r\n  styleUrl: './ver-profesores-c.component.css'\r\n})\r\nexport class VerProfesoresCComponent {\r\n\r\n  profesoresData: any;\r\n\r\n  constructor(private profesorService: ProfesorService){\r\n    this.profesoresData = [];\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.tryLocalStorage();\r\n  }\r\n\r\n  tryLocalStorage(){\r\n    this.getProfesores();\r\n  }\r\n\r\n  getProfesores(){\r\n    this.profesorService.getProfesores().subscribe(res => {\r\n      this.profesoresData = res;\r\n    })\r\n  }\r\n\r\n  eliminarProfesor(id: number){\r\n    Swal.fire({\r\n      title: \"¿Estás seguro?\",\r\n      text: \"Esta acción no se podrá deshacer\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Eliminar\"\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.profesorService.deleteProfesor(id).subscribe(res => {\r\n          console.log(res);\r\n          this.getProfesores();\r\n        })\r\n        Swal.fire({\r\n          title: \"Profesor Eliminado\",\r\n          icon: \"success\"\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n<!-- Sidebar Start -->\r\n  \r\n<!--  Main wrapper -->\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n  \r\n  <div class=\"container-fluid\">\r\n    <!--  Row 1 -->\r\n    \r\n    <div class=\"container-fluid\">\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title fw-semibold mb-4\">Profesores</h5>\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">\r\n                            <table class=\"table text-nowrap mb-0 align-middle\" style=\"background-color: white; border-radius: 1em;\">\r\n                                <thead class=\"text-dark fs-4\">\r\n                                    <tr>\r\n                                        <th class=\"border-bottom-0\">Nombre</th>\r\n                                        <th class=\"border-bottom-0\">Apellidos</th>\r\n                                        <th class=\"border-bottom-0\">Email</th>\r\n                                        <th class=\"border-bottom-0\">Centro</th>\r\n                                        <th class=\"border-bottom-0\">Clase</th>\r\n                                        <th class=\"border-bottom-0\"></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody *ngFor=\"let profesor of profesoresData.profesores\">\r\n                                    <tr>\r\n                                        <td class=\"border-bottom-0\">{{profesor.Nombre}}</td>\r\n                                        <td class=\"border-bottom-0\">{{profesor.Apellidos}}</td>\r\n                                        <td class=\"border-bottom-0\">{{profesor.Email}}</td>\r\n                                        <td class=\"border-bottom-0\">{{profesor.NomCentro}}</td>\r\n                                        <td class=\"border-bottom-0\">{{profesor.NomClase}}</td>\r\n                                        <td class=\"border-bottom-0\">\r\n                                          <a href=\"./centros/editar-profesores\" class=\"btn btn-secondary\">M</a>\r\n                                          <button class=\"btn btn-danger\" (click)=\"eliminarProfesor(profesor.ID_Profesor)\">E</button>\r\n                                        </td>\r\n                                      </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <a href=\"/centros/crear-profesores\" class=\"btn btn-secondary\">Crear Profesor</a>\r\n                    <a href=\"/centros/dashboard\" class=\"btn btn-secondary\">Volver</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <br>\r\n    <br>\r\n\r\n    <div class=\"py-6 px-6 text-center\">\r\n      <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n","import { Component } from '@angular/core';\r\nimport { ClaseService } from '../../../services/clases.service';\r\nimport Swal from 'sweetalert2'\r\n\r\n@Component({\r\n  selector: 'app-ver-clases-c',\r\n  templateUrl: './ver-clases-c.component.html',\r\n  styleUrl: './ver-clases-c.component.css'\r\n})\r\nexport class VerClasesCComponent {\r\n\r\n  clasesData: any;\r\n\r\n  constructor(private claseService: ClaseService){\r\n    this.clasesData = [];\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.tryLocalStorage();\r\n  }\r\n\r\n  tryLocalStorage(){\r\n    this.getClases();\r\n  }\r\n\r\n  getClases(){\r\n    this.claseService.getClases().subscribe(res => {\r\n      this.clasesData = res;\r\n    })\r\n  }\r\n\r\n  eliminarClase(id: number){\r\n    Swal.fire({\r\n      title: \"¿Estás seguro?\",\r\n      text: \"Esta acción no se podrá deshacer\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Eliminar\"\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.claseService.deleteClase(id).subscribe(res => {\r\n          this.getClases();\r\n        })\r\n        Swal.fire({\r\n          title: \"Clase Eliminada\",\r\n          icon: \"success\"\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n<!--  Main wrapper -->\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n  \r\n  <div class=\"container-fluid\">\r\n    <!--  Row 1 -->\r\n    \r\n    <div class=\"container-fluid\">\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title fw-semibold mb-4\">Clases</h5>\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">\r\n                            <table class=\"table text-nowrap mb-0 align-middle\" style=\"background-color: white; border-radius: 1em;\">\r\n                                <thead class=\"text-dark fs-4\">\r\n                                    <tr>\r\n                                        <th class=\"border-bottom-0\">Nombre</th>\r\n                                        <th class=\"border-bottom-0\">NºAlumnos</th>\r\n                                        <th class=\"border-bottom-0\">Centro</th>\r\n                                        <th class=\"border-bottom-0\"></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody *ngFor=\"let clase of clasesData.clases\">\r\n                                    <tr>\r\n                                        <td class=\"border-bottom-0\">{{clase.Nombre}}</td>\r\n                                        <td class=\"border-bottom-0\">{{clase.NumAlumnos}}</td>\r\n                                        <td class=\"border-bottom-0\">{{clase.NomCentro}}</td>\r\n                                        <td class=\"border-bottom-0\">\r\n                                          <a href=\"./centros/editar-clases\" class=\"btn btn-secondary\">M</a>\r\n                                          <button class=\"btn btn-danger\" (click)=\"eliminarClase(clase.ID_Clase)\">E</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <a href=\"/centros/crear-clases\" class=\"btn btn-secondary\">Crear Clase</a>\r\n                    <a href=\"/centros/dashboard\" class=\"btn btn-secondary\">Volver</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <br>\r\n    <br>\r\n\r\n    <div class=\"py-6 px-6 text-center\">\r\n      <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-crear-alumnos-c',\r\n  templateUrl: './crear-alumnos-c.component.html',\r\n  styleUrl: './crear-alumnos-c.component.css'\r\n})\r\nexport class CrearAlumnosCComponent {\r\n\r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n\r\n<!--  Sidebar End -->\r\n<!--  Main wrapper -->\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n \r\n  <div class=\"container-fluid\">\r\n    <!--  Row 1 -->\r\n    \r\n    <div class=\"container-fluid\">\r\n        <div class=\"container-fluid\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title fw-semibold mb-4\">Crear Alumno</h5>\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <form>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"exampleInputEmail1\" class=\"form-label\">Nombre</label>\r\n                      <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"exampleInputEmail1\" class=\"form-label\">Apellidos</label>\r\n                        <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\r\n                      </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"exampleInputPassword1\" class=\"form-label\">Usuario</label>\r\n                      <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"exampleInputPassword1\" class=\"form-label\">Fecha de Nacimiento</label>\r\n                        <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"exampleInputPassword1\" class=\"form-label\">Clase</label>\r\n                        <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"exampleInputPassword1\" class=\"form-label\">Centro</label>\r\n                        <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n                    </div>\r\n                    <button type=\"submit\" class=\"btn btn-secondary\">Aceptar</button>\r\n                    <a href=\"/centros/ver-alumnos\" class=\"btn btn-secondary\">Volver</a>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n      \r\n    <div class=\"py-6 px-6 text-center\">\r\n        <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n      </div>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-crear-profesores-c',\r\n  templateUrl: './crear-profesores-c.component.html',\r\n  styleUrl: './crear-profesores-c.component.css'\r\n})\r\nexport class CrearProfesoresCComponent {\r\n\r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n<!--  Main wrapper -->\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n  \r\n  <div class=\"container-fluid\">\r\n    <!--  Row 1 -->\r\n    \r\n    <div class=\"container-fluid\">\r\n        <div class=\"container-fluid\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title fw-semibold mb-4\">Crear Profesor</h5>\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <form>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"exampleInputEmail1\" class=\"form-label\">Nombre</label>\r\n                      <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"exampleInputEmail1\" class=\"form-label\">Email</label>\r\n                        <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\r\n                      </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"exampleInputPassword1\" class=\"form-label\">Centro</label>\r\n                      <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"exampleInputPassword1\" class=\"form-label\">Clase</label>\r\n                        <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n                      </div>\r\n                    <button type=\"submit\" class=\"btn btn-secondary\">Aceptar</button>\r\n                    <a href=\"/centros/ver-profesores\" class=\"btn btn-secondary\">Volver</a>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n      \r\n    <div class=\"py-6 px-6 text-center\">\r\n        <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n      </div>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-crear-clases-c',\r\n  templateUrl: './crear-clases-c.component.html',\r\n  styleUrl: './crear-clases-c.component.css'\r\n})\r\nexport class CrearClasesCComponent {\r\n\r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n<!--  Main wrapper -->\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n  \r\n  <div class=\"container-fluid\">\r\n    <!--  Row 1 -->\r\n    \r\n    <div class=\"container-fluid\">\r\n        <div class=\"container-fluid\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title fw-semibold mb-4\">Crear Clase</h5>\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <form>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"exampleInputEmail1\" class=\"form-label\">Nombre</label>\r\n                      <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"exampleInputEmail1\" class=\"form-label\">Centro</label>\r\n                        <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\r\n                      </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"exampleInputPassword1\" class=\"form-label\">Nº Alumnos</label>\r\n                      <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n                    </div>\r\n                    <button type=\"submit\" class=\"btn btn-secondary\">Aceptar</button>\r\n                    <a href=\"/centros/ver-clases\" class=\"btn btn-secondary\">Volver</a>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n      \r\n    <div class=\"py-6 px-6 text-center\">\r\n        <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n      </div>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { AlumnoService } from '../../../services/alumnos.service';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-editar-alumnos',\r\n  templateUrl: './editar-alumnos.component.html',\r\n  styleUrl: './editar-alumnos.component.css'\r\n})\r\nexport class EditarAlumnosComponent implements OnInit {\r\n\r\n  alumnosData: any = [];\r\n\r\n  constructor(private fb:FormBuilder, private alumnoService: AlumnoService, private router: Router, private activatedRoute: ActivatedRoute){}\r\n\r\n  public form = this.fb.group({\r\n    ID_Alumno: [''],\r\n    Nombre: [''],\r\n    Apellidos: [''],\r\n    Usuario: [''],\r\n    FechaNacimiento: [''],\r\n    ID_Clase: ['']\r\n  });\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.paramMap.subscribe(params => {\r\n      this.alumnosData = history.state.alumno;\r\n      this.form.patchValue({\r\n        ID_Alumno: this.alumnosData.ID_Alumno,\r\n        Nombre: this.alumnosData.Nombre,\r\n        Apellidos: this.alumnosData.Apellidos,\r\n        Usuario: this.alumnosData.Usuario,\r\n        FechaNacimiento: this.alumnosData.FechaNacimiento,\r\n        ID_Clase: this.alumnosData.ID_Clase\r\n      });\r\n    });\r\n  }\r\n\r\n  actualizarAlumno(){\r\n    if(!this.form.valid){\r\n      console.log('Errores en el formulario');\r\n    }else{\r\n      this.alumnoService.putAlumno(this.form.value).subscribe(\r\n        (response:any) => {\r\n          this.router.navigate(['admin/ver-alumnos']);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n\r\n<!--  Sidebar End -->\r\n<!--  Main wrapper -->\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n \r\n  <div class=\"container-fluid\">\r\n    <!--  Row 1 -->\r\n    \r\n    <div class=\"container-fluid\">\r\n        <div class=\"container-fluid\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title fw-semibold mb-4\">Editar Alumno</h5>\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <form [formGroup]=\"form\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"Nombre\" class=\"form-label\">Nombre</label>\r\n                      <input class=\"form-control\" formControlName=\"Nombre\" id=\"Nombre\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"Apellidos\" class=\"form-label\">Apellidos</label>\r\n                      <input class=\"form-control\" formControlName=\"Apellidos\" id=\"Apellidos\">\r\n                      </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"Usuario\" class=\"form-label\">Usuario</label>\r\n                      <input class=\"form-control\" formControlName=\"Usuario\" id=\"Usuario\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"FechaNacimiento\" class=\"form-label\">Fecha de Nacimiento</label>\r\n                      <input class=\"form-control\" formControlName=\"FechaNacimiento\" id=\"FechaNacimiento\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"ID_Clase\" class=\"form-label\">Clase</label>\r\n                      <input class=\"form-control\" formControlName=\"ID_Clase\" id=\"ID_Clase\">\r\n                    </div>\r\n                    <!-- <div class=\"mb-3\">\r\n                      <label for=\"ID_Centro\" class=\"form-label\">Centro</label>\r\n                      <input class=\"form-control\" formControlName=\"ID_Centro\" id=\"ID_Centro\">\r\n                    </div> -->\r\n                    <button class=\"btn btn-danger\" (click)=\"actualizarAlumno()\">Aceptar</button>\r\n                    <a routerLink=\"/admin/ver-alumnos\" class=\"btn btn-danger\">Volver</a>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n      \r\n    <div class=\"py-6 px-6 text-center\">\r\n        <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n      </div>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { CentroService } from '../../../services/centros.service';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-editar-centros',\r\n  templateUrl: './editar-centros.component.html',\r\n  styleUrl: './editar-centros.component.css'\r\n})\r\nexport class EditarCentrosComponent implements OnInit {\r\n\r\n  centrosData: any = [];\r\n\r\n  constructor(private fb:FormBuilder, private centroService: CentroService, private router: Router, private activatedRoute: ActivatedRoute){}\r\n\r\n  public form = this.fb.group({\r\n    ID_Centro: [''],\r\n    Nombre: [''],\r\n    Email: ['', [Validators.email]],\r\n    Calle: [''],\r\n    CP: [''],\r\n    Localidad: [''],\r\n    Provincia: ['']\r\n  });\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.paramMap.subscribe(params => {\r\n      this.centrosData = history.state.centro;\r\n      this.form.patchValue({\r\n        ID_Centro: this.centrosData.ID_Centro,\r\n        Nombre: this.centrosData.Nombre,\r\n        Email: this.centrosData.Email,\r\n        Calle: this.centrosData.Calle,\r\n        CP: this.centrosData.CP,\r\n        Localidad: this.centrosData.Localidad,\r\n        Provincia: this.centrosData.Provincia\r\n      });\r\n    });\r\n  }\r\n\r\n  actualizarCentro(){\r\n    if(!this.form.valid){\r\n      console.log('Errores en el formulario');\r\n    }else{\r\n      this.centroService.putCentro(this.form.value).subscribe(\r\n        (response:any) => {\r\n          this.router.navigate(['admin/ver-centros']);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n<!--  Main wrapper -->\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n \r\n  <div class=\"container-fluid\">\r\n    <!--  Row 1 -->\r\n    \r\n    <div class=\"container-fluid\">\r\n        <div class=\"container-fluid\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title fw-semibold mb-4\">Editar Centro</h5>\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <form [formGroup]=\"form\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"Nombre\" class=\"form-label\">Nombre</label>\r\n                      <input class=\"form-control\" formControlName=\"Nombre\" id=\"Nombre\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"Email\" class=\"form-label\">Email</label>\r\n                      <input type=\"email\" class=\"form-control\" formControlName=\"Email\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"Calle\" class=\"form-label\">Calle</label>\r\n                      <input class=\"form-control\" formControlName=\"Calle\" id=\"Calle\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"CP\" class=\"form-label\">Cóigo Postal</label>\r\n                      <input class=\"form-control\" formControlName=\"CP\" id=\"CP\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"Localidad\" class=\"form-label\">Localidad</label>\r\n                      <input class=\"form-control\" formControlName=\"Localidad\" id=\"Localidad\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"Provincia\" class=\"form-label\">Provincia</label>\r\n                      <input class=\"form-control d-inline-block\" formControlName=\"Provincia\" id=\"Provincia\">\r\n                    </div>\r\n                    <button class=\"btn btn-danger\" (click)=\"actualizarCentro()\">Aceptar</button>\r\n                    <a routerLink=\"/admin/ver-centros\" class=\"btn btn-danger\">Volver</a>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    \r\n      \r\n    <div class=\"py-6 px-6 text-center\">\r\n        <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n      </div>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder } from '@angular/forms';\r\n\r\nimport { ClaseService } from '../../../services/clases.service';\r\n\r\n@Component({\r\n  selector: 'app-editar-clases',\r\n  templateUrl: './editar-clases.component.html',\r\n  styleUrl: './editar-clases.component.css'\r\n})\r\nexport class EditarClasesComponent implements OnInit {\r\n\r\n  clasesData: any = [];\r\n\r\n  constructor(private fb:FormBuilder, private claseService: ClaseService, private router: Router, private activatedRoute: ActivatedRoute){}\r\n\r\n  public form = this.fb.group({\r\n    ID_Clase: [''],\r\n    Nombre: [''],\r\n    ID_Centro: [''],\r\n    NumAlumnos: ['']\r\n  });\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.paramMap.subscribe(params => {\r\n      this.clasesData = history.state.clase;\r\n      this.form.patchValue({\r\n        ID_Clase: this.clasesData.ID_Clase,\r\n        Nombre: this.clasesData.Nombre,\r\n        ID_Centro: this.clasesData.ID_Centro,\r\n        NumAlumnos: this.clasesData.NumAlumnos\r\n      });\r\n    });\r\n  }\r\n\r\n  actualizarClase(){\r\n    if(!this.form.valid){\r\n      console.log('Errores en el formulario');\r\n    }else{\r\n      this.claseService.putClase(this.form.value).subscribe(\r\n        (response:any) => {\r\n          this.router.navigate(['admin/ver-clases']);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n<!--  Main wrapper -->\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n  \r\n  <div class=\"container-fluid\">\r\n    <!--  Row 1 -->\r\n    \r\n    <div class=\"container-fluid\">\r\n        <div class=\"container-fluid\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title fw-semibold mb-4\">Editar Clase</h5>\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <form [formGroup]=\"form\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"Nombre\" class=\"form-label\">Nombre</label>\r\n                    <input class=\"form-control\" formControlName=\"Nombre\" id=\"Nombre\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"ID_Centro\" class=\"form-label\">Centro</label>\r\n                      <input class=\"form-control\" formControlName=\"ID_Centro\" id=\"ID_Centro\">\r\n                      </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"NumAlumnos\" class=\"form-label\">Nº Alumnos</label>\r\n                      <input class=\"form-control\" formControlName=\"NumAlumnos\" id=\"NumAlumnos\">\r\n                    </div>\r\n                    <button class=\"btn btn-danger\" (click)=\"actualizarClase()\">Aceptar</button>\r\n                    <a routerLink=\"/admin/ver-clases\" class=\"btn btn-danger\">Volver</a>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n      \r\n    <div class=\"py-6 px-6 text-center\">\r\n        <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n      </div>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ProfesorService } from '../../../services/profesores.service';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-editar-profesores',\r\n  templateUrl: './editar-profesores.component.html',\r\n  styleUrl: './editar-profesores.component.css'\r\n})\r\nexport class EditarProfesoresComponent {\r\n\r\n  profesoresData: any = [];\r\n\r\n  constructor(private fb:FormBuilder, private profesorService: ProfesorService, private router: Router, private activatedRoute: ActivatedRoute){}\r\n\r\n  public form = this.fb.group({\r\n    ID_Profesor: [''],\r\n    Nombre: [''],\r\n    Apellidos: [''],\r\n    Email: ['', [Validators.email]],\r\n    ID_Centro: [''],\r\n    ID_Clase: ['']\r\n  });\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.paramMap.subscribe(params => {\r\n      this.profesoresData = history.state.profesor;\r\n      this.form.patchValue({\r\n        ID_Profesor: this.profesoresData.ID_Profesor,\r\n        Nombre: this.profesoresData.Nombre,\r\n        Apellidos: this.profesoresData.Apellidos,\r\n        Email: this.profesoresData.Email,\r\n        ID_Centro: this.profesoresData.ID_Centro,\r\n        ID_Clase: this.profesoresData.ID_Clase\r\n      });\r\n    });\r\n  }\r\n\r\n  actualizarProfesor(){\r\n    if(!this.form.valid){\r\n      console.log('Errores en el formulario');\r\n    }else{\r\n      this.profesorService.putProfesor(this.form.value).subscribe(\r\n        (response:any) => {\r\n          this.router.navigate(['admin/ver-profesores']);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n<!--  Main wrapper -->\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n  \r\n  <div class=\"container-fluid\">\r\n    <!--  Row 1 -->\r\n    \r\n    <div class=\"container-fluid\">\r\n        <div class=\"container-fluid\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title fw-semibold mb-4\">Editar Profesor</h5>\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <form [formGroup]=\"form\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"Nombre\" class=\"form-label\">Nombre</label>\r\n                    <input class=\"form-control\" formControlName=\"Nombre\" id=\"Nombre\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"Apellidos\" class=\"form-label\">Apellidos</label>\r\n                      <input class=\"form-control\" formControlName=\"Apellidos\" id=\"Apellidos\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"Email\" class=\"form-label\">Email</label>\r\n                      <input type=\"email\" class=\"form-control\" formControlName=\"Email\" id=\"Email\">\r\n                      </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"ID_Centro\" class=\"form-label\">Centro</label>\r\n                      <input class=\"form-control\" formControlName=\"ID_Centro\" id=\"ID_Centro\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"ID_Clase\" class=\"form-label\">Clase</label>\r\n                      <input class=\"form-control\" formControlName=\"ID_Clase\" id=\"ID_Clase\">\r\n                      </div>\r\n                      <button class=\"btn btn-danger\" (click)=\"actualizarProfesor()\">Aceptar</button>\r\n                    <a routerLink=\"/admin/ver-profesores\"class=\"btn btn-danger\">Volver</a>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n      \r\n    <div class=\"py-6 px-6 text-center\">\r\n        <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n      </div>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { Component, AfterViewInit } from '@angular/core';\r\nimport { ProfesorService } from '../../services/profesores.service';\r\nimport Swal from 'sweetalert2'\r\n\r\n@Component({\r\n  selector: 'app-profesores',\r\n  templateUrl: './profesores.component.html',\r\n  styleUrl: './profesores.component.css'\r\n})\r\nexport class ProfesoresComponent implements AfterViewInit {\r\n\r\n  profesoresData: any;\r\n\r\n  constructor(private profesorService: ProfesorService){\r\n    this.profesoresData = [];\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.tryLocalStorage();\r\n  }\r\n\r\n  tryLocalStorage(){\r\n    this.getProfesores();\r\n  }\r\n\r\n  getProfesores(){\r\n    this.profesorService.getProfesores().subscribe(res => {\r\n      this.profesoresData = res;\r\n    })\r\n  }\r\n\r\n  eliminarProfesor(id: number){\r\n    Swal.fire({\r\n      title: \"¿Estás seguro?\",\r\n      text: \"Esta acción no se podrá deshacer\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Eliminar\"\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.profesorService.deleteProfesor(id).subscribe(res => {\r\n          this.getProfesores();\r\n        })\r\n        Swal.fire({\r\n          title: \"Profesor Eliminado\",\r\n          icon: \"success\"\r\n        });\r\n      }\r\n    });\r\n  }\r\n  \r\n}\r\n","<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n    <div class=\"container-fluid\">\r\n        <!--  Row 1 -->\r\n        \r\n        <div class=\"container-fluid\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <div class=\"row\">\r\n        \r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"card\">\r\n                          <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">1ºA</h5>\r\n                            <a href=\"/profesores/ver-alumnos\" class=\"card-link\">Ver Clase</a>\r\n                            <a href=\"#\" class=\"card-link\">Eliminar Clase</a>\r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n        \r\n                    \r\n                    \r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <br>\r\n    \r\n        <div class=\"py-6 px-6 text-center\">\r\n          <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n        </div>\r\n    \r\n\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ver-clases-p',\r\n  templateUrl: './ver-clases-p.component.html',\r\n  styleUrl: './ver-clases-p.component.css'\r\n})\r\nexport class VerClasesPComponent {\r\n\r\n}\r\n","<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n    <div class=\"container-fluid\">\r\n        <!--  Row 1 -->\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <div class=\"row\">\r\n        \r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"card\">\r\n                          <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">1ºA</h5>\r\n                            <a href=\"/vista-alumnos\" class=\"card-link\">Ver Clase</a>\r\n                            <a href=\"#\" class=\"card-link\">Eliminar Clase</a>\r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n        \r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"card\">\r\n                          <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">1ºB</h5>\r\n                            <a href=\"/vista-alumnos\" class=\"card-link\">Ver Clase</a>\r\n                            <a href=\"#\" class=\"card-link\">Eliminar Clase</a>\r\n                          </div>\r\n                        </div>\r\n                       \r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"card\">\r\n                          <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">1ºC</h5>\r\n                            <a href=\"/vista-alumnos\" class=\"card-link\">Ver Clase</a>\r\n                            <a href=\"#\" class=\"card-link\">Eliminar Clase</a>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"card\">\r\n                          <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">2ºA</h5>\r\n                            <a href=\"/vista-alumnos\" class=\"card-link\">Ver Clase</a>\r\n                            <a href=\"#\" class=\"card-link\">Eliminar Clase</a>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"card\">\r\n                          <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">2ºB</h5>\r\n                            <a href=\"/vista-alumnos\" class=\"card-link\">Ver Clase</a>\r\n                            <a href=\"#\" class=\"card-link\">Eliminar Clase</a>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"card\">\r\n                          <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">2ºC</h5>\r\n                            <a href=\"/vista-alumnos\" class=\"card-link\">Ver Clase</a>\r\n                            <a href=\"#\" class=\"card-link\">Eliminar Clase</a>\r\n                          </div>\r\n                        </div>\r\n                       \r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"card\">\r\n                          <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">3ºA</h5>\r\n                            <a href=\"/vista-alumnos\" class=\"card-link\">Ver Clase</a>\r\n                            <a href=\"#\" class=\"card-link\">Eliminar Clase</a>\r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n        \r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"card\">\r\n                          <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">3ºB</h5>\r\n                            <a href=\"/vista-alumnos\" class=\"card-link\">Ver Clase</a>\r\n                            <a href=\"#\" class=\"card-link\">Eliminar Clase</a>\r\n                          </div>\r\n                        </div>\r\n                       \r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"card\">\r\n                          <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">3ºC</h5>\r\n                            <a href=\"/vista-alumnos\" class=\"card-link\">Ver Clase</a>\r\n                            <a href=\"#\" class=\"card-link\">Eliminar Clase</a>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"card\">\r\n                          <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">4ºA</h5>\r\n                            <a href=\"/vista-alumnos\" class=\"card-link\">Ver Clase</a>\r\n                            <a href=\"#\" class=\"card-link\">Eliminar Clase</a>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"card\">\r\n                          <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">4ºB</h5>\r\n                            <a href=\"/vista-alumnos\" class=\"card-link\">Ver Clase</a>\r\n                            <a href=\"#\" class=\"card-link\">Eliminar Clase</a>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"card\">\r\n                          <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">4ºC</h5>\r\n                            <a href=\"/vista-alumnos\" class=\"card-link\">Ver Clase</a>\r\n                            <a href=\"#\" class=\"card-link\">Eliminar Clase</a>\r\n                          </div>\r\n                        </div>\r\n                       \r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"card\">\r\n                          <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">5ºA</h5>\r\n                            <a href=\"/vista-alumnos\" class=\"card-link\">Ver Clase</a>\r\n                            <a href=\"#\" class=\"card-link\">Eliminar Clase</a>\r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n        \r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"card\">\r\n                          <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">5ºB</h5>\r\n                            <a href=\"/vista-alumnos\" class=\"card-link\">Ver Clase</a>\r\n                            <a href=\"#\" class=\"card-link\">Eliminar Clase</a>\r\n                          </div>\r\n                        </div>\r\n                       \r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"card\">\r\n                          <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">5ºC</h5>\r\n                            <a href=\"/vista-alumnos\" class=\"card-link\">Ver Clase</a>\r\n                            <a href=\"#\" class=\"card-link\">Eliminar Clase</a>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <br>\r\n    \r\n        <div class=\"py-6 px-6 text-center\">\r\n          <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n        </div>\r\n    \r\n\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ver-perfil-alumno',\r\n  templateUrl: './ver-perfil-alumno.component.html',\r\n  styleUrl: './ver-perfil-alumno.component.css'\r\n})\r\nexport class VerPerfilAlumnoComponent {\r\n\r\n}\r\n","<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n    <div class=\"container-fluid\"> \r\n        \r\n        <div class=\"container-fluid\">\r\n                <div class=\"container-fluid\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">\r\n    \r\n                            <div class=\"profile-container text-center\">\r\n                                <img src=\"../assets/images/avatar.jpg\" alt=\"Foto de perfil\" class=\"profile-image rounded-circle\">\r\n                                <h3>Lucía Martínez</h3> <span class=\"badge bg-success rounded-3 fw-semibold\">Bueno</span>\r\n                            </div>\r\n                           <div class=\"card-body\">\r\n                            <div class=\"card\">\r\n                                <div class=\"card-body\">\r\n                                  \r\n                                    <table class=\"table text-nowrap mb-0 align-middle\" style=\"background-color: rgb(250, 252, 251); border-radius: 1em;\">\r\n                                      <h5 class=\"card-title fw-semibold mb-4\">Últimas respuestas</h5>\r\n                                        <thead class=\"text-dark fs-4\">\r\n                                            <tr>\r\n                                                <th class=\"border-bottom-0\">Pregunta</th>\r\n                                                <th class=\"border-bottom-0\">Respuesta</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                               \r\n                                                <td class=\"border-bottom-0\">¿Qué es lo que más te gusta hacer?</td>\r\n                                                <td class=\"border-bottom-0\">Jugar con mis compañeros</td>\r\n                                               \r\n                                            </tr>\r\n                                            <tr>\r\n                                               \r\n                                              <td class=\"border-bottom-0\">¿Qué es lo que más te gusta hacer?</td>\r\n                                              <td class=\"border-bottom-0\">Jugar con mis compañeros</td>\r\n                                             \r\n                                          </tr>\r\n                                           \r\n                                            <td class=\"border-bottom-0\">\r\n                                              <a href=\"/profesores/actividad-reciente\" class=\"btn btn-dark\">Ver Cuestionario</a>\r\n                                              <a href=\"/profesores/ver-alumnos\" class=\"btn btn-light\">Volver</a>\r\n                                          </td>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br>\r\n            <br>\r\n        \r\n            <div class=\"py-6 px-6 text-center\">\r\n              <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n            </div>\r\n        </div>\r\n\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-actividad-reciente',\r\n  templateUrl: './actividad-reciente.component.html',\r\n  styleUrl: './actividad-reciente.component.css'\r\n})\r\nexport class ActividadRecienteComponent {\r\n\r\n}\r\n","<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n    <div class=\"container-fluid\"> \r\n        <div class=\"container-fluid\">\r\n            <div class=\"container-fluid\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <h5 class=\"card-title fw-semibold mb-4\">Actividad  Reciente</h5>\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body\">\r\n                                <table class=\"table text-nowrap mb-0 align-middle\" style=\"background-color: white; border-radius: 1em;\">\r\n                                    <thead class=\"text-dark fs-4\">\r\n                                        <tr>\r\n                                            <th class=\"border-bottom-0\">Nombre</th>\r\n                                            <th class=\"border-bottom-0\">Usuario</th>\r\n                                            <th class=\"border-bottom-0\">Fecha de nacimiento</th>\r\n                                            <th class=\"border-bottom-0\">Clase</th>\r\n                                            <th class=\"border-bottom-0\">Centro</th>\r\n                                            <th class=\"border-bottom-0\"></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td class=\"border-bottom-0\">Pepe</td>\r\n                                            <td class=\"border-bottom-0\">Pepe1</td>\r\n                                            <td class=\"border-bottom-0\">24/10/2015</td>\r\n                                            <td class=\"border-bottom-0\">1ºA</td>\r\n                                            <td class=\"border-bottom-0\">Cole1</td>\r\n                                            \r\n                                            <td class=\"border-bottom-0\">\r\n                                              <a href=\"/profesores/ver-perfil-alumno\" class=\"btn btn-light\">Ver Perfil</a>\r\n                                          </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <a href=\"/profesores/dashboard\" class=\"btn btn-light\">Volver</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <br>\r\n    \r\n        <div class=\"py-6 px-6 text-center\">\r\n          <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n        </div>\r\n\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ver-alumnos-p',\r\n  templateUrl: './ver-alumnos-p.component.html',\r\n  styleUrl: './ver-alumnos-p.component.css'\r\n})\r\nexport class VerAlumnosPComponent {\r\n\r\n}\r\n","<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n    <div class=\"container-fluid\"> \r\n        \r\n        <div class=\"container-fluid\">\r\n            <div class=\"container-fluid\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <h5 class=\"card-title fw-semibold mb-4\">Clase 1ºA</h5>\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body\">\r\n                                <table class=\"table text-nowrap mb-0 align-middle\" style=\"background-color: white; border-radius: 1em;\">\r\n                                    <thead class=\"text-dark fs-4\">\r\n                                        <tr>\r\n                                           \r\n                                            <th class=\"border-bottom-0\">Nombre</th>\r\n                                            <th class=\"border-bottom-0\">Usuario</th>\r\n                                            <th class=\"border-bottom-0\">Fecha de nacimiento</th>\r\n                                            <th class=\"border-bottom-0\">Clase</th>\r\n                                            <th class=\"border-bottom-0\">Centro</th>\r\n                                            <th class=\"border-bottom-0\">Estado Emocional</th>\r\n                                            <th class=\"border-bottom-0\"></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                           \r\n                                            <td class=\"border-bottom-0\">Pepe</td>\r\n                                            <td class=\"border-bottom-0\">Pepe1</td>\r\n                                            <td class=\"border-bottom-0\">24/10/2015</td>\r\n                                            <td class=\"border-bottom-0\">1ºA</td>\r\n                                            <td class=\"border-bottom-0\">Cole1</td>\r\n                                            <td class=\"border-bottom-0\">\r\n                                                <div class=\"d-flex align-items-center gap-2\">\r\n                                                  <span class=\"badge bg-success rounded-3 fw-semibold\">Bueno</span>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td class=\"border-bottom-0\">\r\n                                                <a href=\"/profesores/ver-perfil-alumno\" class=\"btn btn-light\">Ver Perfil</a>\r\n                                            </td>\r\n                                        </tr>\r\n                                        \r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <a href=\"/profesores/dashboard\" class=\"btn btn-light\">Volver</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <br>\r\n    \r\n        <div class=\"py-6 px-6 text-center\">\r\n          <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n        </div>\r\n\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-editar-alumnos-c',\r\n  templateUrl: './editar-alumnos-c.component.html',\r\n  styleUrl: './editar-alumnos-c.component.css'\r\n})\r\nexport class EditarAlumnosCComponent {\r\n\r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n\r\n<!--  Sidebar End -->\r\n<!--  Main wrapper -->\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n \r\n  <div class=\"container-fluid\">\r\n    <!--  Row 1 -->\r\n    \r\n    <div class=\"container-fluid\">\r\n        <div class=\"container-fluid\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title fw-semibold mb-4\">Editar Alumno</h5>\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <form>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"exampleInputEmail1\" class=\"form-label\">Nombre</label>\r\n                      <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"exampleInputEmail1\" class=\"form-label\">Apellidos</label>\r\n                        <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\r\n                      </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"exampleInputPassword1\" class=\"form-label\">Usuario</label>\r\n                      <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"exampleInputPassword1\" class=\"form-label\">Fecha de Nacimiento</label>\r\n                        <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"exampleInputPassword1\" class=\"form-label\">Clase</label>\r\n                        <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"exampleInputPassword1\" class=\"form-label\">Centro</label>\r\n                        <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n                    </div>\r\n                    <button type=\"submit\" class=\"btn btn-secondary\">Aceptar</button>\r\n                    <a routerLink=\"/centros/ver-alumnos\" class=\"btn btn-secondary\">Volver</a>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n      \r\n    <div class=\"py-6 px-6 text-center\">\r\n        <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n      </div>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-editar-profesores-c',\r\n  templateUrl: './editar-profesores-c.component.html',\r\n  styleUrl: './editar-profesores-c.component.css'\r\n})\r\nexport class EditarProfesoresCComponent {\r\n\r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n<!--  Main wrapper -->\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n  \r\n  <div class=\"container-fluid\">\r\n    <!--  Row 1 -->\r\n    \r\n    <div class=\"container-fluid\">\r\n        <div class=\"container-fluid\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title fw-semibold mb-4\">Editar Profesor</h5>\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <form>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"exampleInputEmail1\" class=\"form-label\">Nombre</label>\r\n                      <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"exampleInputEmail1\" class=\"form-label\">Email</label>\r\n                        <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\r\n                      </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"exampleInputPassword1\" class=\"form-label\">Centro</label>\r\n                      <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"exampleInputPassword1\" class=\"form-label\">Clase</label>\r\n                        <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n                      </div>\r\n                    <button type=\"submit\" class=\"btn btn-secondary\">Aceptar</button>\r\n                    <a routerLink=\"/centros/ver-profesores\"class=\"btn btn-secondary\">Volver</a>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n      \r\n    <div class=\"py-6 px-6 text-center\">\r\n        <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n      </div>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-editar-clases-c',\r\n  templateUrl: './editar-clases-c.component.html',\r\n  styleUrl: './editar-clases-c.component.css'\r\n})\r\nexport class EditarClasesCComponent {\r\n\r\n}\r\n","<!--  Body Wrapper -->\r\n<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n<!--  Main wrapper -->\r\n<div class=\"body-wrapper\" style=\"margin-left: 0;\">\r\n  \r\n  <div class=\"container-fluid\">\r\n    <!--  Row 1 -->\r\n    \r\n    <div class=\"container-fluid\">\r\n        <div class=\"container-fluid\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title fw-semibold mb-4\">Editar Clase</h5>\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <form>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"exampleInputEmail1\" class=\"form-label\">Nombre</label>\r\n                      <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"exampleInputEmail1\" class=\"form-label\">Centro</label>\r\n                        <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\r\n                      </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"exampleInputPassword1\" class=\"form-label\">Nº Alumnos</label>\r\n                      <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n                    </div>\r\n                    <button type=\"submit\" class=\"btn btn-secondary\">Aceptar</button>\r\n                    <a routerLink=\"/centros/ver-clases\" class=\"btn btn-secondary\">Volver</a>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n      \r\n    <div class=\"py-6 px-6 text-center\">\r\n        <p class=\"copyright\">&copy; 2023 Blooming. Proyecto académico de la Universidad de Alicante .</p>\r\n      </div>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-alumno-layout',\r\n  templateUrl: './alumno-layout.component.html',\r\n  styleUrl: './alumno-layout.component.css'\r\n})\r\n\r\n\r\nexport class AlumnoLayoutComponent {\r\n\r\n}\r\n","<div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\"\r\ndata-sidebar-position=\"fixed\" data-header-position=\"fixed\">\r\n\r\n\r\n    <router-outlet></router-outlet>\r\n\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-alumnos',\r\n  templateUrl: './alumnos.component.html',\r\n  styleUrl: './alumnos.component.css'\r\n})\r\nexport class AlumnosComponent {\r\n\r\n}\r\n","\r\n<div class=\"container\">\r\n    <h1>¡Bienvenido de nuevo a Blooming!</h1>\r\n    <button class=\"btn btn-success comenzar-btn \">Comenzar</button>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '../guards/auth.guard';\r\n\r\nimport { DashboardComponent } from '../pages/dashboard/dashboard.component';\r\nimport { UsuariosComponent } from '../pages/usuarios/usuarios.component';\r\nimport { CentrosComponent } from './centros/centros.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\n\r\nimport { AdminLayoutComponent } from '../layouts/admin-layout/admin-layout.component';\r\nimport { CrearAlumnosComponent } from './admin/crear-alumnos/crear-alumnos.component';\r\nimport { CrearCentrosComponent } from './admin/crear-centros/crear-centros.component';\r\nimport { CrearClasesComponent } from './admin/crear-clases/crear-clases.component';\r\nimport { CrearProfesoresComponent } from './admin/crear-profesores/crear-profesores.component';\r\nimport { VerAlumnosComponent } from './admin/ver-alumnos/ver-alumnos.component';\r\nimport { VerCentrosComponent } from './admin/ver-centros/ver-centros.component';\r\nimport { VerClasesComponent } from './admin/ver-clases/ver-clases.component';\r\nimport { VerProfesoresComponent } from './admin/ver-profesores/ver-profesores.component';\r\nimport { AdmindashboardComponent } from './admin/admindashboard/admindashboard.component';\r\nimport { VerAlumnosCComponent } from './centros/ver-alumnos-c/ver-alumnos-c.component';\r\nimport { VerProfesoresCComponent } from './centros/ver-profesores-c/ver-profesores-c.component';\r\nimport { VerClasesCComponent } from './centros/ver-clases-c/ver-clases-c.component';\r\nimport { CrearAlumnosCComponent } from './centros/crear-alumnos-c/crear-alumnos-c.component';\r\nimport { CrearProfesoresCComponent } from './centros/crear-profesores-c/crear-profesores-c.component';\r\nimport { CrearClasesCComponent } from './centros/crear-clases-c/crear-clases-c.component';\r\nimport { EditarAlumnosComponent } from './admin/editar-alumnos/editar-alumnos.component';\r\nimport { EditarCentrosComponent } from './admin/editar-centros/editar-centros.component';\r\nimport { EditarClasesComponent } from './admin/editar-clases/editar-clases.component';\r\nimport { EditarProfesoresComponent } from './admin/editar-profesores/editar-profesores.component';\r\nimport { ProfesoresComponent } from './profesores/profesores.component';\r\nimport { VerClasesPComponent } from './profesores/ver-clases-p/ver-clases-p.component';\r\nimport { VerPerfilAlumnoComponent } from './profesores/ver-perfil-alumno/ver-perfil-alumno.component';\r\nimport { ActividadRecienteComponent } from './profesores/actividad-reciente/actividad-reciente.component';\r\nimport { VerAlumnosPComponent } from './profesores/ver-alumnos-p/ver-alumnos-p.component';\r\nimport { EditarAlumnosCComponent } from './centros/editar-alumnos-c/editar-alumnos-c.component';\r\nimport { EditarProfesoresCComponent } from './centros/editar-profesores-c/editar-profesores-c.component';\r\nimport { EditarClasesCComponent } from './centros/editar-clases-c/editar-clases-c.component';\r\nimport { AlumnoLayoutComponent } from '../layouts/alumno-layout/alumno-layout.component';\r\nimport { AlumnosComponent } from './alumnos/alumnos.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'admin', component: AdminLayoutComponent, canActivate: [ AuthGuard ],\r\n    children: [\r\n      { path: 'dashboard', component: AdmindashboardComponent},\r\n      { path: 'ver-alumnos', component: VerAlumnosComponent},\r\n      { path: 'ver-centros', component: VerCentrosComponent},\r\n      { path: 'ver-clases', component: VerClasesComponent},\r\n      { path: 'ver-profesores', component: VerProfesoresComponent},\r\n      { path: 'crear-alumnos', component: CrearAlumnosComponent},\r\n      { path: 'crear-centros', component: CrearCentrosComponent},\r\n      { path: 'crear-clases', component: CrearClasesComponent},\r\n      { path: 'crear-profesores', component: CrearProfesoresComponent},\r\n      { path: 'editar-alumnos', component: EditarAlumnosComponent},\r\n      { path: 'editar-centros', component: EditarCentrosComponent},\r\n      { path: 'editar-clases', component: EditarClasesComponent},\r\n      { path: 'editar-profesores', component: EditarProfesoresComponent},\r\n      { path: '**', redirectTo: 'dashboard'},\r\n  ]},\r\n  {\r\n    path: 'centros', component: AdminLayoutComponent, canActivate: [ AuthGuard ],\r\n    children: [\r\n      { path: 'dashboard', component: CentrosComponent},\r\n      { path: 'ver-alumnos', component: VerAlumnosCComponent},\r\n      { path: 'ver-profesores', component: VerProfesoresCComponent},\r\n      { path: 'ver-clases', component: VerClasesCComponent},\r\n      { path: 'crear-alumnos', component: CrearAlumnosCComponent},\r\n      { path: 'crear-profesores', component: CrearProfesoresCComponent},\r\n      { path: 'crear-clases', component: CrearClasesCComponent},\r\n      { path: 'editar-alumnos', component: EditarAlumnosCComponent},\r\n      { path: 'editar-profesores', component: EditarProfesoresCComponent},\r\n      { path: 'editar-clases', component: EditarClasesCComponent},\r\n  ]},\r\n  {\r\n    path: 'profesores', component: AdminLayoutComponent, canActivate: [ AuthGuard ],\r\n    children: [\r\n      { path: 'dashboard', component: ProfesoresComponent},\r\n      { path: 'ver-clases', component: VerClasesPComponent},\r\n      { path: 'ver-perfil-alumno', component: VerPerfilAlumnoComponent},\r\n      { path: 'actividad-reciente', component: ActividadRecienteComponent},\r\n      { path: 'ver-alumnos', component: VerAlumnosPComponent},\r\n    ]\r\n  },\r\n  { \r\n    path: 'alumnos', component: AlumnoLayoutComponent,\r\n    children: [\r\n      { path: 'dashboard', component: AlumnosComponent},\r\n  ]}\r\n  /*{ \r\n    path: 'dashboard', component: DashboardComponent,\r\n    children: [\r\n    { path: '', component: DashboardComponent},\r\n    { path: '**', redirectTo: ''}\r\n  ]},*/\r\n  /*{ path: 'usuarios', component: UsuariosComponent}*/\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PagesRoutingModule { }\r\n","import { ElementRef } from '@angular/core';\n\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n  return value != null && `${value}` !== 'false';\n}\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n  return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n  // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n  // and other non-number values as NaN, where Number just uses 0) but it considers the string\n  // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n  return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\nfunction coerceArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n  if (value == null) {\n    return '';\n  }\n  return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n  return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * Coerces a value to an array of trimmed non-empty strings.\n * Any input that is not an array, `null` or `undefined` will be turned into a string\n * via `toString()` and subsequently split with the given separator.\n * `null` and `undefined` will result in an empty array.\n * This results in the following outcomes:\n * - `null` -&gt; `[]`\n * - `[null]` -&gt; `[\"null\"]`\n * - `[\"a\", \"b \", \" \"]` -&gt; `[\"a\", \"b\"]`\n * - `[1, [2, 3]]` -&gt; `[\"1\", \"2,3\"]`\n * - `[{ a: 0 }]` -&gt; `[\"[object Object]\"]`\n * - `{ a: 0 }` -&gt; `[\"[object\", \"Object]\"]`\n *\n * Useful for defining CSS classes or table columns.\n * @param value the value to coerce into an array of strings\n * @param separator split-separator if value isn't an array\n */\nfunction coerceStringArray(value, separator = /\\s+/) {\n  const result = [];\n  if (value != null) {\n    const sourceValues = Array.isArray(value) ? value : `${value}`.split(separator);\n    for (const sourceValue of sourceValues) {\n      const trimmedString = `${sourceValue}`.trim();\n      if (trimmedString) {\n        result.push(trimmedString);\n      }\n    }\n  }\n  return result;\n}\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty, coerceStringArray };\n","import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n  hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n} catch {\n  hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nlet Platform = /*#__PURE__*/(() => {\n  class Platform {\n    constructor(_platformId) {\n      this._platformId = _platformId;\n      // We want to use the Angular platform check because if the Document is shimmed\n      // without the navigator, the following checks will fail. This is preferred because\n      // sometimes the Document may be shimmed without the user's knowledge or intention\n      /** Whether the Angular application is being rendered in the browser. */\n      this.isBrowser = this._platformId ? isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n      /** Whether the current browser is Microsoft Edge. */\n      this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n      /** Whether the current rendering engine is Microsoft Trident. */\n      this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n      // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n      /** Whether the current rendering engine is Blink. */\n      this.BLINK = this.isBrowser && !!(window.chrome || hasV8BreakIterator) && typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT;\n      // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n      // ensure that Webkit runs standalone and is not used as another engine's base.\n      /** Whether the current rendering engine is WebKit. */\n      this.WEBKIT = this.isBrowser && /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n      /** Whether the current platform is Apple iOS. */\n      this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n      // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n      // them self as Gecko-like browsers and modify the userAgent's according to that.\n      // Since we only cover one explicit Firefox case, we can simply check for Firefox\n      // instead of having an unstable check for Gecko.\n      /** Whether the current browser is Firefox. */\n      this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n      /** Whether the current platform is Android. */\n      // Trident on mobile adds the android platform to the userAgent to trick detections.\n      this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n      // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n      // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n      // Safari browser should also use Webkit as its layout engine.\n      /** Whether the current browser is Safari. */\n      this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n    static {\n      this.ɵfac = function Platform_Factory(t) {\n        return new (t || Platform)(i0.ɵɵinject(PLATFORM_ID));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: Platform,\n        factory: Platform.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return Platform;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PlatformModule = /*#__PURE__*/(() => {\n  class PlatformModule {\n    static {\n      this.ɵfac = function PlatformModule_Factory(t) {\n        return new (t || PlatformModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: PlatformModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return PlatformModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes;\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n// `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n// first changing it to something else:\n// The specified value \"\" does not conform to the required format.\n// The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n'color', 'button', 'checkbox', 'date', 'datetime-local', 'email', 'file', 'hidden', 'image', 'month', 'number', 'password', 'radio', 'range', 'reset', 'search', 'submit', 'tel', 'text', 'time', 'url', 'week'];\n/** @returns The input types supported by this browser. */\nfunction getSupportedInputTypes() {\n  // Result is cached.\n  if (supportedInputTypes) {\n    return supportedInputTypes;\n  }\n  // We can't check if an input type is not supported until we're on the browser, so say that\n  // everything is supported when not on the browser. We don't use `Platform` here since it's\n  // just a helper function and can't inject it.\n  if (typeof document !== 'object' || !document) {\n    supportedInputTypes = new Set(candidateInputTypes);\n    return supportedInputTypes;\n  }\n  let featureTestInput = document.createElement('input');\n  supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n    featureTestInput.setAttribute('type', value);\n    return featureTestInput.type === value;\n  }));\n  return supportedInputTypes;\n}\n\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nfunction supportsPassiveEventListeners() {\n  if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n    try {\n      window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n        get: () => supportsPassiveEvents = true\n      }));\n    } finally {\n      supportsPassiveEvents = supportsPassiveEvents || false;\n    }\n  }\n  return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nfunction normalizePassiveListenerOptions(options) {\n  return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n  if (scrollBehaviorSupported == null) {\n    // If we're not in the browser, it can't be supported. Also check for `Element`, because\n    // some projects stub out the global `document` during SSR which can throw us off.\n    if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\n      scrollBehaviorSupported = false;\n      return scrollBehaviorSupported;\n    }\n    // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n    if ('scrollBehavior' in document.documentElement.style) {\n      scrollBehaviorSupported = true;\n    } else {\n      // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n      // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n      const scrollToFunction = Element.prototype.scrollTo;\n      if (scrollToFunction) {\n        // We can detect if the function has been polyfilled by calling `toString` on it. Native\n        // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n        // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n        // polyfilled functions as supporting scroll behavior.\n        scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n      } else {\n        scrollBehaviorSupported = false;\n      }\n    }\n  }\n  return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n  // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n  if (typeof document !== 'object' || !document) {\n    return 0 /* RtlScrollAxisType.NORMAL */;\n  }\n\n  if (rtlScrollAxisType == null) {\n    // Create a 1px wide scrolling container and a 2px wide content element.\n    const scrollContainer = document.createElement('div');\n    const containerStyle = scrollContainer.style;\n    scrollContainer.dir = 'rtl';\n    containerStyle.width = '1px';\n    containerStyle.overflow = 'auto';\n    containerStyle.visibility = 'hidden';\n    containerStyle.pointerEvents = 'none';\n    containerStyle.position = 'absolute';\n    const content = document.createElement('div');\n    const contentStyle = content.style;\n    contentStyle.width = '2px';\n    contentStyle.height = '1px';\n    scrollContainer.appendChild(content);\n    document.body.appendChild(scrollContainer);\n    rtlScrollAxisType = 0 /* RtlScrollAxisType.NORMAL */;\n    // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n    // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n    // dealing with one of the other two types of browsers.\n    if (scrollContainer.scrollLeft === 0) {\n      // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n      // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n      // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n      // return 0 when we read it again.\n      scrollContainer.scrollLeft = 1;\n      rtlScrollAxisType = scrollContainer.scrollLeft === 0 ? 1 /* RtlScrollAxisType.NEGATED */ : 2 /* RtlScrollAxisType.INVERTED */;\n    }\n\n    scrollContainer.remove();\n  }\n  return rtlScrollAxisType;\n}\nlet shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n  if (shadowDomIsSupported == null) {\n    const head = typeof document !== 'undefined' ? document.head : null;\n    shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n  }\n  return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n  if (_supportsShadowDom()) {\n    const rootNode = element.getRootNode ? element.getRootNode() : null;\n    // Note that this should be caught by `_supportsShadowDom`, but some\n    // teams have been able to hit this code path on unsupported browsers.\n    if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n      return rootNode;\n    }\n  }\n  return null;\n}\n/**\n * Gets the currently-focused element on the page while\n * also piercing through Shadow DOM boundaries.\n */\nfunction _getFocusedElementPierceShadowDom() {\n  let activeElement = typeof document !== 'undefined' && document ? document.activeElement : null;\n  while (activeElement && activeElement.shadowRoot) {\n    const newActiveElement = activeElement.shadowRoot.activeElement;\n    if (newActiveElement === activeElement) {\n      break;\n    } else {\n      activeElement = newActiveElement;\n    }\n  }\n  return activeElement;\n}\n/** Gets the target of an event while accounting for Shadow DOM. */\nfunction _getEventTarget(event) {\n  // If an event is bound outside the Shadow DOM, the `event.target` will\n  // point to the shadow root so we have to use `composedPath` instead.\n  return event.composedPath ? event.composedPath()[0] : event.target;\n}\n\n/** Gets whether the code is currently running in a test environment. */\nfunction _isTestEnvironment() {\n  // We can't use `declare const` because it causes conflicts inside Google with the real typings\n  // for these symbols and we can't read them off the global object, because they don't appear to\n  // be attached there for some runners like Jest.\n  // (see: https://github.com/angular/components/issues/23365#issuecomment-938146643)\n  return (\n    // @ts-ignore\n    typeof __karma__ !== 'undefined' && !!__karma__ ||\n    // @ts-ignore\n    typeof jasmine !== 'undefined' && !!jasmine ||\n    // @ts-ignore\n    typeof jest !== 'undefined' && !!jest ||\n    // @ts-ignore\n    typeof Mocha !== 'undefined' && !!Mocha\n  );\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, _getEventTarget, _getFocusedElementPierceShadowDom, _getShadowRoot, _isTestEnvironment, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-browser because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = /*#__PURE__*/new InjectionToken('cdk-dir-doc', {\n  providedIn: 'root',\n  factory: DIR_DOCUMENT_FACTORY\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n  return inject(DOCUMENT);\n}\n\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\nfunction _resolveDirectionality(rawValue) {\n  const value = rawValue?.toLowerCase() || '';\n  if (value === 'auto' && typeof navigator !== 'undefined' && navigator?.language) {\n    return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n  }\n  return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nlet Directionality = /*#__PURE__*/(() => {\n  class Directionality {\n    constructor(_document) {\n      /** The current 'ltr' or 'rtl' value. */\n      this.value = 'ltr';\n      /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n      this.change = new EventEmitter();\n      if (_document) {\n        const bodyDir = _document.body ? _document.body.dir : null;\n        const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n        this.value = _resolveDirectionality(bodyDir || htmlDir || 'ltr');\n      }\n    }\n    ngOnDestroy() {\n      this.change.complete();\n    }\n    static {\n      this.ɵfac = function Directionality_Factory(t) {\n        return new (t || Directionality)(i0.ɵɵinject(DIR_DOCUMENT, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: Directionality,\n        factory: Directionality.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return Directionality;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nlet Dir = /*#__PURE__*/(() => {\n  class Dir {\n    constructor() {\n      /** Normalized direction that accounts for invalid/unsupported values. */\n      this._dir = 'ltr';\n      /** Whether the `value` has been set to its initial value. */\n      this._isInitialized = false;\n      /** Event emitted when the direction changes. */\n      this.change = new EventEmitter();\n    }\n    /** @docs-private */\n    get dir() {\n      return this._dir;\n    }\n    set dir(value) {\n      const previousValue = this._dir;\n      // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n      // whereas the browser does it based on the content of the element. Since doing so based\n      // on the content can be expensive, for now we're doing the simpler matching.\n      this._dir = _resolveDirectionality(value);\n      this._rawDir = value;\n      if (previousValue !== this._dir && this._isInitialized) {\n        this.change.emit(this._dir);\n      }\n    }\n    /** Current layout direction of the element. */\n    get value() {\n      return this.dir;\n    }\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n      this._isInitialized = true;\n    }\n    ngOnDestroy() {\n      this.change.complete();\n    }\n    static {\n      this.ɵfac = function Dir_Factory(t) {\n        return new (t || Dir)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: Dir,\n        selectors: [[\"\", \"dir\", \"\"]],\n        hostVars: 1,\n        hostBindings: function Dir_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"dir\", ctx._rawDir);\n          }\n        },\n        inputs: {\n          dir: \"dir\"\n        },\n        outputs: {\n          change: \"dirChange\"\n        },\n        exportAs: [\"dir\"],\n        features: [i0.ɵɵProvidersFeature([{\n          provide: Directionality,\n          useExisting: Dir\n        }])]\n      });\n    }\n  }\n  return Dir;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet BidiModule = /*#__PURE__*/(() => {\n  class BidiModule {\n    static {\n      this.ɵfac = function BidiModule_Factory(t) {\n        return new (t || BidiModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: BidiModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return BidiModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality };\n","import { coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Directive, Input, Injectable, Optional, Inject, inject, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Output, ViewChild, SkipSelf, ElementRef, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\nimport { getRtlScrollAxisType, supportsScrollBehavior, Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i2$1 from '@angular/cdk/collections';\nimport { isDataSource, ArrayDataSource, _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy } from '@angular/cdk/collections';\n\n/** The injection token used to specify the virtual scrolling strategy. */\nconst _c0 = [\"contentWrapper\"];\nconst _c1 = [\"*\"];\nconst VIRTUAL_SCROLL_STRATEGY = /*#__PURE__*/new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n  /**\n   * @param itemSize The size of the items in the virtually scrolling list.\n   * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n   * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n   */\n  constructor(itemSize, minBufferPx, maxBufferPx) {\n    this._scrolledIndexChange = new Subject();\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n    /** The attached viewport. */\n    this._viewport = null;\n    this._itemSize = itemSize;\n    this._minBufferPx = minBufferPx;\n    this._maxBufferPx = maxBufferPx;\n  }\n  /**\n   * Attaches this scroll strategy to a viewport.\n   * @param viewport The viewport to attach this strategy to.\n   */\n  attach(viewport) {\n    this._viewport = viewport;\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n  /** Detaches this scroll strategy from the currently attached viewport. */\n  detach() {\n    this._scrolledIndexChange.complete();\n    this._viewport = null;\n  }\n  /**\n   * Update the item size and buffer size.\n   * @param itemSize The size of the items in the virtually scrolling list.\n   * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n   * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n   */\n  updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n    if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n    }\n    this._itemSize = itemSize;\n    this._minBufferPx = minBufferPx;\n    this._maxBufferPx = maxBufferPx;\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onContentScrolled() {\n    this._updateRenderedRange();\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onDataLengthChanged() {\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onContentRendered() {\n    /* no-op */\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onRenderedOffsetChanged() {\n    /* no-op */\n  }\n  /**\n   * Scroll to the offset for the given index.\n   * @param index The index of the element to scroll to.\n   * @param behavior The ScrollBehavior to use when scrolling.\n   */\n  scrollToIndex(index, behavior) {\n    if (this._viewport) {\n      this._viewport.scrollToOffset(index * this._itemSize, behavior);\n    }\n  }\n  /** Update the viewport's total content size. */\n  _updateTotalContentSize() {\n    if (!this._viewport) {\n      return;\n    }\n    this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n  }\n  /** Update the viewport's rendered range. */\n  _updateRenderedRange() {\n    if (!this._viewport) {\n      return;\n    }\n    const renderedRange = this._viewport.getRenderedRange();\n    const newRange = {\n      start: renderedRange.start,\n      end: renderedRange.end\n    };\n    const viewportSize = this._viewport.getViewportSize();\n    const dataLength = this._viewport.getDataLength();\n    let scrollOffset = this._viewport.measureScrollOffset();\n    // Prevent NaN as result when dividing by zero.\n    let firstVisibleIndex = this._itemSize > 0 ? scrollOffset / this._itemSize : 0;\n    // If user scrolls to the bottom of the list and data changes to a smaller list\n    if (newRange.end > dataLength) {\n      // We have to recalculate the first visible index based on new data length and viewport size.\n      const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n      const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n      // If first visible index changed we must update scroll offset to handle start/end buffers\n      // Current range must also be adjusted to cover the new position (bottom of new list).\n      if (firstVisibleIndex != newVisibleIndex) {\n        firstVisibleIndex = newVisibleIndex;\n        scrollOffset = newVisibleIndex * this._itemSize;\n        newRange.start = Math.floor(firstVisibleIndex);\n      }\n      newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n    }\n    const startBuffer = scrollOffset - newRange.start * this._itemSize;\n    if (startBuffer < this._minBufferPx && newRange.start != 0) {\n      const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n      newRange.start = Math.max(0, newRange.start - expandStart);\n      newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n    } else {\n      const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n      if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n        const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n        if (expandEnd > 0) {\n          newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n          newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n        }\n      }\n    }\n    this._viewport.setRenderedRange(newRange);\n    this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n    this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n  }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n  return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nlet CdkFixedSizeVirtualScroll = /*#__PURE__*/(() => {\n  class CdkFixedSizeVirtualScroll {\n    constructor() {\n      this._itemSize = 20;\n      this._minBufferPx = 100;\n      this._maxBufferPx = 200;\n      /** The scroll strategy used by this directive. */\n      this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /** The size of the items in the list (in pixels). */\n    get itemSize() {\n      return this._itemSize;\n    }\n    set itemSize(value) {\n      this._itemSize = coerceNumberProperty(value);\n    }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     */\n    get minBufferPx() {\n      return this._minBufferPx;\n    }\n    set minBufferPx(value) {\n      this._minBufferPx = coerceNumberProperty(value);\n    }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     */\n    get maxBufferPx() {\n      return this._maxBufferPx;\n    }\n    set maxBufferPx(value) {\n      this._maxBufferPx = coerceNumberProperty(value);\n    }\n    ngOnChanges() {\n      this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    static {\n      this.ɵfac = function CdkFixedSizeVirtualScroll_Factory(t) {\n        return new (t || CdkFixedSizeVirtualScroll)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkFixedSizeVirtualScroll,\n        selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]],\n        inputs: {\n          itemSize: \"itemSize\",\n          minBufferPx: \"minBufferPx\",\n          maxBufferPx: \"maxBufferPx\"\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: VIRTUAL_SCROLL_STRATEGY,\n          useFactory: _fixedSizeVirtualScrollStrategyFactory,\n          deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\n        }]), i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return CdkFixedSizeVirtualScroll;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nlet ScrollDispatcher = /*#__PURE__*/(() => {\n  class ScrollDispatcher {\n    constructor(_ngZone, _platform, document) {\n      this._ngZone = _ngZone;\n      this._platform = _platform;\n      /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n      this._scrolled = new Subject();\n      /** Keeps track of the global `scroll` and `resize` subscriptions. */\n      this._globalSubscription = null;\n      /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n      this._scrolledCount = 0;\n      /**\n       * Map of all the scrollable references that are registered with the service and their\n       * scroll event subscriptions.\n       */\n      this.scrollContainers = new Map();\n      this._document = document;\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    register(scrollable) {\n      if (!this.scrollContainers.has(scrollable)) {\n        this.scrollContainers.set(scrollable, scrollable.elementScrolled().subscribe(() => this._scrolled.next(scrollable)));\n      }\n    }\n    /**\n     * De-registers a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    deregister(scrollable) {\n      const scrollableReference = this.scrollContainers.get(scrollable);\n      if (scrollableReference) {\n        scrollableReference.unsubscribe();\n        this.scrollContainers.delete(scrollable);\n      }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n      if (!this._platform.isBrowser) {\n        return of();\n      }\n      return new Observable(observer => {\n        if (!this._globalSubscription) {\n          this._addGlobalListener();\n        }\n        // In the case of a 0ms delay, use an observable without auditTime\n        // since it does add a perceptible delay in processing overhead.\n        const subscription = auditTimeInMs > 0 ? this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) : this._scrolled.subscribe(observer);\n        this._scrolledCount++;\n        return () => {\n          subscription.unsubscribe();\n          this._scrolledCount--;\n          if (!this._scrolledCount) {\n            this._removeGlobalListener();\n          }\n        };\n      });\n    }\n    ngOnDestroy() {\n      this._removeGlobalListener();\n      this.scrollContainers.forEach((_, container) => this.deregister(container));\n      this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementOrElementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    ancestorScrolled(elementOrElementRef, auditTimeInMs) {\n      const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\n      return this.scrolled(auditTimeInMs).pipe(filter(target => {\n        return !target || ancestors.indexOf(target) > -1;\n      }));\n    }\n    /** Returns all registered Scrollables that contain the provided element. */\n    getAncestorScrollContainers(elementOrElementRef) {\n      const scrollingContainers = [];\n      this.scrollContainers.forEach((_subscription, scrollable) => {\n        if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\n          scrollingContainers.push(scrollable);\n        }\n      });\n      return scrollingContainers;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n      return this._document.defaultView || window;\n    }\n    /** Returns true if the element is contained within the provided Scrollable. */\n    _scrollableContainsElement(scrollable, elementOrElementRef) {\n      let element = coerceElement(elementOrElementRef);\n      let scrollableElement = scrollable.getElementRef().nativeElement;\n      // Traverse through the element parents until we reach null, checking if any of the elements\n      // are the scrollable's element.\n      do {\n        if (element == scrollableElement) {\n          return true;\n        }\n      } while (element = element.parentElement);\n      return false;\n    }\n    /** Sets up the global scroll listeners. */\n    _addGlobalListener() {\n      this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n        const window = this._getWindow();\n        return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\n      });\n    }\n    /** Cleans up the global scroll listener. */\n    _removeGlobalListener() {\n      if (this._globalSubscription) {\n        this._globalSubscription.unsubscribe();\n        this._globalSubscription = null;\n      }\n    }\n    static {\n      this.ɵfac = function ScrollDispatcher_Factory(t) {\n        return new (t || ScrollDispatcher)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.Platform), i0.ɵɵinject(DOCUMENT, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: ScrollDispatcher,\n        factory: ScrollDispatcher.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ScrollDispatcher;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nlet CdkScrollable = /*#__PURE__*/(() => {\n  class CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n      this.elementRef = elementRef;\n      this.scrollDispatcher = scrollDispatcher;\n      this.ngZone = ngZone;\n      this.dir = dir;\n      this._destroyed = new Subject();\n      this._elementScrolled = new Observable(observer => this.ngZone.runOutsideAngular(() => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed)).subscribe(observer)));\n    }\n    ngOnInit() {\n      this.scrollDispatcher.register(this);\n    }\n    ngOnDestroy() {\n      this.scrollDispatcher.deregister(this);\n      this._destroyed.next();\n      this._destroyed.complete();\n    }\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    elementScrolled() {\n      return this._elementScrolled;\n    }\n    /** Gets the ElementRef for the viewport. */\n    getElementRef() {\n      return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    scrollTo(options) {\n      const el = this.elementRef.nativeElement;\n      const isRtl = this.dir && this.dir.value == 'rtl';\n      // Rewrite start & end offsets as right or left offsets.\n      if (options.left == null) {\n        options.left = isRtl ? options.end : options.start;\n      }\n      if (options.right == null) {\n        options.right = isRtl ? options.start : options.end;\n      }\n      // Rewrite the bottom offset as a top offset.\n      if (options.bottom != null) {\n        options.top = el.scrollHeight - el.clientHeight - options.bottom;\n      }\n      // Rewrite the right offset as a left offset.\n      if (isRtl && getRtlScrollAxisType() != 0 /* RtlScrollAxisType.NORMAL */) {\n        if (options.left != null) {\n          options.right = el.scrollWidth - el.clientWidth - options.left;\n        }\n        if (getRtlScrollAxisType() == 2 /* RtlScrollAxisType.INVERTED */) {\n          options.left = options.right;\n        } else if (getRtlScrollAxisType() == 1 /* RtlScrollAxisType.NEGATED */) {\n          options.left = options.right ? -options.right : options.right;\n        }\n      } else {\n        if (options.right != null) {\n          options.left = el.scrollWidth - el.clientWidth - options.right;\n        }\n      }\n      this._applyScrollToOptions(options);\n    }\n    _applyScrollToOptions(options) {\n      const el = this.elementRef.nativeElement;\n      if (supportsScrollBehavior()) {\n        el.scrollTo(options);\n      } else {\n        if (options.top != null) {\n          el.scrollTop = options.top;\n        }\n        if (options.left != null) {\n          el.scrollLeft = options.left;\n        }\n      }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    measureScrollOffset(from) {\n      const LEFT = 'left';\n      const RIGHT = 'right';\n      const el = this.elementRef.nativeElement;\n      if (from == 'top') {\n        return el.scrollTop;\n      }\n      if (from == 'bottom') {\n        return el.scrollHeight - el.clientHeight - el.scrollTop;\n      }\n      // Rewrite start & end as left or right offsets.\n      const isRtl = this.dir && this.dir.value == 'rtl';\n      if (from == 'start') {\n        from = isRtl ? RIGHT : LEFT;\n      } else if (from == 'end') {\n        from = isRtl ? LEFT : RIGHT;\n      }\n      if (isRtl && getRtlScrollAxisType() == 2 /* RtlScrollAxisType.INVERTED */) {\n        // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n        // 0 when scrolled all the way right.\n        if (from == LEFT) {\n          return el.scrollWidth - el.clientWidth - el.scrollLeft;\n        } else {\n          return el.scrollLeft;\n        }\n      } else if (isRtl && getRtlScrollAxisType() == 1 /* RtlScrollAxisType.NEGATED */) {\n        // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n        // 0 when scrolled all the way right.\n        if (from == LEFT) {\n          return el.scrollLeft + el.scrollWidth - el.clientWidth;\n        } else {\n          return -el.scrollLeft;\n        }\n      } else {\n        // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n        // (scrollWidth - clientWidth) when scrolled all the way right.\n        if (from == LEFT) {\n          return el.scrollLeft;\n        } else {\n          return el.scrollWidth - el.clientWidth - el.scrollLeft;\n        }\n      }\n    }\n    static {\n      this.ɵfac = function CdkScrollable_Factory(t) {\n        return new (t || CdkScrollable)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ScrollDispatcher), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.Directionality, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkScrollable,\n        selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]],\n        standalone: true\n      });\n    }\n  }\n  return CdkScrollable;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nlet ViewportRuler = /*#__PURE__*/(() => {\n  class ViewportRuler {\n    constructor(_platform, ngZone, document) {\n      this._platform = _platform;\n      /** Stream of viewport change events. */\n      this._change = new Subject();\n      /** Event listener that will be used to handle the viewport change events. */\n      this._changeListener = event => {\n        this._change.next(event);\n      };\n      this._document = document;\n      ngZone.runOutsideAngular(() => {\n        if (_platform.isBrowser) {\n          const window = this._getWindow();\n          // Note that bind the events ourselves, rather than going through something like RxJS's\n          // `fromEvent` so that we can ensure that they're bound outside of the NgZone.\n          window.addEventListener('resize', this._changeListener);\n          window.addEventListener('orientationchange', this._changeListener);\n        }\n        // Clear the cached position so that the viewport is re-measured next time it is required.\n        // We don't need to keep track of the subscription, because it is completed on destroy.\n        this.change().subscribe(() => this._viewportSize = null);\n      });\n    }\n    ngOnDestroy() {\n      if (this._platform.isBrowser) {\n        const window = this._getWindow();\n        window.removeEventListener('resize', this._changeListener);\n        window.removeEventListener('orientationchange', this._changeListener);\n      }\n      this._change.complete();\n    }\n    /** Returns the viewport's width and height. */\n    getViewportSize() {\n      if (!this._viewportSize) {\n        this._updateViewportSize();\n      }\n      const output = {\n        width: this._viewportSize.width,\n        height: this._viewportSize.height\n      };\n      // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n      if (!this._platform.isBrowser) {\n        this._viewportSize = null;\n      }\n      return output;\n    }\n    /** Gets a ClientRect for the viewport's bounds. */\n    getViewportRect() {\n      // Use the document element's bounding rect rather than the window scroll properties\n      // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n      // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n      // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n      // can disagree when the page is pinch-zoomed (on devices that support touch).\n      // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n      // We use the documentElement instead of the body because, by default (without a css reset)\n      // browsers typically give the document body an 8px margin, which is not included in\n      // getBoundingClientRect().\n      const scrollPosition = this.getViewportScrollPosition();\n      const {\n        width,\n        height\n      } = this.getViewportSize();\n      return {\n        top: scrollPosition.top,\n        left: scrollPosition.left,\n        bottom: scrollPosition.top + height,\n        right: scrollPosition.left + width,\n        height,\n        width\n      };\n    }\n    /** Gets the (top, left) scroll position of the viewport. */\n    getViewportScrollPosition() {\n      // While we can get a reference to the fake document\n      // during SSR, it doesn't have getBoundingClientRect.\n      if (!this._platform.isBrowser) {\n        return {\n          top: 0,\n          left: 0\n        };\n      }\n      // The top-left-corner of the viewport is determined by the scroll position of the document\n      // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n      // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n      // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n      // `document.documentElement` works consistently, where the `top` and `left` values will\n      // equal negative the scroll position.\n      const document = this._document;\n      const window = this._getWindow();\n      const documentElement = document.documentElement;\n      const documentRect = documentElement.getBoundingClientRect();\n      const top = -documentRect.top || document.body.scrollTop || window.scrollY || documentElement.scrollTop || 0;\n      const left = -documentRect.left || document.body.scrollLeft || window.scrollX || documentElement.scrollLeft || 0;\n      return {\n        top,\n        left\n      };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * This stream emits outside of the Angular zone.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n      return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n      return this._document.defaultView || window;\n    }\n    /** Updates the cached viewport size. */\n    _updateViewportSize() {\n      const window = this._getWindow();\n      this._viewportSize = this._platform.isBrowser ? {\n        width: window.innerWidth,\n        height: window.innerHeight\n      } : {\n        width: 0,\n        height: 0\n      };\n    }\n    static {\n      this.ɵfac = function ViewportRuler_Factory(t) {\n        return new (t || ViewportRuler)(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: ViewportRuler,\n        factory: ViewportRuler.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ViewportRuler;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst VIRTUAL_SCROLLABLE = /*#__PURE__*/new InjectionToken('VIRTUAL_SCROLLABLE');\n/**\n * Extending the {@link CdkScrollable} to be used as scrolling container for virtual scrolling.\n */\nlet CdkVirtualScrollable = /*#__PURE__*/(() => {\n  class CdkVirtualScrollable extends CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n      super(elementRef, scrollDispatcher, ngZone, dir);\n    }\n    /**\n     * Measure the viewport size for the provided orientation.\n     *\n     * @param orientation The orientation to measure the size from.\n     */\n    measureViewportSize(orientation) {\n      const viewportEl = this.elementRef.nativeElement;\n      return orientation === 'horizontal' ? viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    static {\n      this.ɵfac = function CdkVirtualScrollable_Factory(t) {\n        return new (t || CdkVirtualScrollable)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ScrollDispatcher), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.Directionality, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkVirtualScrollable,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return CdkVirtualScrollable;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n  return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nlet CdkVirtualScrollViewport = /*#__PURE__*/(() => {\n  class CdkVirtualScrollViewport extends CdkVirtualScrollable {\n    /** The direction the viewport scrolls. */\n    get orientation() {\n      return this._orientation;\n    }\n    set orientation(orientation) {\n      if (this._orientation !== orientation) {\n        this._orientation = orientation;\n        this._calculateSpacerSize();\n      }\n    }\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, viewportRuler, scrollable) {\n      super(elementRef, scrollDispatcher, ngZone, dir);\n      this.elementRef = elementRef;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._scrollStrategy = _scrollStrategy;\n      this.scrollable = scrollable;\n      this._platform = inject(Platform);\n      /** Emits when the viewport is detached from a CdkVirtualForOf. */\n      this._detachedSubject = new Subject();\n      /** Emits when the rendered range changes. */\n      this._renderedRangeSubject = new Subject();\n      this._orientation = 'vertical';\n      /**\n       * Whether rendered items should persist in the DOM after scrolling out of view. By default, items\n       * will be removed.\n       */\n      this.appendOnly = false;\n      // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n      // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n      // depending on how the strategy calculates the scrolled index, it may come at a cost to\n      // performance.\n      /** Emits when the index of the first element visible in the viewport changes. */\n      this.scrolledIndexChange = new Observable(observer => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n      /** A stream that emits whenever the rendered range changes. */\n      this.renderedRangeStream = this._renderedRangeSubject;\n      /**\n       * The total size of all content (in pixels), including content that is not currently rendered.\n       */\n      this._totalContentSize = 0;\n      /** A string representing the `style.width` property value to be used for the spacer element. */\n      this._totalContentWidth = '';\n      /** A string representing the `style.height` property value to be used for the spacer element. */\n      this._totalContentHeight = '';\n      /** The currently rendered range of indices. */\n      this._renderedRange = {\n        start: 0,\n        end: 0\n      };\n      /** The length of the data bound to this viewport (in number of items). */\n      this._dataLength = 0;\n      /** The size of the viewport (in pixels). */\n      this._viewportSize = 0;\n      /** The last rendered content offset that was set. */\n      this._renderedContentOffset = 0;\n      /**\n       * Whether the last rendered content offset was to the end of the content (and therefore needs to\n       * be rewritten as an offset to the start of the content).\n       */\n      this._renderedContentOffsetNeedsRewrite = false;\n      /** Whether there is a pending change detection cycle. */\n      this._isChangeDetectionPending = false;\n      /** A list of functions to run after the next change detection cycle. */\n      this._runAfterChangeDetection = [];\n      /** Subscription to changes in the viewport size. */\n      this._viewportChanges = Subscription.EMPTY;\n      if (!_scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n      }\n      this._viewportChanges = viewportRuler.change().subscribe(() => {\n        this.checkViewportSize();\n      });\n      if (!this.scrollable) {\n        // No scrollable is provided, so the virtual-scroll-viewport needs to become a scrollable\n        this.elementRef.nativeElement.classList.add('cdk-virtual-scrollable');\n        this.scrollable = this;\n      }\n    }\n    ngOnInit() {\n      // Scrolling depends on the element dimensions which we can't get during SSR.\n      if (!this._platform.isBrowser) {\n        return;\n      }\n      if (this.scrollable === this) {\n        super.ngOnInit();\n      }\n      // It's still too early to measure the viewport at this point. Deferring with a promise allows\n      // the Viewport to be rendered with the correct size before we measure. We run this outside the\n      // zone to avoid causing more change detection cycles. We handle the change detection loop\n      // ourselves instead.\n      this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n        this._measureViewportSize();\n        this._scrollStrategy.attach(this);\n        this.scrollable.elementScrolled().pipe(\n        // Start off with a fake scroll event so we properly detect our initial position.\n        startWith(null),\n        // Collect multiple events into one until the next animation frame. This way if\n        // there are multiple scroll events in the same frame we only need to recheck\n        // our layout once.\n        auditTime(0, SCROLL_SCHEDULER),\n        // Usually `elementScrolled` is completed when the scrollable is destroyed, but\n        // that may not be the case if a `CdkVirtualScrollableElement` is used so we have\n        // to unsubscribe here just in case.\n        takeUntil(this._destroyed)).subscribe(() => this._scrollStrategy.onContentScrolled());\n        this._markChangeDetectionNeeded();\n      }));\n    }\n    ngOnDestroy() {\n      this.detach();\n      this._scrollStrategy.detach();\n      // Complete all subjects\n      this._renderedRangeSubject.complete();\n      this._detachedSubject.complete();\n      this._viewportChanges.unsubscribe();\n      super.ngOnDestroy();\n    }\n    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n    attach(forOf) {\n      if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('CdkVirtualScrollViewport is already attached.');\n      }\n      // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n      // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n      // change detection loop ourselves.\n      this.ngZone.runOutsideAngular(() => {\n        this._forOf = forOf;\n        this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n          const newLength = data.length;\n          if (newLength !== this._dataLength) {\n            this._dataLength = newLength;\n            this._scrollStrategy.onDataLengthChanged();\n          }\n          this._doChangeDetection();\n        });\n      });\n    }\n    /** Detaches the current `CdkVirtualForOf`. */\n    detach() {\n      this._forOf = null;\n      this._detachedSubject.next();\n    }\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    getDataLength() {\n      return this._dataLength;\n    }\n    /** Gets the size of the viewport (in pixels). */\n    getViewportSize() {\n      return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    getRenderedRange() {\n      return this._renderedRange;\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n      return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    setTotalContentSize(size) {\n      if (this._totalContentSize !== size) {\n        this._totalContentSize = size;\n        this._calculateSpacerSize();\n        this._markChangeDetectionNeeded();\n      }\n    }\n    /** Sets the currently rendered range of indices. */\n    setRenderedRange(range) {\n      if (!rangesEqual(this._renderedRange, range)) {\n        if (this.appendOnly) {\n          range = {\n            start: 0,\n            end: Math.max(this._renderedRange.end, range.end)\n          };\n        }\n        this._renderedRangeSubject.next(this._renderedRange = range);\n        this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n      }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    getOffsetToRenderedContentStart() {\n      return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n      // In appendOnly, we always start from the top\n      offset = this.appendOnly && to === 'to-start' ? 0 : offset;\n      // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n      // in the negative direction.\n      const isRtl = this.dir && this.dir.value == 'rtl';\n      const isHorizontal = this.orientation == 'horizontal';\n      const axis = isHorizontal ? 'X' : 'Y';\n      const axisDirection = isHorizontal && isRtl ? -1 : 1;\n      let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n      this._renderedContentOffset = offset;\n      if (to === 'to-end') {\n        transform += ` translate${axis}(-100%)`;\n        // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n        // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n        // expand upward).\n        this._renderedContentOffsetNeedsRewrite = true;\n      }\n      if (this._renderedContentTransform != transform) {\n        // We know this value is safe because we parse `offset` with `Number()` before passing it\n        // into the string.\n        this._renderedContentTransform = transform;\n        this._markChangeDetectionNeeded(() => {\n          if (this._renderedContentOffsetNeedsRewrite) {\n            this._renderedContentOffset -= this.measureRenderedContentSize();\n            this._renderedContentOffsetNeedsRewrite = false;\n            this.setRenderedContentOffset(this._renderedContentOffset);\n          } else {\n            this._scrollStrategy.onRenderedOffsetChanged();\n          }\n        });\n      }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n      const options = {\n        behavior\n      };\n      if (this.orientation === 'horizontal') {\n        options.start = offset;\n      } else {\n        options.top = offset;\n      }\n      this.scrollable.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToIndex(index, behavior = 'auto') {\n      this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the scrollable (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    measureScrollOffset(from) {\n      // This is to break the call cycle\n      let measureScrollOffset;\n      if (this.scrollable == this) {\n        measureScrollOffset = _from => super.measureScrollOffset(_from);\n      } else {\n        measureScrollOffset = _from => this.scrollable.measureScrollOffset(_from);\n      }\n      return Math.max(0, measureScrollOffset(from ?? (this.orientation === 'horizontal' ? 'start' : 'top')) - this.measureViewportOffset());\n    }\n    /**\n     * Measures the offset of the viewport from the scrolling container\n     * @param from The edge to measure from.\n     */\n    measureViewportOffset(from) {\n      let fromRect;\n      const LEFT = 'left';\n      const RIGHT = 'right';\n      const isRtl = this.dir?.value == 'rtl';\n      if (from == 'start') {\n        fromRect = isRtl ? RIGHT : LEFT;\n      } else if (from == 'end') {\n        fromRect = isRtl ? LEFT : RIGHT;\n      } else if (from) {\n        fromRect = from;\n      } else {\n        fromRect = this.orientation === 'horizontal' ? 'left' : 'top';\n      }\n      const scrollerClientRect = this.scrollable.measureBoundingClientRectWithScrollOffset(fromRect);\n      const viewportClientRect = this.elementRef.nativeElement.getBoundingClientRect()[fromRect];\n      return viewportClientRect - scrollerClientRect;\n    }\n    /** Measure the combined size of all of the rendered items. */\n    measureRenderedContentSize() {\n      const contentEl = this._contentWrapper.nativeElement;\n      return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    measureRangeSize(range) {\n      if (!this._forOf) {\n        return 0;\n      }\n      return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /** Update the viewport dimensions and re-render. */\n    checkViewportSize() {\n      // TODO: Cleanup later when add logic for handling content resize\n      this._measureViewportSize();\n      this._scrollStrategy.onDataLengthChanged();\n    }\n    /** Measure the viewport size. */\n    _measureViewportSize() {\n      this._viewportSize = this.scrollable.measureViewportSize(this.orientation);\n    }\n    /** Queue up change detection to run. */\n    _markChangeDetectionNeeded(runAfter) {\n      if (runAfter) {\n        this._runAfterChangeDetection.push(runAfter);\n      }\n      // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n      // properties sequentially we only have to run `_doChangeDetection` once at the end.\n      if (!this._isChangeDetectionPending) {\n        this._isChangeDetectionPending = true;\n        this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n          this._doChangeDetection();\n        }));\n      }\n    }\n    /** Run change detection. */\n    _doChangeDetection() {\n      this._isChangeDetectionPending = false;\n      // Apply the content transform. The transform can't be set via an Angular binding because\n      // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n      // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n      // the `Number` function first to coerce it to a numeric value.\n      this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n      // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n      // from the root, since the repeated items are content projected in. Calling `detectChanges`\n      // instead does not properly check the projected content.\n      this.ngZone.run(() => this._changeDetectorRef.markForCheck());\n      const runAfterChangeDetection = this._runAfterChangeDetection;\n      this._runAfterChangeDetection = [];\n      for (const fn of runAfterChangeDetection) {\n        fn();\n      }\n    }\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    _calculateSpacerSize() {\n      this._totalContentHeight = this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n      this._totalContentWidth = this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n    static {\n      this.ɵfac = function CdkVirtualScrollViewport_Factory(t) {\n        return new (t || CdkVirtualScrollViewport)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(VIRTUAL_SCROLL_STRATEGY, 8), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(ScrollDispatcher), i0.ɵɵdirectiveInject(ViewportRuler), i0.ɵɵdirectiveInject(VIRTUAL_SCROLLABLE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: CdkVirtualScrollViewport,\n        selectors: [[\"cdk-virtual-scroll-viewport\"]],\n        viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 7);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\n          }\n        },\n        hostAttrs: [1, \"cdk-virtual-scroll-viewport\"],\n        hostVars: 4,\n        hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n          }\n        },\n        inputs: {\n          orientation: \"orientation\",\n          appendOnly: [\"appendOnly\", \"appendOnly\", booleanAttribute]\n        },\n        outputs: {\n          scrolledIndexChange: \"scrolledIndexChange\"\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CdkScrollable,\n          useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n          deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport]\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c1,\n        decls: 4,\n        vars: 4,\n        consts: [[1, \"cdk-virtual-scroll-content-wrapper\"], [\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-spacer\"]],\n        template: function CdkVirtualScrollViewport_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"div\", 0, 1);\n            i0.ɵɵprojection(2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(3, \"div\", 2);\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\n          }\n        },\n        styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return CdkVirtualScrollViewport;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n  const el = node;\n  if (!el.getBoundingClientRect) {\n    return 0;\n  }\n  const rect = el.getBoundingClientRect();\n  if (orientation === 'horizontal') {\n    return direction === 'start' ? rect.left : rect.right;\n  }\n  return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nlet CdkVirtualForOf = /*#__PURE__*/(() => {\n  class CdkVirtualForOf {\n    /** The DataSource to display. */\n    get cdkVirtualForOf() {\n      return this._cdkVirtualForOf;\n    }\n    set cdkVirtualForOf(value) {\n      this._cdkVirtualForOf = value;\n      if (isDataSource(value)) {\n        this._dataSourceChanges.next(value);\n      } else {\n        // If value is an an NgIterable, convert it to an array.\n        this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\n      }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     */\n    get cdkVirtualForTrackBy() {\n      return this._cdkVirtualForTrackBy;\n    }\n    set cdkVirtualForTrackBy(fn) {\n      this._needsUpdate = true;\n      this._cdkVirtualForTrackBy = fn ? (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item) : undefined;\n    }\n    /** The template used to stamp out new elements. */\n    set cdkVirtualForTemplate(value) {\n      if (value) {\n        this._needsUpdate = true;\n        this._template = value;\n      }\n    }\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     */\n    get cdkVirtualForTemplateCacheSize() {\n      return this._viewRepeater.viewCacheSize;\n    }\n    set cdkVirtualForTemplateCacheSize(size) {\n      this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\n    }\n    constructor( /** The view container to add items to. */\n    _viewContainerRef, /** The template to use when stamping out new items. */\n    _template, /** The set of available differs. */\n    _differs, /** The strategy used to render items in the virtual scroll viewport. */\n    _viewRepeater, /** The virtual scrolling viewport that these items are being rendered in. */\n    _viewport, ngZone) {\n      this._viewContainerRef = _viewContainerRef;\n      this._template = _template;\n      this._differs = _differs;\n      this._viewRepeater = _viewRepeater;\n      this._viewport = _viewport;\n      /** Emits when the rendered view of the data changes. */\n      this.viewChange = new Subject();\n      /** Subject that emits when a new DataSource instance is given. */\n      this._dataSourceChanges = new Subject();\n      /** Emits whenever the data in the current DataSource changes. */\n      this.dataStream = this._dataSourceChanges.pipe(\n      // Start off with null `DataSource`.\n      startWith(null),\n      // Bundle up the previous and current data sources so we can work with both.\n      pairwise(),\n      // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n      // new one, passing back a stream of data changes which we run through `switchMap` to give\n      // us a data stream that emits the latest data from whatever the current `DataSource` is.\n      switchMap(([prev, cur]) => this._changeDataSource(prev, cur)),\n      // Replay the last emitted data when someone subscribes.\n      shareReplay(1));\n      /** The differ used to calculate changes to the data. */\n      this._differ = null;\n      /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n      this._needsUpdate = false;\n      this._destroyed = new Subject();\n      this.dataStream.subscribe(data => {\n        this._data = data;\n        this._onRenderedDataChange();\n      });\n      this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n        this._renderedRange = range;\n        if (this.viewChange.observers.length) {\n          ngZone.run(() => this.viewChange.next(this._renderedRange));\n        }\n        this._onRenderedDataChange();\n      });\n      this._viewport.attach(this);\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    measureRangeSize(range, orientation) {\n      if (range.start >= range.end) {\n        return 0;\n      }\n      if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error(`Error: attempted to measure an item that isn't rendered.`);\n      }\n      // The index into the list of rendered views for the first item in the range.\n      const renderedStartIndex = range.start - this._renderedRange.start;\n      // The length of the range we're measuring.\n      const rangeLen = range.end - range.start;\n      // Loop over all the views, find the first and land node and compute the size by subtracting\n      // the top of the first node from the bottom of the last one.\n      let firstNode;\n      let lastNode;\n      // Find the first node by starting from the beginning and going forwards.\n      for (let i = 0; i < rangeLen; i++) {\n        const view = this._viewContainerRef.get(i + renderedStartIndex);\n        if (view && view.rootNodes.length) {\n          firstNode = lastNode = view.rootNodes[0];\n          break;\n        }\n      }\n      // Find the last node by starting from the end and going backwards.\n      for (let i = rangeLen - 1; i > -1; i--) {\n        const view = this._viewContainerRef.get(i + renderedStartIndex);\n        if (view && view.rootNodes.length) {\n          lastNode = view.rootNodes[view.rootNodes.length - 1];\n          break;\n        }\n      }\n      return firstNode && lastNode ? getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode) : 0;\n    }\n    ngDoCheck() {\n      if (this._differ && this._needsUpdate) {\n        // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n        // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n        // changing (need to do this diff).\n        const changes = this._differ.diff(this._renderedItems);\n        if (!changes) {\n          this._updateContext();\n        } else {\n          this._applyChanges(changes);\n        }\n        this._needsUpdate = false;\n      }\n    }\n    ngOnDestroy() {\n      this._viewport.detach();\n      this._dataSourceChanges.next(undefined);\n      this._dataSourceChanges.complete();\n      this.viewChange.complete();\n      this._destroyed.next();\n      this._destroyed.complete();\n      this._viewRepeater.detach();\n    }\n    /** React to scroll state changes in the viewport. */\n    _onRenderedDataChange() {\n      if (!this._renderedRange) {\n        return;\n      }\n      this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n      if (!this._differ) {\n        // Use a wrapper function for the `trackBy` so any new values are\n        // picked up automatically without having to recreate the differ.\n        this._differ = this._differs.find(this._renderedItems).create((index, item) => {\n          return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\n        });\n      }\n      this._needsUpdate = true;\n    }\n    /** Swap out one `DataSource` for another. */\n    _changeDataSource(oldDs, newDs) {\n      if (oldDs) {\n        oldDs.disconnect(this);\n      }\n      this._needsUpdate = true;\n      return newDs ? newDs.connect(this) : of();\n    }\n    /** Update the `CdkVirtualForOfContext` for all views. */\n    _updateContext() {\n      const count = this._data.length;\n      let i = this._viewContainerRef.length;\n      while (i--) {\n        const view = this._viewContainerRef.get(i);\n        view.context.index = this._renderedRange.start + i;\n        view.context.count = count;\n        this._updateComputedContextProperties(view.context);\n        view.detectChanges();\n      }\n    }\n    /** Apply changes to the DOM. */\n    _applyChanges(changes) {\n      this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), record => record.item);\n      // Update $implicit for any items that had an identity change.\n      changes.forEachIdentityChange(record => {\n        const view = this._viewContainerRef.get(record.currentIndex);\n        view.context.$implicit = record.item;\n      });\n      // Update the context variables on all items.\n      const count = this._data.length;\n      let i = this._viewContainerRef.length;\n      while (i--) {\n        const view = this._viewContainerRef.get(i);\n        view.context.index = this._renderedRange.start + i;\n        view.context.count = count;\n        this._updateComputedContextProperties(view.context);\n      }\n    }\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\n    _updateComputedContextProperties(context) {\n      context.first = context.index === 0;\n      context.last = context.index === context.count - 1;\n      context.even = context.index % 2 === 0;\n      context.odd = !context.even;\n    }\n    _getEmbeddedViewArgs(record, index) {\n      // Note that it's important that we insert the item directly at the proper index,\n      // rather than inserting it and the moving it in place, because if there's a directive\n      // on the same node that injects the `ViewContainerRef`, Angular will insert another\n      // comment node which can throw off the move when it's being repeated for all items.\n      return {\n        templateRef: this._template,\n        context: {\n          $implicit: record.item,\n          // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n          // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n          cdkVirtualForOf: this._cdkVirtualForOf,\n          index: -1,\n          count: -1,\n          first: false,\n          last: false,\n          odd: false,\n          even: false\n        },\n        index\n      };\n    }\n    static {\n      this.ɵfac = function CdkVirtualForOf_Factory(t) {\n        return new (t || CdkVirtualForOf)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY), i0.ɵɵdirectiveInject(CdkVirtualScrollViewport, 4), i0.ɵɵdirectiveInject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkVirtualForOf,\n        selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]],\n        inputs: {\n          cdkVirtualForOf: \"cdkVirtualForOf\",\n          cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\",\n          cdkVirtualForTemplate: \"cdkVirtualForTemplate\",\n          cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\"\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: _VIEW_REPEATER_STRATEGY,\n          useClass: _RecycleViewRepeaterStrategy\n        }])]\n      });\n    }\n  }\n  return CdkVirtualForOf;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Provides a virtual scrollable for the element it is attached to.\n */\nlet CdkVirtualScrollableElement = /*#__PURE__*/(() => {\n  class CdkVirtualScrollableElement extends CdkVirtualScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n      super(elementRef, scrollDispatcher, ngZone, dir);\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n      return this.getElementRef().nativeElement.getBoundingClientRect()[from] - this.measureScrollOffset(from);\n    }\n    static {\n      this.ɵfac = function CdkVirtualScrollableElement_Factory(t) {\n        return new (t || CdkVirtualScrollableElement)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ScrollDispatcher), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.Directionality, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkVirtualScrollableElement,\n        selectors: [[\"\", \"cdkVirtualScrollingElement\", \"\"]],\n        hostAttrs: [1, \"cdk-virtual-scrollable\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: VIRTUAL_SCROLLABLE,\n          useExisting: CdkVirtualScrollableElement\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return CdkVirtualScrollableElement;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Provides as virtual scrollable for the global / window scrollbar.\n */\nlet CdkVirtualScrollableWindow = /*#__PURE__*/(() => {\n  class CdkVirtualScrollableWindow extends CdkVirtualScrollable {\n    constructor(scrollDispatcher, ngZone, dir) {\n      super(new ElementRef(document.documentElement), scrollDispatcher, ngZone, dir);\n      this._elementScrolled = new Observable(observer => this.ngZone.runOutsideAngular(() => fromEvent(document, 'scroll').pipe(takeUntil(this._destroyed)).subscribe(observer)));\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n      return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    static {\n      this.ɵfac = function CdkVirtualScrollableWindow_Factory(t) {\n        return new (t || CdkVirtualScrollableWindow)(i0.ɵɵdirectiveInject(ScrollDispatcher), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.Directionality, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkVirtualScrollableWindow,\n        selectors: [[\"cdk-virtual-scroll-viewport\", \"scrollWindow\", \"\"]],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: VIRTUAL_SCROLLABLE,\n          useExisting: CdkVirtualScrollableWindow\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return CdkVirtualScrollableWindow;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet CdkScrollableModule = /*#__PURE__*/(() => {\n  class CdkScrollableModule {\n    static {\n      this.ɵfac = function CdkScrollableModule_Factory(t) {\n        return new (t || CdkScrollableModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: CdkScrollableModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return CdkScrollableModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @docs-primary-export\n */\nlet ScrollingModule = /*#__PURE__*/(() => {\n  class ScrollingModule {\n    static {\n      this.ɵfac = function ScrollingModule_Factory(t) {\n        return new (t || ScrollingModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: ScrollingModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [BidiModule, CdkScrollableModule, BidiModule, CdkScrollableModule]\n      });\n    }\n  }\n  return ScrollingModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, CdkVirtualScrollable, CdkVirtualScrollableElement, CdkVirtualScrollableWindow, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLLABLE, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n","import * as i0 from '@angular/core';\nimport { NgModule, CSP_NONCE, Injectable, Optional, Inject } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\nlet LayoutModule = /*#__PURE__*/(() => {\n  class LayoutModule {\n    static {\n      this.ɵfac = function LayoutModule_Factory(t) {\n        return new (t || LayoutModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: LayoutModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return LayoutModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = /*#__PURE__*/new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nlet MediaMatcher = /*#__PURE__*/(() => {\n  class MediaMatcher {\n    constructor(_platform, _nonce) {\n      this._platform = _platform;\n      this._nonce = _nonce;\n      this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n      // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n      // call it from a different scope.\n      window.matchMedia.bind(window) : noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n      if (this._platform.WEBKIT || this._platform.BLINK) {\n        createEmptyStyleRule(query, this._nonce);\n      }\n      return this._matchMedia(query);\n    }\n    static {\n      this.ɵfac = function MediaMatcher_Factory(t) {\n        return new (t || MediaMatcher)(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(CSP_NONCE, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: MediaMatcher,\n        factory: MediaMatcher.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return MediaMatcher;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Creates an empty stylesheet that is used to work around browser inconsistencies related to\n * `matchMedia`. At the time of writing, it handles the following cases:\n * 1. On WebKit browsers, a media query has to have at least one rule in order for `matchMedia`\n * to fire. We work around it by declaring a dummy stylesheet with a `@media` declaration.\n * 2. In some cases Blink browsers will stop firing the `matchMedia` listener if none of the rules\n * inside the `@media` match existing elements on the page. We work around it by having one rule\n * targeting the `body`. See https://github.com/angular/components/issues/23546.\n */\nfunction createEmptyStyleRule(query, nonce) {\n  if (mediaQueriesForWebkitCompatibility.has(query)) {\n    return;\n  }\n  try {\n    if (!mediaQueryStyleNode) {\n      mediaQueryStyleNode = document.createElement('style');\n      if (nonce) {\n        mediaQueryStyleNode.nonce = nonce;\n      }\n      mediaQueryStyleNode.setAttribute('type', 'text/css');\n      document.head.appendChild(mediaQueryStyleNode);\n    }\n    if (mediaQueryStyleNode.sheet) {\n      mediaQueryStyleNode.sheet.insertRule(`@media ${query} {body{ }}`, 0);\n      mediaQueriesForWebkitCompatibility.add(query);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n  // Use `as any` here to avoid adding additional necessary properties for\n  // the noop matcher.\n  return {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {},\n    removeListener: () => {}\n  };\n}\n\n/** Utility for checking the matching state of @media queries. */\nlet BreakpointObserver = /*#__PURE__*/(() => {\n  class BreakpointObserver {\n    constructor(_mediaMatcher, _zone) {\n      this._mediaMatcher = _mediaMatcher;\n      this._zone = _zone;\n      /**  A map of all media queries currently being listened for. */\n      this._queries = new Map();\n      /** A subject for all other observables to takeUntil based on. */\n      this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n      this._destroySubject.next();\n      this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n      const queries = splitQueries(coerceArray(value));\n      return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n      const queries = splitQueries(coerceArray(value));\n      const observables = queries.map(query => this._registerQuery(query).observable);\n      let stateObservable = combineLatest(observables);\n      // Emit the first state immediately, and then debounce the subsequent emissions.\n      stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n      return stateObservable.pipe(map(breakpointStates => {\n        const response = {\n          matches: false,\n          breakpoints: {}\n        };\n        breakpointStates.forEach(({\n          matches,\n          query\n        }) => {\n          response.matches = response.matches || matches;\n          response.breakpoints[query] = matches;\n        });\n        return response;\n      }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n      // Only set up a new MediaQueryList if it is not already being listened for.\n      if (this._queries.has(query)) {\n        return this._queries.get(query);\n      }\n      const mql = this._mediaMatcher.matchMedia(query);\n      // Create callback for match changes and add it is as a listener.\n      const queryObservable = new Observable(observer => {\n        // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n        // back into the zone because matchMedia is only included in Zone.js by loading the\n        // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n        // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n        // patches it.\n        const handler = e => this._zone.run(() => observer.next(e));\n        mql.addListener(handler);\n        return () => {\n          mql.removeListener(handler);\n        };\n      }).pipe(startWith(mql), map(({\n        matches\n      }) => ({\n        query,\n        matches\n      })), takeUntil(this._destroySubject));\n      // Add the MediaQueryList to the set of queries.\n      const output = {\n        observable: queryObservable,\n        mql\n      };\n      this._queries.set(query, output);\n      return output;\n    }\n    static {\n      this.ɵfac = function BreakpointObserver_Factory(t) {\n        return new (t || BreakpointObserver)(i0.ɵɵinject(MediaMatcher), i0.ɵɵinject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: BreakpointObserver,\n        factory: BreakpointObserver.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return BreakpointObserver;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n  return queries.map(query => query.split(',')).reduce((a1, a2) => a1.concat(a2)).map(query => query.trim());\n}\n\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n  XSmall: '(max-width: 599.98px)',\n  Small: '(min-width: 600px) and (max-width: 959.98px)',\n  Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n  Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n  XLarge: '(min-width: 1920px)',\n  Handset: '(max-width: 599.98px) and (orientation: portrait), ' + '(max-width: 959.98px) and (orientation: landscape)',\n  Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' + '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n  Web: '(min-width: 840px) and (orientation: portrait), ' + '(min-width: 1280px) and (orientation: landscape)',\n  HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n  TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n  WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n  HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n  TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n  WebLandscape: '(min-width: 1280px) and (orientation: landscape)'\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, APP_ID, Injectable, Inject, QueryList, booleanAttribute, Directive, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getFocusedElementPierceShadowDom, normalizePassiveListenerOptions, _getEventTarget, _getShadowRoot } from '@angular/cdk/platform';\nimport { Subject, Subscription, BehaviorSubject, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, PAGE_DOWN, PAGE_UP, END, HOME, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB, ALT, CONTROL, MAC_META, META, SHIFT } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take, skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport * as i1$1 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { coerceElement } from '@angular/cdk/coercion';\nimport { BreakpointObserver } from '@angular/cdk/layout';\n\n/** IDs are delimited by an empty space, as per the spec. */\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n  const ids = getAriaReferenceIds(el, attr);\n  if (ids.some(existingId => existingId.trim() == id.trim())) {\n    return;\n  }\n  ids.push(id.trim());\n  el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n  const ids = getAriaReferenceIds(el, attr);\n  const filteredIds = ids.filter(val => val != id.trim());\n  if (filteredIds.length) {\n    el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n  } else {\n    el.removeAttribute(attr);\n  }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n  // Get string array of all individual ids (whitespace delimited) in the attribute value\n  return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * ID used for the body container where all messages are appended.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 14.0.0\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nlet AriaDescriber = /*#__PURE__*/(() => {\n  class AriaDescriber {\n    constructor(_document,\n    /**\n     * @deprecated To be turned into a required parameter.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n      this._platform = _platform;\n      /** Map of all registered message elements that have been placed into the document. */\n      this._messageRegistry = new Map();\n      /** Container for all registered messages. */\n      this._messagesContainer = null;\n      /** Unique ID for the service. */\n      this._id = `${nextId++}`;\n      this._document = _document;\n      this._id = inject(APP_ID) + '-' + nextId++;\n    }\n    describe(hostElement, message, role) {\n      if (!this._canBeDescribed(hostElement, message)) {\n        return;\n      }\n      const key = getKey(message, role);\n      if (typeof message !== 'string') {\n        // We need to ensure that the element has an ID.\n        setMessageId(message, this._id);\n        this._messageRegistry.set(key, {\n          messageElement: message,\n          referenceCount: 0\n        });\n      } else if (!this._messageRegistry.has(key)) {\n        this._createMessageElement(message, role);\n      }\n      if (!this._isElementDescribedByMessage(hostElement, key)) {\n        this._addMessageReference(hostElement, key);\n      }\n    }\n    removeDescription(hostElement, message, role) {\n      if (!message || !this._isElementNode(hostElement)) {\n        return;\n      }\n      const key = getKey(message, role);\n      if (this._isElementDescribedByMessage(hostElement, key)) {\n        this._removeMessageReference(hostElement, key);\n      }\n      // If the message is a string, it means that it's one that we created for the\n      // consumer so we can remove it safely, otherwise we should leave it in place.\n      if (typeof message === 'string') {\n        const registeredMessage = this._messageRegistry.get(key);\n        if (registeredMessage && registeredMessage.referenceCount === 0) {\n          this._deleteMessageElement(key);\n        }\n      }\n      if (this._messagesContainer?.childNodes.length === 0) {\n        this._messagesContainer.remove();\n        this._messagesContainer = null;\n      }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n      const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}=\"${this._id}\"]`);\n      for (let i = 0; i < describedElements.length; i++) {\n        this._removeCdkDescribedByReferenceIds(describedElements[i]);\n        describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n      }\n      this._messagesContainer?.remove();\n      this._messagesContainer = null;\n      this._messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message, role) {\n      const messageElement = this._document.createElement('div');\n      setMessageId(messageElement, this._id);\n      messageElement.textContent = message;\n      if (role) {\n        messageElement.setAttribute('role', role);\n      }\n      this._createMessagesContainer();\n      this._messagesContainer.appendChild(messageElement);\n      this._messageRegistry.set(getKey(message, role), {\n        messageElement,\n        referenceCount: 0\n      });\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(key) {\n      this._messageRegistry.get(key)?.messageElement?.remove();\n      this._messageRegistry.delete(key);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n      if (this._messagesContainer) {\n        return;\n      }\n      const containerClassName = 'cdk-describedby-message-container';\n      const serverContainers = this._document.querySelectorAll(`.${containerClassName}[platform=\"server\"]`);\n      for (let i = 0; i < serverContainers.length; i++) {\n        // When going from the server to the client, we may end up in a situation where there's\n        // already a container on the page, but we don't have a reference to it. Clear the\n        // old container so we don't get duplicates. Doing this, instead of emptying the previous\n        // container, should be slightly faster.\n        serverContainers[i].remove();\n      }\n      const messagesContainer = this._document.createElement('div');\n      // We add `visibility: hidden` in order to prevent text in this container from\n      // being searchable by the browser's Ctrl + F functionality.\n      // Screen-readers will still read the description for elements with aria-describedby even\n      // when the description element is not visible.\n      messagesContainer.style.visibility = 'hidden';\n      // Even though we use `visibility: hidden`, we still apply `cdk-visually-hidden` so that\n      // the description element doesn't impact page layout.\n      messagesContainer.classList.add(containerClassName);\n      messagesContainer.classList.add('cdk-visually-hidden');\n      // @breaking-change 14.0.0 Remove null check for `_platform`.\n      if (this._platform && !this._platform.isBrowser) {\n        messagesContainer.setAttribute('platform', 'server');\n      }\n      this._document.body.appendChild(messagesContainer);\n      this._messagesContainer = messagesContainer;\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n      // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n      const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby').filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n      element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, key) {\n      const registeredMessage = this._messageRegistry.get(key);\n      // Add the aria-describedby reference and set the\n      // describedby_host attribute to mark the element.\n      addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n      element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, this._id);\n      registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, key) {\n      const registeredMessage = this._messageRegistry.get(key);\n      registeredMessage.referenceCount--;\n      removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n      element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, key) {\n      const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n      const registeredMessage = this._messageRegistry.get(key);\n      const messageId = registeredMessage && registeredMessage.messageElement.id;\n      return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n      if (!this._isElementNode(element)) {\n        return false;\n      }\n      if (message && typeof message === 'object') {\n        // We'd have to make some assumptions about the description element's text, if the consumer\n        // passed in an element. Assume that if an element is passed in, the consumer has verified\n        // that it can be used as a description.\n        return true;\n      }\n      const trimmedMessage = message == null ? '' : `${message}`.trim();\n      const ariaLabel = element.getAttribute('aria-label');\n      // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n      // element, because screen readers will end up reading out the same text twice in a row.\n      return trimmedMessage ? !ariaLabel || ariaLabel.trim() !== trimmedMessage : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n      return element.nodeType === this._document.ELEMENT_NODE;\n    }\n    static {\n      this.ɵfac = function AriaDescriber_Factory(t) {\n        return new (t || AriaDescriber)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1.Platform));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: AriaDescriber,\n        factory: AriaDescriber.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AriaDescriber;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Gets a key that can be used to look messages up in the registry. */\nfunction getKey(message, role) {\n  return typeof message === 'string' ? `${role || ''}/${message}` : message;\n}\n/** Assigns a unique ID to an element, if it doesn't have one already. */\nfunction setMessageId(element, serviceId) {\n  if (!element.id) {\n    element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${serviceId}-${nextId++}`;\n  }\n}\n\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n  constructor(_items) {\n    this._items = _items;\n    this._activeItemIndex = -1;\n    this._activeItem = null;\n    this._wrap = false;\n    this._letterKeyStream = new Subject();\n    this._typeaheadSubscription = Subscription.EMPTY;\n    this._vertical = true;\n    this._allowedModifierKeys = [];\n    this._homeAndEnd = false;\n    this._pageUpAndDown = {\n      enabled: false,\n      delta: 10\n    };\n    /**\n     * Predicate function that can be used to check whether an item should be skipped\n     * by the key manager. By default, disabled items are skipped.\n     */\n    this._skipPredicateFn = item => item.disabled;\n    // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n    this._pressedLetters = [];\n    /**\n     * Stream that emits any time the TAB key is pressed, so components can react\n     * when focus is shifted off of the list.\n     */\n    this.tabOut = new Subject();\n    /** Stream that emits whenever the active item of the list manager changes. */\n    this.change = new Subject();\n    // We allow for the items to be an array because, in some cases, the consumer may\n    // not have access to a QueryList of the items they want to manage (e.g. when the\n    // items aren't being collected via `ViewChildren` or `ContentChildren`).\n    if (_items instanceof QueryList) {\n      this._itemChangesSubscription = _items.changes.subscribe(newItems => {\n        if (this._activeItem) {\n          const itemArray = newItems.toArray();\n          const newIndex = itemArray.indexOf(this._activeItem);\n          if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n            this._activeItemIndex = newIndex;\n          }\n        }\n      });\n    }\n  }\n  /**\n   * Sets the predicate function that determines which items should be skipped by the\n   * list key manager.\n   * @param predicate Function that determines whether the given item should be skipped.\n   */\n  skipPredicate(predicate) {\n    this._skipPredicateFn = predicate;\n    return this;\n  }\n  /**\n   * Configures wrapping mode, which determines whether the active item will wrap to\n   * the other end of list when there are no more items in the given direction.\n   * @param shouldWrap Whether the list should wrap when reaching the end.\n   */\n  withWrap(shouldWrap = true) {\n    this._wrap = shouldWrap;\n    return this;\n  }\n  /**\n   * Configures whether the key manager should be able to move the selection vertically.\n   * @param enabled Whether vertical selection should be enabled.\n   */\n  withVerticalOrientation(enabled = true) {\n    this._vertical = enabled;\n    return this;\n  }\n  /**\n   * Configures the key manager to move the selection horizontally.\n   * Passing in `null` will disable horizontal movement.\n   * @param direction Direction in which the selection can be moved.\n   */\n  withHorizontalOrientation(direction) {\n    this._horizontal = direction;\n    return this;\n  }\n  /**\n   * Modifier keys which are allowed to be held down and whose default actions will be prevented\n   * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n   */\n  withAllowedModifierKeys(keys) {\n    this._allowedModifierKeys = keys;\n    return this;\n  }\n  /**\n   * Turns on typeahead mode which allows users to set the active item by typing.\n   * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n   */\n  withTypeAhead(debounceInterval = 200) {\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && this._items.length && this._items.some(item => typeof item.getLabel !== 'function')) {\n      throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n    }\n    this._typeaheadSubscription.unsubscribe();\n    // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n    // and convert those letters back into a string. Afterwards find the first item that starts\n    // with that string and select it.\n    this._typeaheadSubscription = this._letterKeyStream.pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(debounceInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join(''))).subscribe(inputString => {\n      const items = this._getItemsArray();\n      // Start at 1 because we want to start searching at the item immediately\n      // following the current active item.\n      for (let i = 1; i < items.length + 1; i++) {\n        const index = (this._activeItemIndex + i) % items.length;\n        const item = items[index];\n        if (!this._skipPredicateFn(item) && item.getLabel().toUpperCase().trim().indexOf(inputString) === 0) {\n          this.setActiveItem(index);\n          break;\n        }\n      }\n      this._pressedLetters = [];\n    });\n    return this;\n  }\n  /** Cancels the current typeahead sequence. */\n  cancelTypeahead() {\n    this._pressedLetters = [];\n    return this;\n  }\n  /**\n   * Configures the key manager to activate the first and last items\n   * respectively when the Home or End key is pressed.\n   * @param enabled Whether pressing the Home or End key activates the first/last item.\n   */\n  withHomeAndEnd(enabled = true) {\n    this._homeAndEnd = enabled;\n    return this;\n  }\n  /**\n   * Configures the key manager to activate every 10th, configured or first/last element in up/down direction\n   * respectively when the Page-Up or Page-Down key is pressed.\n   * @param enabled Whether pressing the Page-Up or Page-Down key activates the first/last item.\n   * @param delta Whether pressing the Home or End key activates the first/last item.\n   */\n  withPageUpDown(enabled = true, delta = 10) {\n    this._pageUpAndDown = {\n      enabled,\n      delta\n    };\n    return this;\n  }\n  setActiveItem(item) {\n    const previousActiveItem = this._activeItem;\n    this.updateActiveItem(item);\n    if (this._activeItem !== previousActiveItem) {\n      this.change.next(this._activeItemIndex);\n    }\n  }\n  /**\n   * Sets the active item depending on the key event passed in.\n   * @param event Keyboard event to be used for determining which element should be active.\n   */\n  onKeydown(event) {\n    const keyCode = event.keyCode;\n    const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n    const isModifierAllowed = modifiers.every(modifier => {\n      return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n    });\n    switch (keyCode) {\n      case TAB:\n        this.tabOut.next();\n        return;\n      case DOWN_ARROW:\n        if (this._vertical && isModifierAllowed) {\n          this.setNextItemActive();\n          break;\n        } else {\n          return;\n        }\n      case UP_ARROW:\n        if (this._vertical && isModifierAllowed) {\n          this.setPreviousItemActive();\n          break;\n        } else {\n          return;\n        }\n      case RIGHT_ARROW:\n        if (this._horizontal && isModifierAllowed) {\n          this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n          break;\n        } else {\n          return;\n        }\n      case LEFT_ARROW:\n        if (this._horizontal && isModifierAllowed) {\n          this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n          break;\n        } else {\n          return;\n        }\n      case HOME:\n        if (this._homeAndEnd && isModifierAllowed) {\n          this.setFirstItemActive();\n          break;\n        } else {\n          return;\n        }\n      case END:\n        if (this._homeAndEnd && isModifierAllowed) {\n          this.setLastItemActive();\n          break;\n        } else {\n          return;\n        }\n      case PAGE_UP:\n        if (this._pageUpAndDown.enabled && isModifierAllowed) {\n          const targetIndex = this._activeItemIndex - this._pageUpAndDown.delta;\n          this._setActiveItemByIndex(targetIndex > 0 ? targetIndex : 0, 1);\n          break;\n        } else {\n          return;\n        }\n      case PAGE_DOWN:\n        if (this._pageUpAndDown.enabled && isModifierAllowed) {\n          const targetIndex = this._activeItemIndex + this._pageUpAndDown.delta;\n          const itemsLength = this._getItemsArray().length;\n          this._setActiveItemByIndex(targetIndex < itemsLength ? targetIndex : itemsLength - 1, -1);\n          break;\n        } else {\n          return;\n        }\n      default:\n        if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n          // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n          // otherwise fall back to resolving alphanumeric characters via the keyCode.\n          if (event.key && event.key.length === 1) {\n            this._letterKeyStream.next(event.key.toLocaleUpperCase());\n          } else if (keyCode >= A && keyCode <= Z || keyCode >= ZERO && keyCode <= NINE) {\n            this._letterKeyStream.next(String.fromCharCode(keyCode));\n          }\n        }\n        // Note that we return here, in order to avoid preventing\n        // the default action of non-navigational keys.\n        return;\n    }\n    this._pressedLetters = [];\n    event.preventDefault();\n  }\n  /** Index of the currently active item. */\n  get activeItemIndex() {\n    return this._activeItemIndex;\n  }\n  /** The active item. */\n  get activeItem() {\n    return this._activeItem;\n  }\n  /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n  isTyping() {\n    return this._pressedLetters.length > 0;\n  }\n  /** Sets the active item to the first enabled item in the list. */\n  setFirstItemActive() {\n    this._setActiveItemByIndex(0, 1);\n  }\n  /** Sets the active item to the last enabled item in the list. */\n  setLastItemActive() {\n    this._setActiveItemByIndex(this._items.length - 1, -1);\n  }\n  /** Sets the active item to the next enabled item in the list. */\n  setNextItemActive() {\n    this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n  }\n  /** Sets the active item to a previous enabled item in the list. */\n  setPreviousItemActive() {\n    this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive() : this._setActiveItemByDelta(-1);\n  }\n  updateActiveItem(item) {\n    const itemArray = this._getItemsArray();\n    const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n    const activeItem = itemArray[index];\n    // Explicitly check for `null` and `undefined` because other falsy values are valid.\n    this._activeItem = activeItem == null ? null : activeItem;\n    this._activeItemIndex = index;\n  }\n  /** Cleans up the key manager. */\n  destroy() {\n    this._typeaheadSubscription.unsubscribe();\n    this._itemChangesSubscription?.unsubscribe();\n    this._letterKeyStream.complete();\n    this.tabOut.complete();\n    this.change.complete();\n    this._pressedLetters = [];\n  }\n  /**\n   * This method sets the active item, given a list of items and the delta between the\n   * currently active item and the new active item. It will calculate differently\n   * depending on whether wrap mode is turned on.\n   */\n  _setActiveItemByDelta(delta) {\n    this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n  }\n  /**\n   * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n   * down the list until it finds an item that is not disabled, and it will wrap if it\n   * encounters either end of the list.\n   */\n  _setActiveInWrapMode(delta) {\n    const items = this._getItemsArray();\n    for (let i = 1; i <= items.length; i++) {\n      const index = (this._activeItemIndex + delta * i + items.length) % items.length;\n      const item = items[index];\n      if (!this._skipPredicateFn(item)) {\n        this.setActiveItem(index);\n        return;\n      }\n    }\n  }\n  /**\n   * Sets the active item properly given the default mode. In other words, it will\n   * continue to move down the list until it finds an item that is not disabled. If\n   * it encounters either end of the list, it will stop and not wrap.\n   */\n  _setActiveInDefaultMode(delta) {\n    this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n  }\n  /**\n   * Sets the active item to the first enabled item starting at the index specified. If the\n   * item is disabled, it will move in the fallbackDelta direction until it either\n   * finds an enabled item or encounters the end of the list.\n   */\n  _setActiveItemByIndex(index, fallbackDelta) {\n    const items = this._getItemsArray();\n    if (!items[index]) {\n      return;\n    }\n    while (this._skipPredicateFn(items[index])) {\n      index += fallbackDelta;\n      if (!items[index]) {\n        return;\n      }\n    }\n    this.setActiveItem(index);\n  }\n  /** Returns the items as an array. */\n  _getItemsArray() {\n    return this._items instanceof QueryList ? this._items.toArray() : this._items;\n  }\n}\nclass ActiveDescendantKeyManager extends ListKeyManager {\n  setActiveItem(index) {\n    if (this.activeItem) {\n      this.activeItem.setInactiveStyles();\n    }\n    super.setActiveItem(index);\n    if (this.activeItem) {\n      this.activeItem.setActiveStyles();\n    }\n  }\n}\nclass FocusKeyManager extends ListKeyManager {\n  constructor() {\n    super(...arguments);\n    this._origin = 'program';\n  }\n  /**\n   * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n   * @param origin Focus origin to be used when focusing items.\n   */\n  setFocusOrigin(origin) {\n    this._origin = origin;\n    return this;\n  }\n  setActiveItem(item) {\n    super.setActiveItem(item);\n    if (this.activeItem) {\n      this.activeItem.focus(this._origin);\n    }\n  }\n}\n\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n  constructor() {\n    /**\n     * Whether to count an element as focusable even if it is not currently visible.\n     */\n    this.ignoreVisibility = false;\n  }\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether it is focusable or\n * tabbable.\n */\nlet InteractivityChecker = /*#__PURE__*/(() => {\n  class InteractivityChecker {\n    constructor(_platform) {\n      this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    isDisabled(element) {\n      // This does not capture some cases, such as a non-form control with a disabled attribute or\n      // a form control inside of a disabled form, but should capture the most common cases.\n      return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    isVisible(element) {\n      return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    isTabbable(element) {\n      // Nothing is tabbable on the server 😎\n      if (!this._platform.isBrowser) {\n        return false;\n      }\n      const frameElement = getFrameElement(getWindow(element));\n      if (frameElement) {\n        // Frame elements inherit their tabindex onto all child elements.\n        if (getTabIndexValue(frameElement) === -1) {\n          return false;\n        }\n        // Browsers disable tabbing to an element inside of an invisible frame.\n        if (!this.isVisible(frameElement)) {\n          return false;\n        }\n      }\n      let nodeName = element.nodeName.toLowerCase();\n      let tabIndexValue = getTabIndexValue(element);\n      if (element.hasAttribute('contenteditable')) {\n        return tabIndexValue !== -1;\n      }\n      if (nodeName === 'iframe' || nodeName === 'object') {\n        // The frame or object's content may be tabbable depending on the content, but it's\n        // not possibly to reliably detect the content of the frames. We always consider such\n        // elements as non-tabbable.\n        return false;\n      }\n      // In iOS, the browser only considers some specific elements as tabbable.\n      if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n        return false;\n      }\n      if (nodeName === 'audio') {\n        // Audio elements without controls enabled are never tabbable, regardless\n        // of the tabindex attribute explicitly being set.\n        if (!element.hasAttribute('controls')) {\n          return false;\n        }\n        // Audio elements with controls are by default tabbable unless the\n        // tabindex attribute is set to `-1` explicitly.\n        return tabIndexValue !== -1;\n      }\n      if (nodeName === 'video') {\n        // For all video elements, if the tabindex attribute is set to `-1`, the video\n        // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n        // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n        // tabindex attribute is the source of truth here.\n        if (tabIndexValue === -1) {\n          return false;\n        }\n        // If the tabindex is explicitly set, and not `-1` (as per check before), the\n        // video element is always tabbable (regardless of whether it has controls or not).\n        if (tabIndexValue !== null) {\n          return true;\n        }\n        // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n        // has controls enabled. Firefox is special as videos are always tabbable regardless\n        // of whether there are controls or not.\n        return this._platform.FIREFOX || element.hasAttribute('controls');\n      }\n      return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @param config The config object with options to customize this method's behavior\n     * @returns Whether the element is focusable.\n     */\n    isFocusable(element, config) {\n      // Perform checks in order of left to most expensive.\n      // Again, naive approach that does not capture many edge cases and browser quirks.\n      return isPotentiallyFocusable(element) && !this.isDisabled(element) && (config?.ignoreVisibility || this.isVisible(element));\n    }\n    static {\n      this.ɵfac = function InteractivityChecker_Factory(t) {\n        return new (t || InteractivityChecker)(i0.ɵɵinject(i1.Platform));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: InteractivityChecker,\n        factory: InteractivityChecker.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return InteractivityChecker;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n  try {\n    return window.frameElement;\n  } catch {\n    return null;\n  }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n  // Use logic from jQuery to check for an invisible element.\n  // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n  return !!(element.offsetWidth || element.offsetHeight || typeof element.getClientRects === 'function' && element.getClientRects().length);\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n  let nodeName = element.nodeName.toLowerCase();\n  return nodeName === 'input' || nodeName === 'select' || nodeName === 'button' || nodeName === 'textarea';\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n  return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n  return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n  return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n  return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n  if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n    return false;\n  }\n  let tabIndex = element.getAttribute('tabindex');\n  return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n  if (!hasValidTabIndex(element)) {\n    return null;\n  }\n  // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n  const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n  return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n  let nodeName = element.nodeName.toLowerCase();\n  let inputType = nodeName === 'input' && element.type;\n  return inputType === 'text' || inputType === 'password' || nodeName === 'select' || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n  // Inputs are potentially focusable *unless* they're type=\"hidden\".\n  if (isHiddenInput(element)) {\n    return false;\n  }\n  return isNativeFormElement(element) || isAnchorWithHref(element) || element.hasAttribute('contenteditable') || hasValidTabIndex(element);\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n  // ownerDocument is null if `node` itself *is* a document.\n  return node.ownerDocument && node.ownerDocument.defaultView || window;\n}\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to be misaligned.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrap {\n  /** Whether the focus trap is active. */\n  get enabled() {\n    return this._enabled;\n  }\n  set enabled(value) {\n    this._enabled = value;\n    if (this._startAnchor && this._endAnchor) {\n      this._toggleAnchorTabIndex(value, this._startAnchor);\n      this._toggleAnchorTabIndex(value, this._endAnchor);\n    }\n  }\n  constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n    this._element = _element;\n    this._checker = _checker;\n    this._ngZone = _ngZone;\n    this._document = _document;\n    this._hasAttached = false;\n    // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n    this.startAnchorListener = () => this.focusLastTabbableElement();\n    this.endAnchorListener = () => this.focusFirstTabbableElement();\n    this._enabled = true;\n    if (!deferAnchors) {\n      this.attachAnchors();\n    }\n  }\n  /** Destroys the focus trap by cleaning up the anchors. */\n  destroy() {\n    const startAnchor = this._startAnchor;\n    const endAnchor = this._endAnchor;\n    if (startAnchor) {\n      startAnchor.removeEventListener('focus', this.startAnchorListener);\n      startAnchor.remove();\n    }\n    if (endAnchor) {\n      endAnchor.removeEventListener('focus', this.endAnchorListener);\n      endAnchor.remove();\n    }\n    this._startAnchor = this._endAnchor = null;\n    this._hasAttached = false;\n  }\n  /**\n   * Inserts the anchors into the DOM. This is usually done automatically\n   * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n   * @returns Whether the focus trap managed to attach successfully. This may not be the case\n   * if the target element isn't currently in the DOM.\n   */\n  attachAnchors() {\n    // If we're not on the browser, there can be no focus to trap.\n    if (this._hasAttached) {\n      return true;\n    }\n    this._ngZone.runOutsideAngular(() => {\n      if (!this._startAnchor) {\n        this._startAnchor = this._createAnchor();\n        this._startAnchor.addEventListener('focus', this.startAnchorListener);\n      }\n      if (!this._endAnchor) {\n        this._endAnchor = this._createAnchor();\n        this._endAnchor.addEventListener('focus', this.endAnchorListener);\n      }\n    });\n    if (this._element.parentNode) {\n      this._element.parentNode.insertBefore(this._startAnchor, this._element);\n      this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n      this._hasAttached = true;\n    }\n    return this._hasAttached;\n  }\n  /**\n   * Waits for the zone to stabilize, then focuses the first tabbable element.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfully.\n   */\n  focusInitialElementWhenReady(options) {\n    return new Promise(resolve => {\n      this._executeOnStable(() => resolve(this.focusInitialElement(options)));\n    });\n  }\n  /**\n   * Waits for the zone to stabilize, then focuses\n   * the first tabbable element within the focus trap region.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfully.\n   */\n  focusFirstTabbableElementWhenReady(options) {\n    return new Promise(resolve => {\n      this._executeOnStable(() => resolve(this.focusFirstTabbableElement(options)));\n    });\n  }\n  /**\n   * Waits for the zone to stabilize, then focuses\n   * the last tabbable element within the focus trap region.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfully.\n   */\n  focusLastTabbableElementWhenReady(options) {\n    return new Promise(resolve => {\n      this._executeOnStable(() => resolve(this.focusLastTabbableElement(options)));\n    });\n  }\n  /**\n   * Get the specified boundary element of the trapped region.\n   * @param bound The boundary to get (start or end of trapped region).\n   * @returns The boundary element.\n   */\n  _getRegionBoundary(bound) {\n    // Contains the deprecated version of selector, for temporary backwards comparability.\n    const markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` + `[cdkFocusRegion${bound}], ` + `[cdk-focus-${bound}]`);\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      for (let i = 0; i < markers.length; i++) {\n        // @breaking-change 8.0.0\n        if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n          console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` + `use 'cdkFocusRegion${bound}' instead. The deprecated ` + `attribute will be removed in 8.0.0.`, markers[i]);\n        } else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n          console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` + `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` + `will be removed in 8.0.0.`, markers[i]);\n        }\n      }\n    }\n    if (bound == 'start') {\n      return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n    }\n    return markers.length ? markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n  }\n  /**\n   * Focuses the element that should be focused when the focus trap is initialized.\n   * @returns Whether focus was moved successfully.\n   */\n  focusInitialElement(options) {\n    // Contains the deprecated version of selector, for temporary backwards comparability.\n    const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` + `[cdkFocusInitial]`);\n    if (redirectToElement) {\n      // @breaking-change 8.0.0\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n        console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` + `use 'cdkFocusInitial' instead. The deprecated attribute ` + `will be removed in 8.0.0`, redirectToElement);\n      }\n      // Warn the consumer if the element they've pointed to\n      // isn't focusable, when not in production mode.\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this._checker.isFocusable(redirectToElement)) {\n        console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n      }\n      if (!this._checker.isFocusable(redirectToElement)) {\n        const focusableChild = this._getFirstTabbableElement(redirectToElement);\n        focusableChild?.focus(options);\n        return !!focusableChild;\n      }\n      redirectToElement.focus(options);\n      return true;\n    }\n    return this.focusFirstTabbableElement(options);\n  }\n  /**\n   * Focuses the first tabbable element within the focus trap region.\n   * @returns Whether focus was moved successfully.\n   */\n  focusFirstTabbableElement(options) {\n    const redirectToElement = this._getRegionBoundary('start');\n    if (redirectToElement) {\n      redirectToElement.focus(options);\n    }\n    return !!redirectToElement;\n  }\n  /**\n   * Focuses the last tabbable element within the focus trap region.\n   * @returns Whether focus was moved successfully.\n   */\n  focusLastTabbableElement(options) {\n    const redirectToElement = this._getRegionBoundary('end');\n    if (redirectToElement) {\n      redirectToElement.focus(options);\n    }\n    return !!redirectToElement;\n  }\n  /**\n   * Checks whether the focus trap has successfully been attached.\n   */\n  hasAttached() {\n    return this._hasAttached;\n  }\n  /** Get the first tabbable element from a DOM subtree (inclusive). */\n  _getFirstTabbableElement(root) {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n    const children = root.children;\n    for (let i = 0; i < children.length; i++) {\n      const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ? this._getFirstTabbableElement(children[i]) : null;\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n    return null;\n  }\n  /** Get the last tabbable element from a DOM subtree (inclusive). */\n  _getLastTabbableElement(root) {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n    // Iterate in reverse DOM order.\n    const children = root.children;\n    for (let i = children.length - 1; i >= 0; i--) {\n      const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ? this._getLastTabbableElement(children[i]) : null;\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n    return null;\n  }\n  /** Creates an anchor element. */\n  _createAnchor() {\n    const anchor = this._document.createElement('div');\n    this._toggleAnchorTabIndex(this._enabled, anchor);\n    anchor.classList.add('cdk-visually-hidden');\n    anchor.classList.add('cdk-focus-trap-anchor');\n    anchor.setAttribute('aria-hidden', 'true');\n    return anchor;\n  }\n  /**\n   * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n   * @param isEnabled Whether the focus trap is enabled.\n   * @param anchor Anchor on which to toggle the tabindex.\n   */\n  _toggleAnchorTabIndex(isEnabled, anchor) {\n    // Remove the tabindex completely, rather than setting it to -1, because if the\n    // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n    isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n  }\n  /**\n   * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n   * @param enabled: Whether the anchors should trap Tab.\n   */\n  toggleAnchors(enabled) {\n    if (this._startAnchor && this._endAnchor) {\n      this._toggleAnchorTabIndex(enabled, this._startAnchor);\n      this._toggleAnchorTabIndex(enabled, this._endAnchor);\n    }\n  }\n  /** Executes a function when the zone is stable. */\n  _executeOnStable(fn) {\n    if (this._ngZone.isStable) {\n      fn();\n    } else {\n      this._ngZone.onStable.pipe(take(1)).subscribe(fn);\n    }\n  }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * @breaking-change 11.0.0\n */\nlet FocusTrapFactory = /*#__PURE__*/(() => {\n  class FocusTrapFactory {\n    constructor(_checker, _ngZone, _document) {\n      this._checker = _checker;\n      this._ngZone = _ngZone;\n      this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n      return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n    static {\n      this.ɵfac = function FocusTrapFactory_Factory(t) {\n        return new (t || FocusTrapFactory)(i0.ɵɵinject(InteractivityChecker), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: FocusTrapFactory,\n        factory: FocusTrapFactory.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return FocusTrapFactory;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Directive for trapping focus within a region. */\nlet CdkTrapFocus = /*#__PURE__*/(() => {\n  class CdkTrapFocus {\n    /** Whether the focus trap is active. */\n    get enabled() {\n      return this.focusTrap.enabled;\n    }\n    set enabled(value) {\n      this.focusTrap.enabled = value;\n    }\n    constructor(_elementRef, _focusTrapFactory,\n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n      this._elementRef = _elementRef;\n      this._focusTrapFactory = _focusTrapFactory;\n      /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n      this._previouslyFocusedElement = null;\n      this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    ngOnDestroy() {\n      this.focusTrap.destroy();\n      // If we stored a previously focused element when using autoCapture, return focus to that\n      // element now that the trapped region is being destroyed.\n      if (this._previouslyFocusedElement) {\n        this._previouslyFocusedElement.focus();\n        this._previouslyFocusedElement = null;\n      }\n    }\n    ngAfterContentInit() {\n      this.focusTrap.attachAnchors();\n      if (this.autoCapture) {\n        this._captureFocus();\n      }\n    }\n    ngDoCheck() {\n      if (!this.focusTrap.hasAttached()) {\n        this.focusTrap.attachAnchors();\n      }\n    }\n    ngOnChanges(changes) {\n      const autoCaptureChange = changes['autoCapture'];\n      if (autoCaptureChange && !autoCaptureChange.firstChange && this.autoCapture && this.focusTrap.hasAttached()) {\n        this._captureFocus();\n      }\n    }\n    _captureFocus() {\n      this._previouslyFocusedElement = _getFocusedElementPierceShadowDom();\n      this.focusTrap.focusInitialElementWhenReady();\n    }\n    static {\n      this.ɵfac = function CdkTrapFocus_Factory(t) {\n        return new (t || CdkTrapFocus)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(FocusTrapFactory), i0.ɵɵdirectiveInject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkTrapFocus,\n        selectors: [[\"\", \"cdkTrapFocus\", \"\"]],\n        inputs: {\n          enabled: [\"cdkTrapFocus\", \"enabled\", booleanAttribute],\n          autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\", booleanAttribute]\n        },\n        exportAs: [\"cdkTrapFocus\"],\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return CdkTrapFocus;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n  /** Whether the FocusTrap is enabled. */\n  get enabled() {\n    return this._enabled;\n  }\n  set enabled(value) {\n    this._enabled = value;\n    if (this._enabled) {\n      this._focusTrapManager.register(this);\n    } else {\n      this._focusTrapManager.deregister(this);\n    }\n  }\n  constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n    super(_element, _checker, _ngZone, _document, config.defer);\n    this._focusTrapManager = _focusTrapManager;\n    this._inertStrategy = _inertStrategy;\n    this._focusTrapManager.register(this);\n  }\n  /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n  destroy() {\n    this._focusTrapManager.deregister(this);\n    super.destroy();\n  }\n  /** @docs-private Implemented as part of ManagedFocusTrap. */\n  _enable() {\n    this._inertStrategy.preventFocus(this);\n    this.toggleAnchors(true);\n  }\n  /** @docs-private Implemented as part of ManagedFocusTrap. */\n  _disable() {\n    this._inertStrategy.allowFocus(this);\n    this.toggleAnchors(false);\n  }\n}\n\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = /*#__PURE__*/new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n  constructor() {\n    /** Focus event handler. */\n    this._listener = null;\n  }\n  /** Adds a document event listener that keeps focus inside the FocusTrap. */\n  preventFocus(focusTrap) {\n    // Ensure there's only one listener per document\n    if (this._listener) {\n      focusTrap._document.removeEventListener('focus', this._listener, true);\n    }\n    this._listener = e => this._trapFocus(focusTrap, e);\n    focusTrap._ngZone.runOutsideAngular(() => {\n      focusTrap._document.addEventListener('focus', this._listener, true);\n    });\n  }\n  /** Removes the event listener added in preventFocus. */\n  allowFocus(focusTrap) {\n    if (!this._listener) {\n      return;\n    }\n    focusTrap._document.removeEventListener('focus', this._listener, true);\n    this._listener = null;\n  }\n  /**\n   * Refocuses the first element in the FocusTrap if the focus event target was outside\n   * the FocusTrap.\n   *\n   * This is an event listener callback. The event listener is added in runOutsideAngular,\n   * so all this code runs outside Angular as well.\n   */\n  _trapFocus(focusTrap, event) {\n    const target = event.target;\n    const focusTrapRoot = focusTrap._element;\n    // Don't refocus if target was in an overlay, because the overlay might be associated\n    // with an element inside the FocusTrap, ex. mat-select.\n    if (target && !focusTrapRoot.contains(target) && !target.closest?.('div.cdk-overlay-pane')) {\n      // Some legacy FocusTrap usages have logic that focuses some element on the page\n      // just before FocusTrap is destroyed. For backwards compatibility, wait\n      // to be sure FocusTrap is still enabled before refocusing.\n      setTimeout(() => {\n        // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n        if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n          focusTrap.focusFirstTabbableElement();\n        }\n      });\n    }\n  }\n}\n\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nlet FocusTrapManager = /*#__PURE__*/(() => {\n  class FocusTrapManager {\n    constructor() {\n      // A stack of the FocusTraps on the page. Only the FocusTrap at the\n      // top of the stack is active.\n      this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n      // Dedupe focusTraps that register multiple times.\n      this._focusTrapStack = this._focusTrapStack.filter(ft => ft !== focusTrap);\n      let stack = this._focusTrapStack;\n      if (stack.length) {\n        stack[stack.length - 1]._disable();\n      }\n      stack.push(focusTrap);\n      focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n      focusTrap._disable();\n      const stack = this._focusTrapStack;\n      const i = stack.indexOf(focusTrap);\n      if (i !== -1) {\n        stack.splice(i, 1);\n        if (stack.length) {\n          stack[stack.length - 1]._enable();\n        }\n      }\n    }\n    static {\n      this.ɵfac = function FocusTrapManager_Factory(t) {\n        return new (t || FocusTrapManager)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: FocusTrapManager,\n        factory: FocusTrapManager.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return FocusTrapManager;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Factory that allows easy instantiation of configurable focus traps. */\nlet ConfigurableFocusTrapFactory = /*#__PURE__*/(() => {\n  class ConfigurableFocusTrapFactory {\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n      this._checker = _checker;\n      this._ngZone = _ngZone;\n      this._focusTrapManager = _focusTrapManager;\n      this._document = _document;\n      // TODO split up the strategies into different modules, similar to DateAdapter.\n      this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = {\n      defer: false\n    }) {\n      let configObject;\n      if (typeof config === 'boolean') {\n        configObject = {\n          defer: config\n        };\n      } else {\n        configObject = config;\n      }\n      return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n    static {\n      this.ɵfac = function ConfigurableFocusTrapFactory_Factory(t) {\n        return new (t || ConfigurableFocusTrapFactory)(i0.ɵɵinject(InteractivityChecker), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(FocusTrapManager), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(FOCUS_TRAP_INERT_STRATEGY, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: ConfigurableFocusTrapFactory,\n        factory: ConfigurableFocusTrapFactory.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ConfigurableFocusTrapFactory;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n  // Some screen readers will dispatch a fake `mousedown` event when pressing enter or space on\n  // a clickable element. We can distinguish these events when `event.buttons` is zero, or\n  // `event.detail` is zero depending on the browser:\n  // - `event.buttons` works on Firefox, but fails on Chrome.\n  // - `detail` works on Chrome, but fails on Firefox.\n  return event.buttons === 0 || event.detail === 0;\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n  const touch = event.touches && event.touches[0] || event.changedTouches && event.changedTouches[0];\n  // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n  // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n  // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n  // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n  return !!touch && touch.identifier === -1 && (touch.radiusX == null || touch.radiusX === 1) && (touch.radiusY == null || touch.radiusY === 1);\n}\n\n/**\n * Injectable options for the InputModalityDetector. These are shallowly merged with the default\n * options.\n */\nconst INPUT_MODALITY_DETECTOR_OPTIONS = /*#__PURE__*/new InjectionToken('cdk-input-modality-detector-options');\n/**\n * Default options for the InputModalityDetector.\n *\n * Modifier keys are ignored by default (i.e. when pressed won't cause the service to detect\n * keyboard input modality) for two reasons:\n *\n * 1. Modifier keys are commonly used with mouse to perform actions such as 'right click' or 'open\n *    in new tab', and are thus less representative of actual keyboard interaction.\n * 2. VoiceOver triggers some keyboard events when linearly navigating with Control + Option (but\n *    confusingly not with Caps Lock). Thus, to have parity with other screen readers, we ignore\n *    these keys so as to not update the input modality.\n *\n * Note that we do not by default ignore the right Meta key on Safari because it has the same key\n * code as the ContextMenu key on other browsers. When we switch to using event.key, we can\n * distinguish between the two.\n */\nconst INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS = {\n  ignoreKeys: [ALT, CONTROL, MAC_META, META, SHIFT]\n};\n/**\n * The amount of time needed to pass after a touchstart event in order for a subsequent mousedown\n * event to be attributed as mouse and not touch.\n *\n * This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n * that a value of around 650ms seems appropriate.\n */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also mark the listener as passive if the browser\n * supports it.\n */\nconst modalityEventListenerOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n/**\n * Service that detects the user's input modality.\n *\n * This service does not update the input modality when a user navigates with a screen reader\n * (e.g. linear navigation with VoiceOver, object navigation / browse mode with NVDA, virtual PC\n * cursor mode with JAWS). This is in part due to technical limitations (i.e. keyboard events do not\n * fire as expected in these modes) but is also arguably the correct behavior. Navigating with a\n * screen reader is akin to visually scanning a page, and should not be interpreted as actual user\n * input interaction.\n *\n * When a user is not navigating but *interacting* with a screen reader, this service attempts to\n * update the input modality to keyboard, but in general this service's behavior is largely\n * undefined.\n */\nlet InputModalityDetector = /*#__PURE__*/(() => {\n  class InputModalityDetector {\n    /** The most recently detected input modality. */\n    get mostRecentModality() {\n      return this._modality.value;\n    }\n    constructor(_platform, ngZone, document, options) {\n      this._platform = _platform;\n      /**\n       * The most recently detected input modality event target. Is null if no input modality has been\n       * detected or if the associated event target is null for some unknown reason.\n       */\n      this._mostRecentTarget = null;\n      /** The underlying BehaviorSubject that emits whenever an input modality is detected. */\n      this._modality = new BehaviorSubject(null);\n      /**\n       * The timestamp of the last touch input modality. Used to determine whether mousedown events\n       * should be attributed to mouse or touch.\n       */\n      this._lastTouchMs = 0;\n      /**\n       * Handles keydown events. Must be an arrow function in order to preserve the context when it gets\n       * bound.\n       */\n      this._onKeydown = event => {\n        // If this is one of the keys we should ignore, then ignore it and don't update the input\n        // modality to keyboard.\n        if (this._options?.ignoreKeys?.some(keyCode => keyCode === event.keyCode)) {\n          return;\n        }\n        this._modality.next('keyboard');\n        this._mostRecentTarget = _getEventTarget(event);\n      };\n      /**\n       * Handles mousedown events. Must be an arrow function in order to preserve the context when it\n       * gets bound.\n       */\n      this._onMousedown = event => {\n        // Touches trigger both touch and mouse events, so we need to distinguish between mouse events\n        // that were triggered via mouse vs touch. To do so, check if the mouse event occurs closely\n        // after the previous touch event.\n        if (Date.now() - this._lastTouchMs < TOUCH_BUFFER_MS) {\n          return;\n        }\n        // Fake mousedown events are fired by some screen readers when controls are activated by the\n        // screen reader. Attribute them to keyboard input modality.\n        this._modality.next(isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse');\n        this._mostRecentTarget = _getEventTarget(event);\n      };\n      /**\n       * Handles touchstart events. Must be an arrow function in order to preserve the context when it\n       * gets bound.\n       */\n      this._onTouchstart = event => {\n        // Same scenario as mentioned in _onMousedown, but on touch screen devices, fake touchstart\n        // events are fired. Again, attribute to keyboard input modality.\n        if (isFakeTouchstartFromScreenReader(event)) {\n          this._modality.next('keyboard');\n          return;\n        }\n        // Store the timestamp of this touch event, as it's used to distinguish between mouse events\n        // triggered via mouse vs touch.\n        this._lastTouchMs = Date.now();\n        this._modality.next('touch');\n        this._mostRecentTarget = _getEventTarget(event);\n      };\n      this._options = {\n        ...INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS,\n        ...options\n      };\n      // Skip the first emission as it's null.\n      this.modalityDetected = this._modality.pipe(skip(1));\n      this.modalityChanged = this.modalityDetected.pipe(distinctUntilChanged());\n      // If we're not in a browser, this service should do nothing, as there's no relevant input\n      // modality to detect.\n      if (_platform.isBrowser) {\n        ngZone.runOutsideAngular(() => {\n          document.addEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n          document.addEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n          document.addEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n        });\n      }\n    }\n    ngOnDestroy() {\n      this._modality.complete();\n      if (this._platform.isBrowser) {\n        document.removeEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n        document.removeEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n        document.removeEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n      }\n    }\n    static {\n      this.ɵfac = function InputModalityDetector_Factory(t) {\n        return new (t || InputModalityDetector)(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(INPUT_MODALITY_DETECTOR_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: InputModalityDetector,\n        factory: InputModalityDetector.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return InputModalityDetector;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = /*#__PURE__*/new InjectionToken('liveAnnouncerElement', {\n  providedIn: 'root',\n  factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY\n});\n/** @docs-private */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n  return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\nlet uniqueIds = 0;\nlet LiveAnnouncer = /*#__PURE__*/(() => {\n  class LiveAnnouncer {\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n      this._ngZone = _ngZone;\n      this._defaultOptions = _defaultOptions;\n      // We inject the live element and document as `any` because the constructor signature cannot\n      // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n      // a class decorator causes TypeScript to preserve the constructor signature types.\n      this._document = _document;\n      this._liveElement = elementToken || this._createLiveElement();\n    }\n    announce(message, ...args) {\n      const defaultOptions = this._defaultOptions;\n      let politeness;\n      let duration;\n      if (args.length === 1 && typeof args[0] === 'number') {\n        duration = args[0];\n      } else {\n        [politeness, duration] = args;\n      }\n      this.clear();\n      clearTimeout(this._previousTimeout);\n      if (!politeness) {\n        politeness = defaultOptions && defaultOptions.politeness ? defaultOptions.politeness : 'polite';\n      }\n      if (duration == null && defaultOptions) {\n        duration = defaultOptions.duration;\n      }\n      // TODO: ensure changing the politeness works on all environments we support.\n      this._liveElement.setAttribute('aria-live', politeness);\n      if (this._liveElement.id) {\n        this._exposeAnnouncerToModals(this._liveElement.id);\n      }\n      // This 100ms timeout is necessary for some browser + screen-reader combinations:\n      // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n      // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n      //   second time without clearing and then using a non-zero delay.\n      // (using JAWS 17 at time of this writing).\n      return this._ngZone.runOutsideAngular(() => {\n        if (!this._currentPromise) {\n          this._currentPromise = new Promise(resolve => this._currentResolve = resolve);\n        }\n        clearTimeout(this._previousTimeout);\n        this._previousTimeout = setTimeout(() => {\n          this._liveElement.textContent = message;\n          if (typeof duration === 'number') {\n            this._previousTimeout = setTimeout(() => this.clear(), duration);\n          }\n          this._currentResolve();\n          this._currentPromise = this._currentResolve = undefined;\n        }, 100);\n        return this._currentPromise;\n      });\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    clear() {\n      if (this._liveElement) {\n        this._liveElement.textContent = '';\n      }\n    }\n    ngOnDestroy() {\n      clearTimeout(this._previousTimeout);\n      this._liveElement?.remove();\n      this._liveElement = null;\n      this._currentResolve?.();\n      this._currentPromise = this._currentResolve = undefined;\n    }\n    _createLiveElement() {\n      const elementClass = 'cdk-live-announcer-element';\n      const previousElements = this._document.getElementsByClassName(elementClass);\n      const liveEl = this._document.createElement('div');\n      // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n      for (let i = 0; i < previousElements.length; i++) {\n        previousElements[i].remove();\n      }\n      liveEl.classList.add(elementClass);\n      liveEl.classList.add('cdk-visually-hidden');\n      liveEl.setAttribute('aria-atomic', 'true');\n      liveEl.setAttribute('aria-live', 'polite');\n      liveEl.id = `cdk-live-announcer-${uniqueIds++}`;\n      this._document.body.appendChild(liveEl);\n      return liveEl;\n    }\n    /**\n     * Some browsers won't expose the accessibility node of the live announcer element if there is an\n     * `aria-modal` and the live announcer is outside of it. This method works around the issue by\n     * pointing the `aria-owns` of all modals to the live announcer element.\n     */\n    _exposeAnnouncerToModals(id) {\n      // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n      // the `SnakBarContainer` and other usages.\n      //\n      // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n      // section of the DOM we need to look through. This should cover all the cases we support, but\n      // the selector can be expanded if it turns out to be too narrow.\n      const modals = this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal=\"true\"]');\n      for (let i = 0; i < modals.length; i++) {\n        const modal = modals[i];\n        const ariaOwns = modal.getAttribute('aria-owns');\n        if (!ariaOwns) {\n          modal.setAttribute('aria-owns', id);\n        } else if (ariaOwns.indexOf(id) === -1) {\n          modal.setAttribute('aria-owns', ariaOwns + ' ' + id);\n        }\n      }\n    }\n    static {\n      this.ɵfac = function LiveAnnouncer_Factory(t) {\n        return new (t || LiveAnnouncer)(i0.ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: LiveAnnouncer,\n        factory: LiveAnnouncer.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return LiveAnnouncer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nlet CdkAriaLive = /*#__PURE__*/(() => {\n  class CdkAriaLive {\n    /** The aria-live politeness level to use when announcing messages. */\n    get politeness() {\n      return this._politeness;\n    }\n    set politeness(value) {\n      this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n      if (this._politeness === 'off') {\n        if (this._subscription) {\n          this._subscription.unsubscribe();\n          this._subscription = null;\n        }\n      } else if (!this._subscription) {\n        this._subscription = this._ngZone.runOutsideAngular(() => {\n          return this._contentObserver.observe(this._elementRef).subscribe(() => {\n            // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n            const elementText = this._elementRef.nativeElement.textContent;\n            // The `MutationObserver` fires also for attribute\n            // changes which we don't want to announce.\n            if (elementText !== this._previousAnnouncedText) {\n              this._liveAnnouncer.announce(elementText, this._politeness, this.duration);\n              this._previousAnnouncedText = elementText;\n            }\n          });\n        });\n      }\n    }\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n      this._elementRef = _elementRef;\n      this._liveAnnouncer = _liveAnnouncer;\n      this._contentObserver = _contentObserver;\n      this._ngZone = _ngZone;\n      this._politeness = 'polite';\n    }\n    ngOnDestroy() {\n      if (this._subscription) {\n        this._subscription.unsubscribe();\n      }\n    }\n    static {\n      this.ɵfac = function CdkAriaLive_Factory(t) {\n        return new (t || CdkAriaLive)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(LiveAnnouncer), i0.ɵɵdirectiveInject(i1$1.ContentObserver), i0.ɵɵdirectiveInject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkAriaLive,\n        selectors: [[\"\", \"cdkAriaLive\", \"\"]],\n        inputs: {\n          politeness: [\"cdkAriaLive\", \"politeness\"],\n          duration: [\"cdkAriaLiveDuration\", \"duration\"]\n        },\n        exportAs: [\"cdkAriaLive\"]\n      });\n    }\n  }\n  return CdkAriaLive;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nlet FocusMonitor = /*#__PURE__*/(() => {\n  class FocusMonitor {\n    constructor(_ngZone, _platform, _inputModalityDetector, /** @breaking-change 11.0.0 make document required */\n    document, options) {\n      this._ngZone = _ngZone;\n      this._platform = _platform;\n      this._inputModalityDetector = _inputModalityDetector;\n      /** The focus origin that the next focus event is a result of. */\n      this._origin = null;\n      /** Whether the window has just been focused. */\n      this._windowFocused = false;\n      /**\n       * Whether the origin was determined via a touch interaction. Necessary as properly attributing\n       * focus events to touch interactions requires special logic.\n       */\n      this._originFromTouchInteraction = false;\n      /** Map of elements being monitored to their info. */\n      this._elementInfo = new Map();\n      /** The number of elements currently being monitored. */\n      this._monitoredElementCount = 0;\n      /**\n       * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n       * as well as the number of monitored elements that they contain. We have to treat focus/blur\n       * handlers differently from the rest of the events, because the browser won't emit events\n       * to the document when focus moves inside of a shadow root.\n       */\n      this._rootNodeFocusListenerCount = new Map();\n      /**\n       * Event listener for `focus` events on the window.\n       * Needs to be an arrow function in order to preserve the context when it gets bound.\n       */\n      this._windowFocusListener = () => {\n        // Make a note of when the window regains focus, so we can\n        // restore the origin info for the focused element.\n        this._windowFocused = true;\n        this._windowFocusTimeoutId = window.setTimeout(() => this._windowFocused = false);\n      };\n      /** Subject for stopping our InputModalityDetector subscription. */\n      this._stopInputModalityDetector = new Subject();\n      /**\n       * Event listener for `focus` and 'blur' events on the document.\n       * Needs to be an arrow function in order to preserve the context when it gets bound.\n       */\n      this._rootNodeFocusAndBlurListener = event => {\n        const target = _getEventTarget(event);\n        // We need to walk up the ancestor chain in order to support `checkChildren`.\n        for (let element = target; element; element = element.parentElement) {\n          if (event.type === 'focus') {\n            this._onFocus(event, element);\n          } else {\n            this._onBlur(event, element);\n          }\n        }\n      };\n      this._document = document;\n      this._detectionMode = options?.detectionMode || 0 /* FocusMonitorDetectionMode.IMMEDIATE */;\n    }\n\n    monitor(element, checkChildren = false) {\n      const nativeElement = coerceElement(element);\n      // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n      if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n        // Note: we don't want the observable to emit at all so we don't pass any parameters.\n        return of();\n      }\n      // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n      // the shadow root, rather than the `document`, because the browser won't emit focus events\n      // to the `document`, if focus is moving within the same shadow root.\n      const rootNode = _getShadowRoot(nativeElement) || this._getDocument();\n      const cachedInfo = this._elementInfo.get(nativeElement);\n      // Check if we're already monitoring this element.\n      if (cachedInfo) {\n        if (checkChildren) {\n          // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n          // observers into ones that behave as if `checkChildren` was turned on. We need a more\n          // robust solution.\n          cachedInfo.checkChildren = true;\n        }\n        return cachedInfo.subject;\n      }\n      // Create monitored element info.\n      const info = {\n        checkChildren: checkChildren,\n        subject: new Subject(),\n        rootNode\n      };\n      this._elementInfo.set(nativeElement, info);\n      this._registerGlobalListeners(info);\n      return info.subject;\n    }\n    stopMonitoring(element) {\n      const nativeElement = coerceElement(element);\n      const elementInfo = this._elementInfo.get(nativeElement);\n      if (elementInfo) {\n        elementInfo.subject.complete();\n        this._setClasses(nativeElement);\n        this._elementInfo.delete(nativeElement);\n        this._removeGlobalListeners(elementInfo);\n      }\n    }\n    focusVia(element, origin, options) {\n      const nativeElement = coerceElement(element);\n      const focusedElement = this._getDocument().activeElement;\n      // If the element is focused already, calling `focus` again won't trigger the event listener\n      // which means that the focus classes won't be updated. If that's the case, update the classes\n      // directly without waiting for an event.\n      if (nativeElement === focusedElement) {\n        this._getClosestElementsInfo(nativeElement).forEach(([currentElement, info]) => this._originChanged(currentElement, origin, info));\n      } else {\n        this._setOrigin(origin);\n        // `focus` isn't available on the server\n        if (typeof nativeElement.focus === 'function') {\n          nativeElement.focus(options);\n        }\n      }\n    }\n    ngOnDestroy() {\n      this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n      return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n      const doc = this._getDocument();\n      return doc.defaultView || window;\n    }\n    _getFocusOrigin(focusEventTarget) {\n      if (this._origin) {\n        // If the origin was realized via a touch interaction, we need to perform additional checks\n        // to determine whether the focus origin should be attributed to touch or program.\n        if (this._originFromTouchInteraction) {\n          return this._shouldBeAttributedToTouch(focusEventTarget) ? 'touch' : 'program';\n        } else {\n          return this._origin;\n        }\n      }\n      // If the window has just regained focus, we can restore the most recent origin from before the\n      // window blurred. Otherwise, we've reached the point where we can't identify the source of the\n      // focus. This typically means one of two things happened:\n      //\n      // 1) The element was programmatically focused, or\n      // 2) The element was focused via screen reader navigation (which generally doesn't fire\n      //    events).\n      //\n      // Because we can't distinguish between these two cases, we default to setting `program`.\n      if (this._windowFocused && this._lastFocusOrigin) {\n        return this._lastFocusOrigin;\n      }\n      // If the interaction is coming from an input label, we consider it a mouse interactions.\n      // This is a special case where focus moves on `click`, rather than `mousedown` which breaks\n      // our detection, because all our assumptions are for `mousedown`. We need to handle this\n      // special case, because it's very common for checkboxes and radio buttons.\n      if (focusEventTarget && this._isLastInteractionFromInputLabel(focusEventTarget)) {\n        return 'mouse';\n      }\n      return 'program';\n    }\n    /**\n     * Returns whether the focus event should be attributed to touch. Recall that in IMMEDIATE mode, a\n     * touch origin isn't immediately reset at the next tick (see _setOrigin). This means that when we\n     * handle a focus event following a touch interaction, we need to determine whether (1) the focus\n     * event was directly caused by the touch interaction or (2) the focus event was caused by a\n     * subsequent programmatic focus call triggered by the touch interaction.\n     * @param focusEventTarget The target of the focus event under examination.\n     */\n    _shouldBeAttributedToTouch(focusEventTarget) {\n      // Please note that this check is not perfect. Consider the following edge case:\n      //\n      // <div #parent tabindex=\"0\">\n      //   <div #child tabindex=\"0\" (click)=\"#parent.focus()\"></div>\n      // </div>\n      //\n      // Suppose there is a FocusMonitor in IMMEDIATE mode attached to #parent. When the user touches\n      // #child, #parent is programmatically focused. This code will attribute the focus to touch\n      // instead of program. This is a relatively minor edge-case that can be worked around by using\n      // focusVia(parent, 'program') to focus #parent.\n      return this._detectionMode === 1 /* FocusMonitorDetectionMode.EVENTUAL */ || !!focusEventTarget?.contains(this._inputModalityDetector._mostRecentTarget);\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    _setClasses(element, origin) {\n      element.classList.toggle('cdk-focused', !!origin);\n      element.classList.toggle('cdk-touch-focused', origin === 'touch');\n      element.classList.toggle('cdk-keyboard-focused', origin === 'keyboard');\n      element.classList.toggle('cdk-mouse-focused', origin === 'mouse');\n      element.classList.toggle('cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Updates the focus origin. If we're using immediate detection mode, we schedule an async\n     * function to clear the origin at the end of a timeout. The duration of the timeout depends on\n     * the origin being set.\n     * @param origin The origin to set.\n     * @param isFromInteraction Whether we are setting the origin from an interaction event.\n     */\n    _setOrigin(origin, isFromInteraction = false) {\n      this._ngZone.runOutsideAngular(() => {\n        this._origin = origin;\n        this._originFromTouchInteraction = origin === 'touch' && isFromInteraction;\n        // If we're in IMMEDIATE mode, reset the origin at the next tick (or in `TOUCH_BUFFER_MS` ms\n        // for a touch event). We reset the origin at the next tick because Firefox focuses one tick\n        // after the interaction event. We wait `TOUCH_BUFFER_MS` ms before resetting the origin for\n        // a touch event because when a touch event is fired, the associated focus event isn't yet in\n        // the event queue. Before doing so, clear any pending timeouts.\n        if (this._detectionMode === 0 /* FocusMonitorDetectionMode.IMMEDIATE */) {\n          clearTimeout(this._originTimeoutId);\n          const ms = this._originFromTouchInteraction ? TOUCH_BUFFER_MS : 1;\n          this._originTimeoutId = setTimeout(() => this._origin = null, ms);\n        }\n      });\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    _onFocus(event, element) {\n      // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n      // focus event affecting the monitored element. If we want to use the origin of the first event\n      // instead we should check for the cdk-focused class here and return if the element already has\n      // it. (This only matters for elements that have includesChildren = true).\n      // If we are not counting child-element-focus as focused, make sure that the event target is the\n      // monitored element itself.\n      const elementInfo = this._elementInfo.get(element);\n      const focusEventTarget = _getEventTarget(event);\n      if (!elementInfo || !elementInfo.checkChildren && element !== focusEventTarget) {\n        return;\n      }\n      this._originChanged(element, this._getFocusOrigin(focusEventTarget), elementInfo);\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event, element) {\n      // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n      // order to focus another child of the monitored element.\n      const elementInfo = this._elementInfo.get(element);\n      if (!elementInfo || elementInfo.checkChildren && event.relatedTarget instanceof Node && element.contains(event.relatedTarget)) {\n        return;\n      }\n      this._setClasses(element);\n      this._emitOrigin(elementInfo, null);\n    }\n    _emitOrigin(info, origin) {\n      if (info.subject.observers.length) {\n        this._ngZone.run(() => info.subject.next(origin));\n      }\n    }\n    _registerGlobalListeners(elementInfo) {\n      if (!this._platform.isBrowser) {\n        return;\n      }\n      const rootNode = elementInfo.rootNode;\n      const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n      if (!rootNodeFocusListeners) {\n        this._ngZone.runOutsideAngular(() => {\n          rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n          rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n        });\n      }\n      this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n      // Register global listeners when first element is monitored.\n      if (++this._monitoredElementCount === 1) {\n        // Note: we listen to events in the capture phase so we\n        // can detect them even if the user stops propagation.\n        this._ngZone.runOutsideAngular(() => {\n          const window = this._getWindow();\n          window.addEventListener('focus', this._windowFocusListener);\n        });\n        // The InputModalityDetector is also just a collection of global listeners.\n        this._inputModalityDetector.modalityDetected.pipe(takeUntil(this._stopInputModalityDetector)).subscribe(modality => {\n          this._setOrigin(modality, true /* isFromInteraction */);\n        });\n      }\n    }\n\n    _removeGlobalListeners(elementInfo) {\n      const rootNode = elementInfo.rootNode;\n      if (this._rootNodeFocusListenerCount.has(rootNode)) {\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n        if (rootNodeFocusListeners > 1) {\n          this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n        } else {\n          rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n          rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n          this._rootNodeFocusListenerCount.delete(rootNode);\n        }\n      }\n      // Unregister global listeners when last element is unmonitored.\n      if (! --this._monitoredElementCount) {\n        const window = this._getWindow();\n        window.removeEventListener('focus', this._windowFocusListener);\n        // Equivalently, stop our InputModalityDetector subscription.\n        this._stopInputModalityDetector.next();\n        // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n        clearTimeout(this._windowFocusTimeoutId);\n        clearTimeout(this._originTimeoutId);\n      }\n    }\n    /** Updates all the state on an element once its focus origin has changed. */\n    _originChanged(element, origin, elementInfo) {\n      this._setClasses(element, origin);\n      this._emitOrigin(elementInfo, origin);\n      this._lastFocusOrigin = origin;\n    }\n    /**\n     * Collects the `MonitoredElementInfo` of a particular element and\n     * all of its ancestors that have enabled `checkChildren`.\n     * @param element Element from which to start the search.\n     */\n    _getClosestElementsInfo(element) {\n      const results = [];\n      this._elementInfo.forEach((info, currentElement) => {\n        if (currentElement === element || info.checkChildren && currentElement.contains(element)) {\n          results.push([currentElement, info]);\n        }\n      });\n      return results;\n    }\n    /**\n     * Returns whether an interaction is likely to have come from the user clicking the `label` of\n     * an `input` or `textarea` in order to focus it.\n     * @param focusEventTarget Target currently receiving focus.\n     */\n    _isLastInteractionFromInputLabel(focusEventTarget) {\n      const {\n        _mostRecentTarget: mostRecentTarget,\n        mostRecentModality\n      } = this._inputModalityDetector;\n      // If the last interaction used the mouse on an element contained by one of the labels\n      // of an `input`/`textarea` that is currently focused, it is very likely that the\n      // user redirected focus using the label.\n      if (mostRecentModality !== 'mouse' || !mostRecentTarget || mostRecentTarget === focusEventTarget || focusEventTarget.nodeName !== 'INPUT' && focusEventTarget.nodeName !== 'TEXTAREA' || focusEventTarget.disabled) {\n        return false;\n      }\n      const labels = focusEventTarget.labels;\n      if (labels) {\n        for (let i = 0; i < labels.length; i++) {\n          if (labels[i].contains(mostRecentTarget)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n    static {\n      this.ɵfac = function FocusMonitor_Factory(t) {\n        return new (t || FocusMonitor)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.Platform), i0.ɵɵinject(InputModalityDetector), i0.ɵɵinject(DOCUMENT, 8), i0.ɵɵinject(FOCUS_MONITOR_DEFAULT_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: FocusMonitor,\n        factory: FocusMonitor.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return FocusMonitor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nlet CdkMonitorFocus = /*#__PURE__*/(() => {\n  class CdkMonitorFocus {\n    constructor(_elementRef, _focusMonitor) {\n      this._elementRef = _elementRef;\n      this._focusMonitor = _focusMonitor;\n      this._focusOrigin = null;\n      this.cdkFocusChange = new EventEmitter();\n    }\n    get focusOrigin() {\n      return this._focusOrigin;\n    }\n    ngAfterViewInit() {\n      const element = this._elementRef.nativeElement;\n      this._monitorSubscription = this._focusMonitor.monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus')).subscribe(origin => {\n        this._focusOrigin = origin;\n        this.cdkFocusChange.emit(origin);\n      });\n    }\n    ngOnDestroy() {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n      if (this._monitorSubscription) {\n        this._monitorSubscription.unsubscribe();\n      }\n    }\n    static {\n      this.ɵfac = function CdkMonitorFocus_Factory(t) {\n        return new (t || CdkMonitorFocus)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(FocusMonitor));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkMonitorFocus,\n        selectors: [[\"\", \"cdkMonitorElementFocus\", \"\"], [\"\", \"cdkMonitorSubtreeFocus\", \"\"]],\n        outputs: {\n          cdkFocusChange: \"cdkFocusChange\"\n        },\n        exportAs: [\"cdkMonitorFocus\"]\n      });\n    }\n  }\n  return CdkMonitorFocus;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nlet HighContrastModeDetector = /*#__PURE__*/(() => {\n  class HighContrastModeDetector {\n    constructor(_platform, document) {\n      this._platform = _platform;\n      this._document = document;\n      this._breakpointSubscription = inject(BreakpointObserver).observe('(forced-colors: active)').subscribe(() => {\n        if (this._hasCheckedHighContrastMode) {\n          this._hasCheckedHighContrastMode = false;\n          this._applyBodyHighContrastModeCssClasses();\n        }\n      });\n    }\n    /** Gets the current high-contrast-mode for the page. */\n    getHighContrastMode() {\n      if (!this._platform.isBrowser) {\n        return 0 /* HighContrastMode.NONE */;\n      }\n      // Create a test element with an arbitrary background-color that is neither black nor\n      // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n      // appending the test element to the DOM does not affect layout by absolutely positioning it\n      const testElement = this._document.createElement('div');\n      testElement.style.backgroundColor = 'rgb(1,2,3)';\n      testElement.style.position = 'absolute';\n      this._document.body.appendChild(testElement);\n      // Get the computed style for the background color, collapsing spaces to normalize between\n      // browsers. Once we get this color, we no longer need the test element. Access the `window`\n      // via the document so we can fake it in tests. Note that we have extra null checks, because\n      // this logic will likely run during app bootstrap and throwing can break the entire app.\n      const documentWindow = this._document.defaultView || window;\n      const computedStyle = documentWindow && documentWindow.getComputedStyle ? documentWindow.getComputedStyle(testElement) : null;\n      const computedColor = (computedStyle && computedStyle.backgroundColor || '').replace(/ /g, '');\n      testElement.remove();\n      switch (computedColor) {\n        // Pre Windows 11 dark theme.\n        case 'rgb(0,0,0)':\n        // Windows 11 dark themes.\n        case 'rgb(45,50,54)':\n        case 'rgb(32,32,32)':\n          return 2 /* HighContrastMode.WHITE_ON_BLACK */;\n        // Pre Windows 11 light theme.\n        case 'rgb(255,255,255)':\n        // Windows 11 light theme.\n        case 'rgb(255,250,239)':\n          return 1 /* HighContrastMode.BLACK_ON_WHITE */;\n      }\n\n      return 0 /* HighContrastMode.NONE */;\n    }\n\n    ngOnDestroy() {\n      this._breakpointSubscription.unsubscribe();\n    }\n    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n    _applyBodyHighContrastModeCssClasses() {\n      if (!this._hasCheckedHighContrastMode && this._platform.isBrowser && this._document.body) {\n        const bodyClasses = this._document.body.classList;\n        bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n        this._hasCheckedHighContrastMode = true;\n        const mode = this.getHighContrastMode();\n        if (mode === 1 /* HighContrastMode.BLACK_ON_WHITE */) {\n          bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS);\n        } else if (mode === 2 /* HighContrastMode.WHITE_ON_BLACK */) {\n          bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n        }\n      }\n    }\n    static {\n      this.ɵfac = function HighContrastModeDetector_Factory(t) {\n        return new (t || HighContrastModeDetector)(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: HighContrastModeDetector,\n        factory: HighContrastModeDetector.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return HighContrastModeDetector;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet A11yModule = /*#__PURE__*/(() => {\n  class A11yModule {\n    constructor(highContrastModeDetector) {\n      highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n    static {\n      this.ɵfac = function A11yModule_Factory(t) {\n        return new (t || A11yModule)(i0.ɵɵinject(HighContrastModeDetector));\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: A11yModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ObserversModule]\n      });\n    }\n  }\n  return A11yModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusTrap, FocusTrapFactory, HighContrastModeDetector, INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS, INPUT_MODALITY_DETECTOR_OPTIONS, InputModalityDetector, InteractivityChecker, IsFocusableConfig, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, addAriaReferencedId, getAriaReferenceIds, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader, removeAriaReferencedId };\n","import { Version } from '@angular/core';\n\n/** Current version of the Angular Component Development Kit. */\nconst VERSION = /*#__PURE__*/new Version('17.0.2');\nexport { VERSION };\n","import * as i0 from '@angular/core';\nimport { Version, InjectionToken, inject, NgModule, Optional, Inject, LOCALE_ID, Injectable, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, booleanAttribute, EventEmitter, Output, ViewChild, ANIMATION_MODULE_TYPE as ANIMATION_MODULE_TYPE$1, NgZone, ElementRef } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$1 } from '@angular/cdk';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { Platform, _isTestEnvironment, normalizePassiveListenerOptions, _getEventTarget } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Observable, Subject } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/** Current version of Angular Material. */\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nconst _c2 = [\"text\"];\nfunction MatOption_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-pseudo-checkbox\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.disabled)(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\");\n  }\n}\nfunction MatOption_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-pseudo-checkbox\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r2.disabled);\n  }\n}\nfunction MatOption_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"(\", ctx_r3.group.label, \")\");\n  }\n}\nconst _c3 = [[[\"mat-icon\"]], \"*\"];\nconst _c4 = [\"mat-icon\", \"*\"];\nconst VERSION = /*#__PURE__*/new Version('17.0.2');\n\n/** @docs-private */\nlet AnimationCurves = /*#__PURE__*/(() => {\n  class AnimationCurves {\n    static {\n      this.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n    }\n    static {\n      this.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n    }\n    static {\n      this.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n    }\n    static {\n      this.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n    }\n  }\n  return AnimationCurves;\n})();\n/** @docs-private */\nlet AnimationDurations = /*#__PURE__*/(() => {\n  class AnimationDurations {\n    static {\n      this.COMPLEX = '375ms';\n    }\n    static {\n      this.ENTERING = '225ms';\n    }\n    static {\n      this.EXITING = '195ms';\n    }\n  }\n  return AnimationDurations;\n})();\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n  return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = /*#__PURE__*/new InjectionToken('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nlet MatCommonModule = /*#__PURE__*/(() => {\n  class MatCommonModule {\n    constructor(highContrastModeDetector, _sanityChecks, _document) {\n      this._sanityChecks = _sanityChecks;\n      this._document = _document;\n      /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n      this._hasDoneGlobalChecks = false;\n      // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n      // in MatCommonModule.\n      highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n      if (!this._hasDoneGlobalChecks) {\n        this._hasDoneGlobalChecks = true;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          // Inject in here so the reference to `Platform` can be removed in production mode.\n          const platform = inject(Platform, {\n            optional: true\n          });\n          if (this._checkIsEnabled('doctype')) {\n            _checkDoctypeIsDefined(this._document);\n          }\n          if (this._checkIsEnabled('theme')) {\n            _checkThemeIsPresent(this._document, !!platform?.isBrowser);\n          }\n          if (this._checkIsEnabled('version')) {\n            _checkCdkVersionMatch();\n          }\n        }\n      }\n    }\n    /** Gets whether a specific sanity check is enabled. */\n    _checkIsEnabled(name) {\n      if (_isTestEnvironment()) {\n        return false;\n      }\n      if (typeof this._sanityChecks === 'boolean') {\n        return this._sanityChecks;\n      }\n      return !!this._sanityChecks[name];\n    }\n    static {\n      this.ɵfac = function MatCommonModule_Factory(t) {\n        return new (t || MatCommonModule)(i0.ɵɵinject(i1.HighContrastModeDetector), i0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatCommonModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [BidiModule, BidiModule]\n      });\n    }\n  }\n  return MatCommonModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Checks that the page has a doctype. */\nfunction _checkDoctypeIsDefined(doc) {\n  if (!doc.doctype) {\n    console.warn('Current document does not have a doctype. This may cause ' + 'some Angular Material components not to behave as expected.');\n  }\n}\n/** Checks that a theme has been included. */\nfunction _checkThemeIsPresent(doc, isBrowser) {\n  // We need to assert that the `body` is defined, because these checks run very early\n  // and the `body` won't be defined if the consumer put their scripts in the `head`.\n  if (!doc.body || !isBrowser) {\n    return;\n  }\n  const testElement = doc.createElement('div');\n  testElement.classList.add('mat-theme-loaded-marker');\n  doc.body.appendChild(testElement);\n  const computedStyle = getComputedStyle(testElement);\n  // In some situations the computed style of the test element can be null. For example in\n  // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  if (computedStyle && computedStyle.display !== 'none') {\n    console.warn('Could not find Angular Material core theme. Most Material ' + 'components may not work as expected. For more info refer ' + 'to the theming guide: https://material.angular.io/guide/theming');\n  }\n  testElement.remove();\n}\n/** Checks whether the Material version matches the CDK version. */\nfunction _checkCdkVersionMatch() {\n  if (VERSION.full !== VERSION$1.full) {\n    console.warn('The Angular Material version (' + VERSION.full + ') does not match ' + 'the Angular CDK version (' + VERSION$1.full + ').\\n' + 'Please ensure the versions of these two packages exactly match.');\n  }\n}\nfunction mixinDisabled(base) {\n  return class extends base {\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n    constructor(...args) {\n      super(...args);\n      this._disabled = false;\n    }\n  };\n}\nfunction mixinColor(base, defaultColor) {\n  return class extends base {\n    get color() {\n      return this._color;\n    }\n    set color(value) {\n      const colorPalette = value || this.defaultColor;\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n        }\n        if (colorPalette) {\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n        }\n        this._color = colorPalette;\n      }\n    }\n    constructor(...args) {\n      super(...args);\n      this.defaultColor = defaultColor;\n      // Set the default color that can be specified from the mixin.\n      this.color = defaultColor;\n    }\n  };\n}\nfunction mixinDisableRipple(base) {\n  return class extends base {\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n      return this._disableRipple;\n    }\n    set disableRipple(value) {\n      this._disableRipple = coerceBooleanProperty(value);\n    }\n    constructor(...args) {\n      super(...args);\n      this._disableRipple = false;\n    }\n  };\n}\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n  return class extends base {\n    get tabIndex() {\n      return this.disabled ? -1 : this._tabIndex;\n    }\n    set tabIndex(value) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n    }\n    constructor(...args) {\n      super(...args);\n      this._tabIndex = defaultTabIndex;\n      this.defaultTabIndex = defaultTabIndex;\n    }\n  };\n}\nfunction mixinErrorState(base) {\n  return class extends base {\n    /** Updates the error state based on the provided error state matcher. */\n    updateErrorState() {\n      const oldState = this.errorState;\n      const parent = this._parentFormGroup || this._parentForm;\n      const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n      const control = this.ngControl ? this.ngControl.control : null;\n      const newState = matcher.isErrorState(control, parent);\n      if (newState !== oldState) {\n        this.errorState = newState;\n        this.stateChanges.next();\n      }\n    }\n    constructor(...args) {\n      super(...args);\n      /** Whether the component is in an error state. */\n      this.errorState = false;\n    }\n  };\n}\n\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nfunction mixinInitialized(base) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      /** Whether this directive has been marked as initialized. */\n      this._isInitialized = false;\n      /**\n       * List of subscribers that subscribed before the directive was initialized. Should be notified\n       * during _markInitialized. Set to null after pending subscribers are notified, and should\n       * not expect to be populated after.\n       */\n      this._pendingSubscribers = [];\n      /**\n       * Observable stream that emits when the directive initializes. If already initialized, the\n       * subscriber is stored to be notified once _markInitialized is called.\n       */\n      this.initialized = new Observable(subscriber => {\n        // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n        // when _markInitialized is called.\n        if (this._isInitialized) {\n          this._notifySubscriber(subscriber);\n        } else {\n          this._pendingSubscribers.push(subscriber);\n        }\n      });\n    }\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * @docs-private\n     */\n    _markInitialized() {\n      if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('This directive has already been marked as initialized and ' + 'should not be called twice.');\n      }\n      this._isInitialized = true;\n      this._pendingSubscribers.forEach(this._notifySubscriber);\n      this._pendingSubscribers = null;\n    }\n    /** Emits and completes the subscriber stream (should only emit once). */\n    _notifySubscriber(subscriber) {\n      subscriber.next();\n      subscriber.complete();\n    }\n  };\n}\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = /*#__PURE__*/new InjectionToken('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY\n});\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n  return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n  constructor() {\n    this._localeChanges = new Subject();\n    /** A stream that emits when the locale changes. */\n    this.localeChanges = this._localeChanges;\n  }\n  /**\n   * Given a potential date object, returns that same date object if it is\n   * a valid date, or `null` if it's not a valid date.\n   * @param obj The object to check.\n   * @returns A date or `null`.\n   */\n  getValidDateOrNull(obj) {\n    return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n  }\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value) {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  }\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n  setLocale(locale) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first, second) {\n    return this.getYear(first) - this.getYear(second) || this.getMonth(first) - this.getMonth(second) || this.getDate(first) - this.getDate(second);\n  }\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first, second) {\n    if (first && second) {\n      let firstValid = this.isValid(first);\n      let secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date, min, max) {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\nconst MAT_DATE_FORMATS = /*#__PURE__*/new InjectionToken('mat-date-formats');\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nlet NativeDateAdapter = /*#__PURE__*/(() => {\n  class NativeDateAdapter extends DateAdapter {\n    constructor(\n    /**\n     * @deprecated Now injected via inject(), param to be removed.\n     * @breaking-change 18.0.0\n     */\n    matDateLocale) {\n      super();\n      /**\n       * @deprecated No longer being used. To be removed.\n       * @breaking-change 14.0.0\n       */\n      this.useUtcForDisplay = false;\n      /** The injected locale. */\n      this._matDateLocale = inject(MAT_DATE_LOCALE, {\n        optional: true\n      });\n      if (matDateLocale !== undefined) {\n        this._matDateLocale = matDateLocale;\n      }\n      super.setLocale(this._matDateLocale);\n    }\n    getYear(date) {\n      return date.getFullYear();\n    }\n    getMonth(date) {\n      return date.getMonth();\n    }\n    getDate(date) {\n      return date.getDate();\n    }\n    getDayOfWeek(date) {\n      return date.getDay();\n    }\n    getMonthNames(style) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        month: style,\n        timeZone: 'utc'\n      });\n      return range(12, i => this._format(dtf, new Date(2017, i, 1)));\n    }\n    getDateNames() {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        day: 'numeric',\n        timeZone: 'utc'\n      });\n      return range(31, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getDayOfWeekNames(style) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        weekday: style,\n        timeZone: 'utc'\n      });\n      return range(7, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getYearName(date) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        year: 'numeric',\n        timeZone: 'utc'\n      });\n      return this._format(dtf, date);\n    }\n    getFirstDayOfWeek() {\n      // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n      return 0;\n    }\n    getNumDaysInMonth(date) {\n      return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    clone(date) {\n      return new Date(date.getTime());\n    }\n    createDate(year, month, date) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n          throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n          throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n      }\n      let result = this._createDateWithOverflow(year, month, date);\n      // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n      if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n      }\n      return result;\n    }\n    today() {\n      return new Date();\n    }\n    parse(value, parseFormat) {\n      // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n      // parameters.\n      if (typeof value == 'number') {\n        return new Date(value);\n      }\n      return value ? new Date(Date.parse(value)) : null;\n    }\n    format(date, displayFormat) {\n      if (!this.isValid(date)) {\n        throw Error('NativeDateAdapter: Cannot format invalid date.');\n      }\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        ...displayFormat,\n        timeZone: 'utc'\n      });\n      return this._format(dtf, date);\n    }\n    addCalendarYears(date, years) {\n      return this.addCalendarMonths(date, years * 12);\n    }\n    addCalendarMonths(date, months) {\n      let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n      // It's possible to wind up in the wrong month if the original month has more days than the new\n      // month. In this case we want to go to the last day of the desired month.\n      // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n      // guarantee this.\n      if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n        newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n      }\n      return newDate;\n    }\n    addCalendarDays(date, days) {\n      return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    toIso8601(date) {\n      return [date.getUTCFullYear(), this._2digit(date.getUTCMonth() + 1), this._2digit(date.getUTCDate())].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    deserialize(value) {\n      if (typeof value === 'string') {\n        if (!value) {\n          return null;\n        }\n        // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n        // string is the right format first.\n        if (ISO_8601_REGEX.test(value)) {\n          let date = new Date(value);\n          if (this.isValid(date)) {\n            return date;\n          }\n        }\n      }\n      return super.deserialize(value);\n    }\n    isDateInstance(obj) {\n      return obj instanceof Date;\n    }\n    isValid(date) {\n      return !isNaN(date.getTime());\n    }\n    invalid() {\n      return new Date(NaN);\n    }\n    /** Creates a date but allows the month and date to overflow. */\n    _createDateWithOverflow(year, month, date) {\n      // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n      // To work around this we use `setFullYear` and `setHours` instead.\n      const d = new Date();\n      d.setFullYear(year, month, date);\n      d.setHours(0, 0, 0, 0);\n      return d;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param n The number to pad.\n     * @returns The padded number.\n     */\n    _2digit(n) {\n      return ('00' + n).slice(-2);\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param dtf Intl.DateTimeFormat object, containing the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param date Date from which we want to get the string representation according to dtf\n     * @returns A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n      // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n      // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n      const d = new Date();\n      d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n      d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n      return dtf.format(d);\n    }\n    static {\n      this.ɵfac = function NativeDateAdapter_Factory(t) {\n        return new (t || NativeDateAdapter)(i0.ɵɵinject(MAT_DATE_LOCALE, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: NativeDateAdapter,\n        factory: NativeDateAdapter.ɵfac\n      });\n    }\n  }\n  return NativeDateAdapter;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst MAT_NATIVE_DATE_FORMATS = {\n  parse: {\n    dateInput: null\n  },\n  display: {\n    dateInput: {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    },\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'short'\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long'\n    }\n  }\n};\nlet NativeDateModule = /*#__PURE__*/(() => {\n  class NativeDateModule {\n    static {\n      this.ɵfac = function NativeDateModule_Factory(t) {\n        return new (t || NativeDateModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: NativeDateModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [{\n          provide: DateAdapter,\n          useClass: NativeDateAdapter\n        }]\n      });\n    }\n  }\n  return NativeDateModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatNativeDateModule = /*#__PURE__*/(() => {\n  class MatNativeDateModule {\n    static {\n      this.ɵfac = function MatNativeDateModule_Factory(t) {\n        return new (t || MatNativeDateModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatNativeDateModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [{\n          provide: MAT_DATE_FORMATS,\n          useValue: MAT_NATIVE_DATE_FORMATS\n        }],\n        imports: [NativeDateModule]\n      });\n    }\n  }\n  return MatNativeDateModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Error state matcher that matches when a control is invalid and dirty. */\nlet ShowOnDirtyErrorStateMatcher = /*#__PURE__*/(() => {\n  class ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n      return !!(control && control.invalid && (control.dirty || form && form.submitted));\n    }\n    static {\n      this.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) {\n        return new (t || ShowOnDirtyErrorStateMatcher)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: ShowOnDirtyErrorStateMatcher,\n        factory: ShowOnDirtyErrorStateMatcher.ɵfac\n      });\n    }\n  }\n  return ShowOnDirtyErrorStateMatcher;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nlet ErrorStateMatcher = /*#__PURE__*/(() => {\n  class ErrorStateMatcher {\n    isErrorState(control, form) {\n      return !!(control && control.invalid && (control.touched || form && form.submitted));\n    }\n    static {\n      this.ɵfac = function ErrorStateMatcher_Factory(t) {\n        return new (t || ErrorStateMatcher)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: ErrorStateMatcher,\n        factory: ErrorStateMatcher.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ErrorStateMatcher;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nlet MatLine = /*#__PURE__*/(() => {\n  class MatLine {\n    static {\n      this.ɵfac = function MatLine_Factory(t) {\n        return new (t || MatLine)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatLine,\n        selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]],\n        hostAttrs: [1, \"mat-line\"]\n      });\n    }\n  }\n  return MatLine;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith(lines)).subscribe(({\n    length\n  }) => {\n    setClass(element, `${prefix}-2-line`, false);\n    setClass(element, `${prefix}-3-line`, false);\n    setClass(element, `${prefix}-multi-line`, false);\n    if (length === 2 || length === 3) {\n      setClass(element, `${prefix}-${length}-line`, true);\n    } else if (length > 3) {\n      setClass(element, `${prefix}-multi-line`, true);\n    }\n  });\n}\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n  element.nativeElement.classList.toggle(className, isAdd);\n}\nlet MatLineModule = /*#__PURE__*/(() => {\n  class MatLineModule {\n    static {\n      this.ɵfac = function MatLineModule_Factory(t) {\n        return new (t || MatLineModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatLineModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, MatCommonModule]\n      });\n    }\n  }\n  return MatLineModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n  constructor(_renderer, /** Reference to the ripple HTML element. */\n  element, /** Ripple configuration used for the ripple. */\n  config, /* Whether animations are forcibly disabled for ripples through CSS. */\n  _animationForciblyDisabledThroughCss = false) {\n    this._renderer = _renderer;\n    this.element = element;\n    this.config = config;\n    this._animationForciblyDisabledThroughCss = _animationForciblyDisabledThroughCss;\n    /** Current state of the ripple. */\n    this.state = 3 /* RippleState.HIDDEN */;\n  }\n  /** Fades out the ripple element. */\n  fadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions$1 = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n/** Manages events through delegation so that as few event handlers as possible are bound. */\nclass RippleEventManager {\n  constructor() {\n    this._events = new Map();\n    /** Event handler that is bound and which dispatches the events to the different targets. */\n    this._delegateEventHandler = event => {\n      const target = _getEventTarget(event);\n      if (target) {\n        this._events.get(event.type)?.forEach((handlers, element) => {\n          if (element === target || element.contains(target)) {\n            handlers.forEach(handler => handler.handleEvent(event));\n          }\n        });\n      }\n    };\n  }\n  /** Adds an event handler. */\n  addHandler(ngZone, name, element, handler) {\n    const handlersForEvent = this._events.get(name);\n    if (handlersForEvent) {\n      const handlersForElement = handlersForEvent.get(element);\n      if (handlersForElement) {\n        handlersForElement.add(handler);\n      } else {\n        handlersForEvent.set(element, new Set([handler]));\n      }\n    } else {\n      this._events.set(name, new Map([[element, new Set([handler])]]));\n      ngZone.runOutsideAngular(() => {\n        document.addEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n      });\n    }\n  }\n  /** Removes an event handler. */\n  removeHandler(name, element, handler) {\n    const handlersForEvent = this._events.get(name);\n    if (!handlersForEvent) {\n      return;\n    }\n    const handlersForElement = handlersForEvent.get(element);\n    if (!handlersForElement) {\n      return;\n    }\n    handlersForElement.delete(handler);\n    if (handlersForElement.size === 0) {\n      handlersForEvent.delete(element);\n    }\n    if (handlersForEvent.size === 0) {\n      this._events.delete(name);\n      document.removeEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n    }\n  }\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n  enterDuration: 225,\n  exitDuration: 150\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n  static {\n    this._eventManager = /*#__PURE__*/new RippleEventManager();\n  }\n  constructor(_target, _ngZone, elementOrElementRef, _platform) {\n    this._target = _target;\n    this._ngZone = _ngZone;\n    this._platform = _platform;\n    /** Whether the pointer is currently down or not. */\n    this._isPointerDown = false;\n    /**\n     * Map of currently active ripple references.\n     * The ripple reference is mapped to its element event listeners.\n     * The reason why `| null` is used is that event listeners are added only\n     * when the condition is truthy (see the `_startFadeOutTransition` method).\n     */\n    this._activeRipples = new Map();\n    /** Whether pointer-up event listeners have been registered. */\n    this._pointerUpEventsRegistered = false;\n    // Only do anything if we're on the browser.\n    if (_platform.isBrowser) {\n      this._containerElement = coerceElement(elementOrElementRef);\n    }\n  }\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param config Extra ripple options.\n   */\n  fadeInRipple(x, y, config = {}) {\n    const containerRect = this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect();\n    const animationConfig = {\n      ...defaultRippleAnimationConfig,\n      ...config.animation\n    };\n    if (config.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n    const offsetX = x - containerRect.left;\n    const offsetY = y - containerRect.top;\n    const enterDuration = animationConfig.enterDuration;\n    const ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n    // If a custom color has been specified, set it as inline style. If no color is\n    // set, the default color will be applied through the ripple theme styles.\n    if (config.color != null) {\n      ripple.style.backgroundColor = config.color;\n    }\n    ripple.style.transitionDuration = `${enterDuration}ms`;\n    this._containerElement.appendChild(ripple);\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical to ensure that the `scale` animates properly.\n    // We enforce a style recalculation by calling `getComputedStyle` and *accessing* a property.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    const computedStyles = window.getComputedStyle(ripple);\n    const userTransitionProperty = computedStyles.transitionProperty;\n    const userTransitionDuration = computedStyles.transitionDuration;\n    // Note: We detect whether animation is forcibly disabled through CSS (e.g. through\n    // `transition: none` or `display: none`). This is technically unexpected since animations are\n    // controlled through the animation config, but this exists for backwards compatibility. This\n    // logic does not need to be super accurate since it covers some edge cases which can be easily\n    // avoided by users.\n    const animationForciblyDisabledThroughCss = userTransitionProperty === 'none' ||\n    // Note: The canonical unit for serialized CSS `<time>` properties is seconds. Additionally\n    // some browsers expand the duration for every property (in our case `opacity` and `transform`).\n    userTransitionDuration === '0s' || userTransitionDuration === '0s, 0s' ||\n    // If the container is 0x0, it's likely `display: none`.\n    containerRect.width === 0 && containerRect.height === 0;\n    // Exposed reference to the ripple that will be returned.\n    const rippleRef = new RippleRef(this, ripple, config, animationForciblyDisabledThroughCss);\n    // Start the enter animation by setting the transform/scale to 100%. The animation will\n    // execute as part of this statement because we forced a style recalculation before.\n    // Note: We use a 3d transform here in order to avoid an issue in Safari where\n    // the ripples aren't clipped when inside the shadow DOM (see #24028).\n    ripple.style.transform = 'scale3d(1, 1, 1)';\n    rippleRef.state = 0 /* RippleState.FADING_IN */;\n    if (!config.persistent) {\n      this._mostRecentTransientRipple = rippleRef;\n    }\n    let eventListeners = null;\n    // Do not register the `transition` event listener if fade-in and fade-out duration\n    // are set to zero. The events won't fire anyway and we can save resources here.\n    if (!animationForciblyDisabledThroughCss && (enterDuration || animationConfig.exitDuration)) {\n      this._ngZone.runOutsideAngular(() => {\n        const onTransitionEnd = () => this._finishRippleTransition(rippleRef);\n        const onTransitionCancel = () => this._destroyRipple(rippleRef);\n        ripple.addEventListener('transitionend', onTransitionEnd);\n        // If the transition is cancelled (e.g. due to DOM removal), we destroy the ripple\n        // directly as otherwise we would keep it part of the ripple container forever.\n        // https://www.w3.org/TR/css-transitions-1/#:~:text=no%20longer%20in%20the%20document.\n        ripple.addEventListener('transitioncancel', onTransitionCancel);\n        eventListeners = {\n          onTransitionEnd,\n          onTransitionCancel\n        };\n      });\n    }\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.set(rippleRef, eventListeners);\n    // In case there is no fade-in transition duration, we need to manually call the transition\n    // end listener because `transitionend` doesn't fire if there is no transition.\n    if (animationForciblyDisabledThroughCss || !enterDuration) {\n      this._finishRippleTransition(rippleRef);\n    }\n    return rippleRef;\n  }\n  /** Fades out a ripple reference. */\n  fadeOutRipple(rippleRef) {\n    // For ripples already fading out or hidden, this should be a noop.\n    if (rippleRef.state === 2 /* RippleState.FADING_OUT */ || rippleRef.state === 3 /* RippleState.HIDDEN */) {\n      return;\n    }\n    const rippleEl = rippleRef.element;\n    const animationConfig = {\n      ...defaultRippleAnimationConfig,\n      ...rippleRef.config.animation\n    };\n    // This starts the fade-out transition and will fire the transition end listener that\n    // removes the ripple element from the DOM.\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n    rippleEl.style.opacity = '0';\n    rippleRef.state = 2 /* RippleState.FADING_OUT */;\n    // In case there is no fade-out transition duration, we need to manually call the\n    // transition end listener because `transitionend` doesn't fire if there is no transition.\n    if (rippleRef._animationForciblyDisabledThroughCss || !animationConfig.exitDuration) {\n      this._finishRippleTransition(rippleRef);\n    }\n  }\n  /** Fades out all currently active ripples. */\n  fadeOutAll() {\n    this._getActiveRipples().forEach(ripple => ripple.fadeOut());\n  }\n  /** Fades out all currently active non-persistent ripples. */\n  fadeOutAllNonPersistent() {\n    this._getActiveRipples().forEach(ripple => {\n      if (!ripple.config.persistent) {\n        ripple.fadeOut();\n      }\n    });\n  }\n  /** Sets up the trigger event listeners */\n  setupTriggerEvents(elementOrElementRef) {\n    const element = coerceElement(elementOrElementRef);\n    if (!this._platform.isBrowser || !element || element === this._triggerElement) {\n      return;\n    }\n    // Remove all previously registered event listeners from the trigger element.\n    this._removeTriggerEvents();\n    this._triggerElement = element;\n    // Use event delegation for the trigger events since they're\n    // set up during creation and are performance-sensitive.\n    pointerDownEvents.forEach(type => {\n      RippleRenderer._eventManager.addHandler(this._ngZone, type, element, this);\n    });\n  }\n  /**\n   * Handles all registered events.\n   * @docs-private\n   */\n  handleEvent(event) {\n    if (event.type === 'mousedown') {\n      this._onMousedown(event);\n    } else if (event.type === 'touchstart') {\n      this._onTouchStart(event);\n    } else {\n      this._onPointerUp();\n    }\n    // If pointer-up events haven't been registered yet, do so now.\n    // We do this on-demand in order to reduce the total number of event listeners\n    // registered by the ripples, which speeds up the rendering time for large UIs.\n    if (!this._pointerUpEventsRegistered) {\n      // The events for hiding the ripple are bound directly on the trigger, because:\n      // 1. Some of them occur frequently (e.g. `mouseleave`) and any advantage we get from\n      // delegation will be diminished by having to look through all the data structures often.\n      // 2. They aren't as performance-sensitive, because they're bound only after the user\n      // has interacted with an element.\n      this._ngZone.runOutsideAngular(() => {\n        pointerUpEvents.forEach(type => {\n          this._triggerElement.addEventListener(type, this, passiveCapturingEventOptions);\n        });\n      });\n      this._pointerUpEventsRegistered = true;\n    }\n  }\n  /** Method that will be called if the fade-in or fade-in transition completed. */\n  _finishRippleTransition(rippleRef) {\n    if (rippleRef.state === 0 /* RippleState.FADING_IN */) {\n      this._startFadeOutTransition(rippleRef);\n    } else if (rippleRef.state === 2 /* RippleState.FADING_OUT */) {\n      this._destroyRipple(rippleRef);\n    }\n  }\n  /**\n   * Starts the fade-out transition of the given ripple if it's not persistent and the pointer\n   * is not held down anymore.\n   */\n  _startFadeOutTransition(rippleRef) {\n    const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n    const {\n      persistent\n    } = rippleRef.config;\n    rippleRef.state = 1 /* RippleState.VISIBLE */;\n    // When the timer runs out while the user has kept their pointer down, we want to\n    // keep only the persistent ripples and the latest transient ripple. We do this,\n    // because we don't want stacked transient ripples to appear after their enter\n    // animation has finished.\n    if (!persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n      rippleRef.fadeOut();\n    }\n  }\n  /** Destroys the given ripple by removing it from the DOM and updating its state. */\n  _destroyRipple(rippleRef) {\n    const eventListeners = this._activeRipples.get(rippleRef) ?? null;\n    this._activeRipples.delete(rippleRef);\n    // Clear out the cached bounding rect if we have no more ripples.\n    if (!this._activeRipples.size) {\n      this._containerRect = null;\n    }\n    // If the current ref is the most recent transient ripple, unset it\n    // avoid memory leaks.\n    if (rippleRef === this._mostRecentTransientRipple) {\n      this._mostRecentTransientRipple = null;\n    }\n    rippleRef.state = 3 /* RippleState.HIDDEN */;\n    if (eventListeners !== null) {\n      rippleRef.element.removeEventListener('transitionend', eventListeners.onTransitionEnd);\n      rippleRef.element.removeEventListener('transitioncancel', eventListeners.onTransitionCancel);\n    }\n    rippleRef.element.remove();\n  }\n  /** Function being called whenever the trigger is being pressed using mouse. */\n  _onMousedown(event) {\n    // Screen readers will fire fake mouse events for space/enter. Skip launching a\n    // ripple in this case for consistency with the non-screen-reader experience.\n    const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n    const isSyntheticEvent = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n    if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n      this._isPointerDown = true;\n      this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n    }\n  }\n  /** Function being called whenever the trigger is being pressed using touch. */\n  _onTouchStart(event) {\n    if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n      // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n      // events will launch a second ripple if we don't ignore mouse events for a specific\n      // time after a touchstart event.\n      this._lastTouchStartEvent = Date.now();\n      this._isPointerDown = true;\n      // Use `changedTouches` so we skip any touches where the user put\n      // their finger down, but used another finger to tap the element again.\n      const touches = event.changedTouches;\n      // According to the typings the touches should always be defined, but in some cases\n      // the browser appears to not assign them in tests which leads to flakes.\n      if (touches) {\n        for (let i = 0; i < touches.length; i++) {\n          this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n        }\n      }\n    }\n  }\n  /** Function being called whenever the trigger is being released. */\n  _onPointerUp() {\n    if (!this._isPointerDown) {\n      return;\n    }\n    this._isPointerDown = false;\n    // Fade-out all ripples that are visible and not persistent.\n    this._getActiveRipples().forEach(ripple => {\n      // By default, only ripples that are completely visible will fade out on pointer release.\n      // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n      const isVisible = ripple.state === 1 /* RippleState.VISIBLE */ || ripple.config.terminateOnPointerUp && ripple.state === 0 /* RippleState.FADING_IN */;\n      if (!ripple.config.persistent && isVisible) {\n        ripple.fadeOut();\n      }\n    });\n  }\n  _getActiveRipples() {\n    return Array.from(this._activeRipples.keys());\n  }\n  /** Removes previously registered event listeners from the trigger element. */\n  _removeTriggerEvents() {\n    const trigger = this._triggerElement;\n    if (trigger) {\n      pointerDownEvents.forEach(type => RippleRenderer._eventManager.removeHandler(type, trigger, this));\n      if (this._pointerUpEventsRegistered) {\n        pointerUpEvents.forEach(type => trigger.removeEventListener(type, this, passiveCapturingEventOptions));\n      }\n    }\n  }\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = /*#__PURE__*/new InjectionToken('mat-ripple-global-options');\nlet MatRipple = /*#__PURE__*/(() => {\n  class MatRipple {\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      if (value) {\n        this.fadeOutAllNonPersistent();\n      }\n      this._disabled = value;\n      this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() {\n      return this._trigger || this._elementRef.nativeElement;\n    }\n    set trigger(trigger) {\n      this._trigger = trigger;\n      this._setupTriggerEventsIfEnabled();\n    }\n    constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n      this._elementRef = _elementRef;\n      this._animationMode = _animationMode;\n      /**\n       * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n       * will be the distance from the center of the ripple to the furthest corner of the host element's\n       * bounding rectangle.\n       */\n      this.radius = 0;\n      this._disabled = false;\n      /** @docs-private Whether ripple directive is initialized and the input bindings are set. */\n      this._isInitialized = false;\n      this._globalOptions = globalOptions || {};\n      this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    }\n    ngOnInit() {\n      this._isInitialized = true;\n      this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n      this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n      this._rippleRenderer.fadeOutAll();\n    }\n    /** Fades out all currently showing non-persistent ripple elements. */\n    fadeOutAllNonPersistent() {\n      this._rippleRenderer.fadeOutAllNonPersistent();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n      return {\n        centered: this.centered,\n        radius: this.radius,\n        color: this.color,\n        animation: {\n          ...this._globalOptions.animation,\n          ...(this._animationMode === 'NoopAnimations' ? {\n            enterDuration: 0,\n            exitDuration: 0\n          } : {}),\n          ...this.animation\n        },\n        terminateOnPointerUp: this._globalOptions.terminateOnPointerUp\n      };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n      return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n      if (!this.disabled && this._isInitialized) {\n        this._rippleRenderer.setupTriggerEvents(this.trigger);\n      }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n      if (typeof configOrX === 'number') {\n        return this._rippleRenderer.fadeInRipple(configOrX, y, {\n          ...this.rippleConfig,\n          ...config\n        });\n      } else {\n        return this._rippleRenderer.fadeInRipple(0, 0, {\n          ...this.rippleConfig,\n          ...configOrX\n        });\n      }\n    }\n    static {\n      this.ɵfac = function MatRipple_Factory(t) {\n        return new (t || MatRipple)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$1.Platform), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatRipple,\n        selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]],\n        hostAttrs: [1, \"mat-ripple\"],\n        hostVars: 2,\n        hostBindings: function MatRipple_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n          }\n        },\n        inputs: {\n          color: [\"matRippleColor\", \"color\"],\n          unbounded: [\"matRippleUnbounded\", \"unbounded\"],\n          centered: [\"matRippleCentered\", \"centered\"],\n          radius: [\"matRippleRadius\", \"radius\"],\n          animation: [\"matRippleAnimation\", \"animation\"],\n          disabled: [\"matRippleDisabled\", \"disabled\"],\n          trigger: [\"matRippleTrigger\", \"trigger\"]\n        },\n        exportAs: [\"matRipple\"]\n      });\n    }\n  }\n  return MatRipple;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatRippleModule = /*#__PURE__*/(() => {\n  class MatRippleModule {\n    static {\n      this.ɵfac = function MatRippleModule_Factory(t) {\n        return new (t || MatRippleModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatRippleModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, MatCommonModule]\n      });\n    }\n  }\n  return MatRippleModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nlet MatPseudoCheckbox = /*#__PURE__*/(() => {\n  class MatPseudoCheckbox {\n    constructor(_animationMode) {\n      this._animationMode = _animationMode;\n      /** Display state of the checkbox. */\n      this.state = 'unchecked';\n      /** Whether the checkbox is disabled. */\n      this.disabled = false;\n      /**\n       * Appearance of the pseudo checkbox. Default appearance of 'full' renders a checkmark/mixedmark\n       * indicator inside a square box. 'minimal' appearance only renders the checkmark/mixedmark.\n       */\n      this.appearance = 'full';\n    }\n    static {\n      this.ɵfac = function MatPseudoCheckbox_Factory(t) {\n        return new (t || MatPseudoCheckbox)(i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatPseudoCheckbox,\n        selectors: [[\"mat-pseudo-checkbox\"]],\n        hostAttrs: [1, \"mat-pseudo-checkbox\"],\n        hostVars: 12,\n        hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"mat-pseudo-checkbox-minimal\", ctx.appearance === \"minimal\")(\"mat-pseudo-checkbox-full\", ctx.appearance === \"full\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n          }\n        },\n        inputs: {\n          state: \"state\",\n          disabled: \"disabled\",\n          appearance: \"appearance\"\n        },\n        decls: 0,\n        vars: 0,\n        template: function MatPseudoCheckbox_Template(rf, ctx) {},\n        styles: [\".mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-minimal-pseudo-checkbox-selected-checkmark-color)}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color)}.mat-pseudo-checkbox-full{border-color:var(--mat-full-pseudo-checkbox-unselected-icon-color);border-width:2px;border-style:solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled{border-color:var(--mat-full-pseudo-checkbox-disabled-unselected-icon-color)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{background-color:var(--mat-full-pseudo-checkbox-selected-icon-color);border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-full-pseudo-checkbox-selected-checkmark-color)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background-color:var(--mat-full-pseudo-checkbox-disabled-selected-icon-color)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-full-pseudo-checkbox-disabled-selected-checkmark-color)}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatPseudoCheckbox;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatPseudoCheckboxModule = /*#__PURE__*/(() => {\n  class MatPseudoCheckboxModule {\n    static {\n      this.ɵfac = function MatPseudoCheckboxModule_Factory(t) {\n        return new (t || MatPseudoCheckboxModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatPseudoCheckboxModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule]\n      });\n    }\n  }\n  return MatPseudoCheckboxModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = /*#__PURE__*/new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = /*#__PURE__*/new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nlet MatOptgroup = /*#__PURE__*/(() => {\n  class MatOptgroup {\n    constructor(parent) {\n      /** whether the option group is disabled. */\n      this.disabled = false;\n      /** Unique id for the underlying label. */\n      this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n      this._inert = parent?.inertGroups ?? false;\n    }\n    static {\n      this.ɵfac = function MatOptgroup_Factory(t) {\n        return new (t || MatOptgroup)(i0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatOptgroup,\n        selectors: [[\"mat-optgroup\"]],\n        hostAttrs: [1, \"mat-mdc-optgroup\"],\n        hostVars: 3,\n        hostBindings: function MatOptgroup_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"role\", ctx._inert ? null : \"group\")(\"aria-disabled\", ctx._inert ? null : ctx.disabled.toString())(\"aria-labelledby\", ctx._inert ? null : ctx._labelId);\n          }\n        },\n        inputs: {\n          label: \"label\",\n          disabled: [\"disabled\", \"disabled\", booleanAttribute]\n        },\n        exportAs: [\"matOptgroup\"],\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_OPTGROUP,\n          useExisting: MatOptgroup\n        }]), i0.ɵɵInputTransformsFeature],\n        ngContentSelectors: _c1,\n        decls: 5,\n        vars: 4,\n        consts: [[\"role\", \"presentation\", 1, \"mat-mdc-optgroup-label\", 3, \"id\"], [1, \"mdc-list-item__primary-text\"]],\n        template: function MatOptgroup_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c0);\n            i0.ɵɵelementStart(0, \"span\", 0)(1, \"span\", 1);\n            i0.ɵɵtext(2);\n            i0.ɵɵprojection(3);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵprojection(4, 1);\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mdc-list-item--disabled\", ctx.disabled);\n            i0.ɵɵproperty(\"id\", ctx._labelId);\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n          }\n        },\n        styles: [\".mat-mdc-optgroup{color:var(--mat-optgroup-label-text-color);font-family:var(--mat-optgroup-label-text-font);line-height:var(--mat-optgroup-label-text-line-height);font-size:var(--mat-optgroup-label-text-size);letter-spacing:var(--mat-optgroup-label-text-tracking);font-weight:var(--mat-optgroup-label-text-weight)}.mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;min-height:48px}.mat-mdc-optgroup-label:focus{outline:none}[dir=rtl] .mat-mdc-optgroup-label,.mat-mdc-optgroup-label[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;white-space:normal}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatOptgroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n  constructor( /** Reference to the option that emitted the event. */\n  source, /** Whether the change in the option's value was a result of a user action. */\n  isUserInput = false) {\n    this.source = source;\n    this.isUserInput = isUserInput;\n  }\n}\n/**\n * Single option inside of a `<mat-select>` element.\n */\nlet MatOption = /*#__PURE__*/(() => {\n  class MatOption {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n      return this._parent && this._parent.multiple;\n    }\n    /** Whether or not the option is currently selected. */\n    get selected() {\n      return this._selected;\n    }\n    /** Whether the option is disabled. */\n    get disabled() {\n      return this.group && this.group.disabled || this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = value;\n    }\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n      return !!(this._parent && this._parent.disableRipple);\n    }\n    /** Whether to display checkmark for single-selection. */\n    get hideSingleSelectionIndicator() {\n      return !!(this._parent && this._parent.hideSingleSelectionIndicator);\n    }\n    constructor(_element, _changeDetectorRef, _parent, group) {\n      this._element = _element;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._parent = _parent;\n      this.group = group;\n      this._selected = false;\n      this._active = false;\n      this._disabled = false;\n      this._mostRecentViewValue = '';\n      /** The unique ID of the option. */\n      this.id = `mat-option-${_uniqueIdCounter++}`;\n      /** Event emitted when the option is selected or deselected. */\n      // tslint:disable-next-line:no-output-on-prefix\n      this.onSelectionChange = new EventEmitter();\n      /** Emits when the state of the option changes and any parents have to be notified. */\n      this._stateChanges = new Subject();\n    }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active() {\n      return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue() {\n      // TODO(kara): Add input property alternative for node envs.\n      return (this._text?.nativeElement.textContent || '').trim();\n    }\n    /** Selects the option. */\n    select(emitEvent = true) {\n      if (!this._selected) {\n        this._selected = true;\n        this._changeDetectorRef.markForCheck();\n        if (emitEvent) {\n          this._emitSelectionChangeEvent();\n        }\n      }\n    }\n    /** Deselects the option. */\n    deselect(emitEvent = true) {\n      if (this._selected) {\n        this._selected = false;\n        this._changeDetectorRef.markForCheck();\n        if (emitEvent) {\n          this._emitSelectionChangeEvent();\n        }\n      }\n    }\n    /** Sets focus onto this option. */\n    focus(_origin, options) {\n      // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n      // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n      const element = this._getHostElement();\n      if (typeof element.focus === 'function') {\n        element.focus(options);\n      }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles() {\n      if (!this._active) {\n        this._active = true;\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles() {\n      if (this._active) {\n        this._active = false;\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n      return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event) {\n      if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n        this._selectViaInteraction();\n        // Prevent the page from scrolling down and form submits.\n        event.preventDefault();\n      }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction() {\n      if (!this.disabled) {\n        this._selected = this.multiple ? !this._selected : true;\n        this._changeDetectorRef.markForCheck();\n        this._emitSelectionChangeEvent(true);\n      }\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    // This method is only used by `MatLegacyOption`. Keeping it here to avoid breaking the types.\n    // That's because `MatLegacyOption` use `MatOption` type in a few places such as\n    // `MatOptionSelectionChange`. It is safe to delete this when `MatLegacyOption` is deleted.\n    _getTabIndex() {\n      return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n    _getHostElement() {\n      return this._element.nativeElement;\n    }\n    ngAfterViewChecked() {\n      // Since parent components could be using the option's label to display the selected values\n      // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n      // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n      // relatively cheap, however we still limit them only to selected options in order to avoid\n      // hitting the DOM too often.\n      if (this._selected) {\n        const viewValue = this.viewValue;\n        if (viewValue !== this._mostRecentViewValue) {\n          if (this._mostRecentViewValue) {\n            this._stateChanges.next();\n          }\n          this._mostRecentViewValue = viewValue;\n        }\n      }\n    }\n    ngOnDestroy() {\n      this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n    _emitSelectionChangeEvent(isUserInput = false) {\n      this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n    static {\n      this.ɵfac = function MatOption_Factory(t) {\n        return new (t || MatOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), i0.ɵɵdirectiveInject(MAT_OPTGROUP, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatOption,\n        selectors: [[\"mat-option\"]],\n        viewQuery: function MatOption_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c2, 7);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._text = _t.first);\n          }\n        },\n        hostAttrs: [\"role\", \"option\", 1, \"mat-mdc-option\", \"mdc-list-item\"],\n        hostVars: 11,\n        hostBindings: function MatOption_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() {\n              return ctx._selectViaInteraction();\n            })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) {\n              return ctx._handleKeydown($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"id\", ctx.id);\n            i0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled.toString());\n            i0.ɵɵclassProp(\"mdc-list-item--selected\", ctx.selected)(\"mat-mdc-option-multiple\", ctx.multiple)(\"mat-mdc-option-active\", ctx.active)(\"mdc-list-item--disabled\", ctx.disabled);\n          }\n        },\n        inputs: {\n          value: \"value\",\n          id: \"id\",\n          disabled: [\"disabled\", \"disabled\", booleanAttribute]\n        },\n        outputs: {\n          onSelectionChange: \"onSelectionChange\"\n        },\n        exportAs: [\"matOption\"],\n        features: [i0.ɵɵInputTransformsFeature],\n        ngContentSelectors: _c4,\n        decls: 8,\n        vars: 5,\n        consts: [[\"class\", \"mat-mdc-option-pseudo-checkbox\", \"aria-hidden\", \"true\", 3, \"disabled\", \"state\"], [1, \"mdc-list-item__primary-text\"], [\"text\", \"\"], [\"class\", \"mat-mdc-option-pseudo-checkbox\", \"state\", \"checked\", \"aria-hidden\", \"true\", \"appearance\", \"minimal\", 3, \"disabled\"], [\"class\", \"cdk-visually-hidden\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-mdc-option-ripple\", \"mat-mdc-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [\"aria-hidden\", \"true\", 1, \"mat-mdc-option-pseudo-checkbox\", 3, \"disabled\", \"state\"], [\"state\", \"checked\", \"aria-hidden\", \"true\", \"appearance\", \"minimal\", 1, \"mat-mdc-option-pseudo-checkbox\", 3, \"disabled\"], [1, \"cdk-visually-hidden\"]],\n        template: function MatOption_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c3);\n            i0.ɵɵtemplate(0, MatOption_Conditional_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n            i0.ɵɵprojection(1);\n            i0.ɵɵelementStart(2, \"span\", 1, 2);\n            i0.ɵɵprojection(4, 1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(5, MatOption_Conditional_5_Template, 1, 1, \"mat-pseudo-checkbox\", 3)(6, MatOption_Conditional_6_Template, 2, 1, \"span\", 4);\n            i0.ɵɵelement(7, \"div\", 5);\n          }\n          if (rf & 2) {\n            i0.ɵɵconditional(0, ctx.multiple ? 0 : -1);\n            i0.ɵɵadvance(5);\n            i0.ɵɵconditional(5, !ctx.multiple && ctx.selected && !ctx.hideSingleSelectionIndicator ? 5 : -1);\n            i0.ɵɵadvance(1);\n            i0.ɵɵconditional(6, ctx.group && ctx.group._inert ? 6 : -1);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n          }\n        },\n        dependencies: [MatRipple, MatPseudoCheckbox],\n        styles: [\".mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color);font-family:var(--mat-option-label-text-font);line-height:var(--mat-option-label-text-line-height);font-size:var(--mat-option-label-text-size);letter-spacing:var(--mat-option-label-text-tracking);font-weight:var(--mat-option-label-text-weight);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color)}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color)}.mat-mdc-option.mdc-list-item{align-items:center}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-active .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatOption;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n  if (optionGroups.length) {\n    let optionsArray = options.toArray();\n    let groups = optionGroups.toArray();\n    let groupCounter = 0;\n    for (let i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n    return groupCounter;\n  }\n  return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n  return currentScrollPosition;\n}\nlet MatOptionModule = /*#__PURE__*/(() => {\n  class MatOptionModule {\n    static {\n      this.ɵfac = function MatOptionModule_Factory(t) {\n        return new (t || MatOptionModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatOptionModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatRippleModule, MatCommonModule, MatPseudoCheckboxModule]\n      });\n    }\n  }\n  return MatOptionModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** The options for the MatRippleLoader's event listeners. */\nconst eventListenerOptions = {\n  capture: true\n};\n/** The events that should trigger the initialization of the ripple. */\nconst rippleInteractionEvents = ['focus', 'click', 'mouseenter', 'touchstart'];\n/** The attribute attached to a component whose ripple has not yet been initialized. */\nconst matRippleUninitialized = 'mat-ripple-loader-uninitialized';\n/** Additional classes that should be added to the ripple when it is rendered. */\nconst matRippleClassName = 'mat-ripple-loader-class-name';\n/** Whether the ripple should be centered. */\nconst matRippleCentered = 'mat-ripple-loader-centered';\n/** Whether the ripple should be disabled. */\nconst matRippleDisabled = 'mat-ripple-loader-disabled';\n/**\n * Handles attaching ripples on demand.\n *\n * This service allows us to avoid eagerly creating & attaching MatRipples.\n * It works by creating & attaching a ripple only when a component is first interacted with.\n */\nlet MatRippleLoader = /*#__PURE__*/(() => {\n  class MatRippleLoader {\n    constructor() {\n      this._document = inject(DOCUMENT, {\n        optional: true\n      });\n      this._animationMode = inject(ANIMATION_MODULE_TYPE$1, {\n        optional: true\n      });\n      this._globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, {\n        optional: true\n      });\n      this._platform = inject(Platform);\n      this._ngZone = inject(NgZone);\n      /** Handles creating and attaching component internals when a component it is initially interacted with. */\n      this._onInteraction = event => {\n        if (!(event.target instanceof HTMLElement)) {\n          return;\n        }\n        const eventTarget = event.target;\n        // TODO(wagnermaciel): Consider batching these events to improve runtime performance.\n        const element = eventTarget.closest(`[${matRippleUninitialized}]`);\n        if (element) {\n          this.createRipple(element);\n        }\n      };\n      this._ngZone.runOutsideAngular(() => {\n        for (const event of rippleInteractionEvents) {\n          this._document?.addEventListener(event, this._onInteraction, eventListenerOptions);\n        }\n      });\n    }\n    ngOnDestroy() {\n      for (const event of rippleInteractionEvents) {\n        this._document?.removeEventListener(event, this._onInteraction, eventListenerOptions);\n      }\n    }\n    /**\n     * Configures the ripple that will be rendered by the ripple loader.\n     *\n     * Stores the given information about how the ripple should be configured on the host\n     * element so that it can later be retrived & used when the ripple is actually created.\n     */\n    configureRipple(host, config) {\n      // Indicates that the ripple has not yet been rendered for this component.\n      host.setAttribute(matRippleUninitialized, '');\n      // Store the additional class name(s) that should be added to the ripple element.\n      if (config.className || !host.hasAttribute(matRippleClassName)) {\n        host.setAttribute(matRippleClassName, config.className || '');\n      }\n      // Store whether the ripple should be centered.\n      if (config.centered) {\n        host.setAttribute(matRippleCentered, '');\n      }\n      if (config.disabled) {\n        host.setAttribute(matRippleDisabled, '');\n      }\n    }\n    /** Returns the ripple instance for the given host element. */\n    getRipple(host) {\n      if (host.matRipple) {\n        return host.matRipple;\n      }\n      return this.createRipple(host);\n    }\n    /** Sets the disabled state on the ripple instance corresponding to the given host element. */\n    setDisabled(host, disabled) {\n      const ripple = host.matRipple;\n      // If the ripple has already been instantiated, just disable it.\n      if (ripple) {\n        ripple.disabled = disabled;\n        return;\n      }\n      // Otherwise, set an attribute so we know what the\n      // disabled state should be when the ripple is initialized.\n      if (disabled) {\n        host.setAttribute(matRippleDisabled, '');\n      } else {\n        host.removeAttribute(matRippleDisabled);\n      }\n    }\n    /** Creates a MatRipple and appends it to the given element. */\n    createRipple(host) {\n      if (!this._document) {\n        return;\n      }\n      // Create the ripple element.\n      host.querySelector('.mat-ripple')?.remove();\n      const rippleEl = this._document.createElement('span');\n      rippleEl.classList.add('mat-ripple', host.getAttribute(matRippleClassName));\n      host.append(rippleEl);\n      // Create the MatRipple.\n      const ripple = new MatRipple(new ElementRef(rippleEl), this._ngZone, this._platform, this._globalRippleOptions ? this._globalRippleOptions : undefined, this._animationMode ? this._animationMode : undefined);\n      ripple._isInitialized = true;\n      ripple.trigger = host;\n      ripple.centered = host.hasAttribute(matRippleCentered);\n      ripple.disabled = host.hasAttribute(matRippleDisabled);\n      this.attachRipple(host, ripple);\n      return ripple;\n    }\n    attachRipple(host, ripple) {\n      host.removeAttribute(matRippleUninitialized);\n      host.matRipple = ripple;\n    }\n    static {\n      this.ɵfac = function MatRippleLoader_Factory(t) {\n        return new (t || MatRippleLoader)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: MatRippleLoader,\n        factory: MatRippleLoader.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return MatRippleLoader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleLoader, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, ShowOnDirtyErrorStateMatcher, VERSION, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines };\n","import * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollable, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, EventEmitter, Optional, Input, Output, ViewChild, QueryList, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i2 from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i3 from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, distinctUntilChanged, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\nconst _c0 = [\"*\"];\nconst _c1 = [\"content\"];\nfunction MatDrawerContainer_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function MatDrawerContainer_Conditional_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2._onBackdropClicked());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n  }\n}\nfunction MatDrawerContainer_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-drawer-content\");\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c2 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c3 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function MatSidenavContainer_Conditional_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2._onBackdropClicked());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n  }\n}\nfunction MatSidenavContainer_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-sidenav-content\");\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c4 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c5 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst _c6 = \".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);position:relative;z-index:4;color:var(--mat-sidenav-container-text-color);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\";\nconst matDrawerAnimations = {\n  /** Animation that slides a drawer in and out. */\n  transformDrawer: /*#__PURE__*/trigger('transform', [\n  /*#__PURE__*/\n  // We remove the `transform` here completely, rather than setting it to zero, because:\n  // 1. Having a transform can cause elements with ripples or an animated\n  //    transform to shift around in Chrome with an RTL layout (see #10023).\n  // 2. 3d transforms causes text to appear blurry on IE and Edge.\n  state('open, open-instant', /*#__PURE__*/style({\n    'transform': 'none',\n    'visibility': 'visible'\n  })), /*#__PURE__*/state('void', /*#__PURE__*/style({\n    // Avoids the shadow showing up when closed in SSR.\n    'box-shadow': 'none',\n    'visibility': 'hidden'\n  })), /*#__PURE__*/transition('void => open-instant', /*#__PURE__*/animate('0ms')), /*#__PURE__*/transition('void <=> open, open-instant => void', /*#__PURE__*/animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))])\n};\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nfunction throwMatDuplicatedDrawerError(position) {\n  throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = /*#__PURE__*/new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n  providedIn: 'root',\n  factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = /*#__PURE__*/new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n  return false;\n}\nlet MatDrawerContent = /*#__PURE__*/(() => {\n  class MatDrawerContent extends CdkScrollable {\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n      super(elementRef, scrollDispatcher, ngZone);\n      this._changeDetectorRef = _changeDetectorRef;\n      this._container = _container;\n    }\n    ngAfterContentInit() {\n      this._container._contentMarginChanges.subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n    static {\n      this.ɵfac = function MatDrawerContent_Factory(t) {\n        return new (t || MatDrawerContent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(forwardRef(() => MatDrawerContainer)), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ScrollDispatcher), i0.ɵɵdirectiveInject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatDrawerContent,\n        selectors: [[\"mat-drawer-content\"]],\n        hostAttrs: [\"ngSkipHydration\", \"\", 1, \"mat-drawer-content\"],\n        hostVars: 4,\n        hostBindings: function MatDrawerContent_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n          }\n        },\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CdkScrollable,\n          useExisting: MatDrawerContent\n        }]), i0.ɵɵInheritDefinitionFeature],\n        ngContentSelectors: _c0,\n        decls: 1,\n        vars: 0,\n        template: function MatDrawerContent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵprojection(0);\n          }\n        },\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatDrawerContent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nlet MatDrawer = /*#__PURE__*/(() => {\n  class MatDrawer {\n    /** The side that the drawer is attached to. */\n    get position() {\n      return this._position;\n    }\n    set position(value) {\n      // Make sure we have a valid value.\n      value = value === 'end' ? 'end' : 'start';\n      if (value !== this._position) {\n        // Static inputs in Ivy are set before the element is in the DOM.\n        if (this._isAttached) {\n          this._updatePositionInParent(value);\n        }\n        this._position = value;\n        this.onPositionChanged.emit();\n      }\n    }\n    /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n    get mode() {\n      return this._mode;\n    }\n    set mode(value) {\n      this._mode = value;\n      this._updateFocusTrapState();\n      this._modeChanged.next();\n    }\n    /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n    get disableClose() {\n      return this._disableClose;\n    }\n    set disableClose(value) {\n      this._disableClose = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or AutoFocusTarget\n     * instead.\n     */\n    get autoFocus() {\n      const value = this._autoFocus;\n      // Note that usually we don't allow autoFocus to be set to `first-tabbable` in `side` mode,\n      // because we don't know how the sidenav is being used, but in some cases it still makes\n      // sense to do it. The consumer can explicitly set `autoFocus`.\n      if (value == null) {\n        if (this.mode === 'side') {\n          return 'dialog';\n        } else {\n          return 'first-tabbable';\n        }\n      }\n      return value;\n    }\n    set autoFocus(value) {\n      if (value === 'true' || value === 'false' || value == null) {\n        value = coerceBooleanProperty(value);\n      }\n      this._autoFocus = value;\n    }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     */\n    get opened() {\n      return this._opened;\n    }\n    set opened(value) {\n      this.toggle(coerceBooleanProperty(value));\n    }\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _interactivityChecker, _doc, _container) {\n      this._elementRef = _elementRef;\n      this._focusTrapFactory = _focusTrapFactory;\n      this._focusMonitor = _focusMonitor;\n      this._platform = _platform;\n      this._ngZone = _ngZone;\n      this._interactivityChecker = _interactivityChecker;\n      this._doc = _doc;\n      this._container = _container;\n      this._elementFocusedBeforeDrawerWasOpened = null;\n      /** Whether the drawer is initialized. Used for disabling the initial animation. */\n      this._enableAnimations = false;\n      this._position = 'start';\n      this._mode = 'over';\n      this._disableClose = false;\n      this._opened = false;\n      /** Emits whenever the drawer has started animating. */\n      this._animationStarted = new Subject();\n      /** Emits whenever the drawer is done animating. */\n      this._animationEnd = new Subject();\n      /** Current state of the sidenav animation. */\n      this._animationState = 'void';\n      /** Event emitted when the drawer open state is changed. */\n      this.openedChange =\n      // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n      new EventEmitter( /* isAsync */true);\n      /** Event emitted when the drawer has been opened. */\n      this._openedStream = this.openedChange.pipe(filter(o => o), map(() => {}));\n      /** Event emitted when the drawer has started opening. */\n      this.openedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), mapTo(undefined));\n      /** Event emitted when the drawer has been closed. */\n      this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => {}));\n      /** Event emitted when the drawer has started closing. */\n      this.closedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), mapTo(undefined));\n      /** Emits when the component is destroyed. */\n      this._destroyed = new Subject();\n      /** Event emitted when the drawer's position changes. */\n      // tslint:disable-next-line:no-output-on-prefix\n      this.onPositionChanged = new EventEmitter();\n      /**\n       * An observable that emits when the drawer mode changes. This is used by the drawer container to\n       * to know when to when the mode changes so it can adapt the margins on the content.\n       */\n      this._modeChanged = new Subject();\n      this.openedChange.subscribe(opened => {\n        if (opened) {\n          if (this._doc) {\n            this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n          }\n          this._takeFocus();\n        } else if (this._isFocusWithinDrawer()) {\n          this._restoreFocus(this._openedVia || 'program');\n        }\n      });\n      /**\n       * Listen to `keydown` events outside the zone so that change detection is not run every\n       * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n       * and we don't have close disabled.\n       */\n      this._ngZone.runOutsideAngular(() => {\n        fromEvent(this._elementRef.nativeElement, 'keydown').pipe(filter(event => {\n          return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n        }), takeUntil(this._destroyed)).subscribe(event => this._ngZone.run(() => {\n          this.close();\n          event.stopPropagation();\n          event.preventDefault();\n        }));\n      });\n      // We need a Subject with distinctUntilChanged, because the `done` event\n      // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n      this._animationEnd.pipe(distinctUntilChanged((x, y) => {\n        return x.fromState === y.fromState && x.toState === y.toState;\n      })).subscribe(event => {\n        const {\n          fromState,\n          toState\n        } = event;\n        if (toState.indexOf('open') === 0 && fromState === 'void' || toState === 'void' && fromState.indexOf('open') === 0) {\n          this.openedChange.emit(this._opened);\n        }\n      });\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n      if (!this._interactivityChecker.isFocusable(element)) {\n        element.tabIndex = -1;\n        // The tabindex attribute should be removed to avoid navigating to that element again\n        this._ngZone.runOutsideAngular(() => {\n          const callback = () => {\n            element.removeEventListener('blur', callback);\n            element.removeEventListener('mousedown', callback);\n            element.removeAttribute('tabindex');\n          };\n          element.addEventListener('blur', callback);\n          element.addEventListener('mousedown', callback);\n        });\n      }\n      element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n      let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n      if (elementToFocus) {\n        this._forceFocus(elementToFocus, options);\n      }\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     */\n    _takeFocus() {\n      if (!this._focusTrap) {\n        return;\n      }\n      const element = this._elementRef.nativeElement;\n      // When autoFocus is not on the sidenav, if the element cannot be focused or does\n      // not exist, focus the sidenav itself so the keyboard navigation still works.\n      // We need to check that `focus` is a function due to Universal.\n      switch (this.autoFocus) {\n        case false:\n        case 'dialog':\n          return;\n        case true:\n        case 'first-tabbable':\n          this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n              element.focus();\n            }\n          });\n          break;\n        case 'first-heading':\n          this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n          break;\n        default:\n          this._focusByCssSelector(this.autoFocus);\n          break;\n      }\n    }\n    /**\n     * Restores focus to the element that was originally focused when the drawer opened.\n     * If no element was focused at that time, the focus will be restored to the drawer.\n     */\n    _restoreFocus(focusOrigin) {\n      if (this.autoFocus === 'dialog') {\n        return;\n      }\n      if (this._elementFocusedBeforeDrawerWasOpened) {\n        this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, focusOrigin);\n      } else {\n        this._elementRef.nativeElement.blur();\n      }\n      this._elementFocusedBeforeDrawerWasOpened = null;\n    }\n    /** Whether focus is currently within the drawer. */\n    _isFocusWithinDrawer() {\n      const activeEl = this._doc.activeElement;\n      return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n    }\n    ngAfterViewInit() {\n      this._isAttached = true;\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n      this._updateFocusTrapState();\n      // Only update the DOM position when the sidenav is positioned at\n      // the end since we project the sidenav before the content by default.\n      if (this._position === 'end') {\n        this._updatePositionInParent('end');\n      }\n    }\n    ngAfterContentChecked() {\n      // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n      // drawers that are open by default. When we're on the server, we shouldn't enable the\n      // animations, because we don't want the drawer to animate the first time the user sees\n      // the page.\n      if (this._platform.isBrowser) {\n        this._enableAnimations = true;\n      }\n    }\n    ngOnDestroy() {\n      if (this._focusTrap) {\n        this._focusTrap.destroy();\n      }\n      this._anchor?.remove();\n      this._anchor = null;\n      this._animationStarted.complete();\n      this._animationEnd.complete();\n      this._modeChanged.complete();\n      this._destroyed.next();\n      this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    open(openedVia) {\n      return this.toggle(true, openedVia);\n    }\n    /** Close the drawer. */\n    close() {\n      return this.toggle(false);\n    }\n    /** Closes the drawer with context that the backdrop was clicked. */\n    _closeViaBackdropClick() {\n      // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n      // don't need to check whether focus is currently in the drawer, as clicking on the\n      // backdrop causes blurs the active element.\n      return this._setOpen( /* isOpen */false, /* restoreFocus */true, 'mouse');\n    }\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    toggle(isOpen = !this.opened, openedVia) {\n      // If the focus is currently inside the drawer content and we are closing the drawer,\n      // restore the focus to the initially focused element (when the drawer opened).\n      if (isOpen && openedVia) {\n        this._openedVia = openedVia;\n      }\n      const result = this._setOpen(isOpen, /* restoreFocus */!isOpen && this._isFocusWithinDrawer(), this._openedVia || 'program');\n      if (!isOpen) {\n        this._openedVia = null;\n      }\n      return result;\n    }\n    /**\n     * Toggles the opened state of the drawer.\n     * @param isOpen Whether the drawer should open or close.\n     * @param restoreFocus Whether focus should be restored on close.\n     * @param focusOrigin Origin to use when restoring focus.\n     */\n    _setOpen(isOpen, restoreFocus, focusOrigin) {\n      this._opened = isOpen;\n      if (isOpen) {\n        this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n      } else {\n        this._animationState = 'void';\n        if (restoreFocus) {\n          this._restoreFocus(focusOrigin);\n        }\n      }\n      this._updateFocusTrapState();\n      return new Promise(resolve => {\n        this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n      });\n    }\n    _getWidth() {\n      return this._elementRef.nativeElement ? this._elementRef.nativeElement.offsetWidth || 0 : 0;\n    }\n    /** Updates the enabled state of the focus trap. */\n    _updateFocusTrapState() {\n      if (this._focusTrap) {\n        // Trap focus only if the backdrop is enabled. Otherwise, allow end user to interact with the\n        // sidenav content.\n        this._focusTrap.enabled = !!this._container?.hasBackdrop;\n      }\n    }\n    /**\n     * Updates the position of the drawer in the DOM. We need to move the element around ourselves\n     * when it's in the `end` position so that it comes after the content and the visual order\n     * matches the tab order. We also need to be able to move it back to `start` if the sidenav\n     * started off as `end` and was changed to `start`.\n     */\n    _updatePositionInParent(newPosition) {\n      const element = this._elementRef.nativeElement;\n      const parent = element.parentNode;\n      if (newPosition === 'end') {\n        if (!this._anchor) {\n          this._anchor = this._doc.createComment('mat-drawer-anchor');\n          parent.insertBefore(this._anchor, element);\n        }\n        parent.appendChild(element);\n      } else if (this._anchor) {\n        this._anchor.parentNode.insertBefore(element, this._anchor);\n      }\n    }\n    static {\n      this.ɵfac = function MatDrawer_Factory(t) {\n        return new (t || MatDrawer)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.FocusTrapFactory), i0.ɵɵdirectiveInject(i2.FocusMonitor), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.InteractivityChecker), i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatDrawer,\n        selectors: [[\"mat-drawer\"]],\n        viewQuery: function MatDrawer_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c1, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._content = _t.first);\n          }\n        },\n        hostAttrs: [\"tabIndex\", \"-1\", \"ngSkipHydration\", \"\", 1, \"mat-drawer\"],\n        hostVars: 12,\n        hostBindings: function MatDrawer_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵsyntheticHostListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) {\n              return ctx._animationStarted.next($event);\n            })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) {\n              return ctx._animationEnd.next($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"align\", null);\n            i0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n            i0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n          }\n        },\n        inputs: {\n          position: \"position\",\n          mode: \"mode\",\n          disableClose: \"disableClose\",\n          autoFocus: \"autoFocus\",\n          opened: \"opened\"\n        },\n        outputs: {\n          openedChange: \"openedChange\",\n          _openedStream: \"opened\",\n          openedStart: \"openedStart\",\n          _closedStream: \"closed\",\n          closedStart: \"closedStart\",\n          onPositionChanged: \"positionChanged\"\n        },\n        exportAs: [\"matDrawer\"],\n        ngContentSelectors: _c0,\n        decls: 3,\n        vars: 0,\n        consts: [[\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"], [\"content\", \"\"]],\n        template: function MatDrawer_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"div\", 0, 1);\n            i0.ɵɵprojection(2);\n            i0.ɵɵelementEnd();\n          }\n        },\n        dependencies: [i1.CdkScrollable],\n        encapsulation: 2,\n        data: {\n          animation: [matDrawerAnimations.transformDrawer]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return MatDrawer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nlet MatDrawerContainer = /*#__PURE__*/(() => {\n  class MatDrawerContainer {\n    /** The drawer child with the `start` position. */\n    get start() {\n      return this._start;\n    }\n    /** The drawer child with the `end` position. */\n    get end() {\n      return this._end;\n    }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     */\n    get autosize() {\n      return this._autosize;\n    }\n    set autosize(value) {\n      this._autosize = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     */\n    get hasBackdrop() {\n      return this._drawerHasBackdrop(this._start) || this._drawerHasBackdrop(this._end);\n    }\n    set hasBackdrop(value) {\n      this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n    get scrollable() {\n      return this._userContent || this._content;\n    }\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n      this._dir = _dir;\n      this._element = _element;\n      this._ngZone = _ngZone;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._animationMode = _animationMode;\n      /** Drawers that belong to this container. */\n      this._drawers = new QueryList();\n      /** Event emitted when the drawer backdrop is clicked. */\n      this.backdropClick = new EventEmitter();\n      /** Emits when the component is destroyed. */\n      this._destroyed = new Subject();\n      /** Emits on every ngDoCheck. Used for debouncing reflows. */\n      this._doCheckSubject = new Subject();\n      /**\n       * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n       * drawer is open. We use margin rather than transform even for push mode because transform breaks\n       * fixed position elements inside of the transformed element.\n       */\n      this._contentMargins = {\n        left: null,\n        right: null\n      };\n      this._contentMarginChanges = new Subject();\n      // If a `Dir` directive exists up the tree, listen direction changes\n      // and update the left/right properties to point to the proper start/end.\n      if (_dir) {\n        _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n          this._validateDrawers();\n          this.updateContentMargins();\n        });\n      }\n      // Since the minimum width of the sidenav depends on the viewport width,\n      // we need to recompute the margins if the viewport changes.\n      viewportRuler.change().pipe(takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n      this._autosize = defaultAutosize;\n    }\n    ngAfterContentInit() {\n      this._allDrawers.changes.pipe(startWith(this._allDrawers), takeUntil(this._destroyed)).subscribe(drawer => {\n        this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n        this._drawers.notifyOnChanges();\n      });\n      this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n        this._validateDrawers();\n        this._drawers.forEach(drawer => {\n          this._watchDrawerToggle(drawer);\n          this._watchDrawerPosition(drawer);\n          this._watchDrawerMode(drawer);\n        });\n        if (!this._drawers.length || this._isDrawerOpen(this._start) || this._isDrawerOpen(this._end)) {\n          this.updateContentMargins();\n        }\n        this._changeDetectorRef.markForCheck();\n      });\n      // Avoid hitting the NgZone through the debounce timeout.\n      this._ngZone.runOutsideAngular(() => {\n        this._doCheckSubject.pipe(debounceTime(10),\n        // Arbitrary debounce time, less than a frame at 60fps\n        takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n      });\n    }\n    ngOnDestroy() {\n      this._contentMarginChanges.complete();\n      this._doCheckSubject.complete();\n      this._drawers.destroy();\n      this._destroyed.next();\n      this._destroyed.complete();\n    }\n    /** Calls `open` of both start and end drawers */\n    open() {\n      this._drawers.forEach(drawer => drawer.open());\n    }\n    /** Calls `close` of both start and end drawers */\n    close() {\n      this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     */\n    updateContentMargins() {\n      // 1. For drawers in `over` mode, they don't affect the content.\n      // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n      //    left margin (for left drawer) or right margin (for right the drawer).\n      // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n      //    adding to the left or right margin and simultaneously subtracting the same amount of\n      //    margin from the other side.\n      let left = 0;\n      let right = 0;\n      if (this._left && this._left.opened) {\n        if (this._left.mode == 'side') {\n          left += this._left._getWidth();\n        } else if (this._left.mode == 'push') {\n          const width = this._left._getWidth();\n          left += width;\n          right -= width;\n        }\n      }\n      if (this._right && this._right.opened) {\n        if (this._right.mode == 'side') {\n          right += this._right._getWidth();\n        } else if (this._right.mode == 'push') {\n          const width = this._right._getWidth();\n          right += width;\n          left -= width;\n        }\n      }\n      // If either `right` or `left` is zero, don't set a style to the element. This\n      // allows users to specify a custom size via CSS class in SSR scenarios where the\n      // measured widths will always be zero. Note that we reset to `null` here, rather\n      // than below, in order to ensure that the types in the `if` below are consistent.\n      left = left || null;\n      right = right || null;\n      if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n        this._contentMargins = {\n          left,\n          right\n        };\n        // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n        // to do it only when something changed, otherwise we can end up hitting the zone too often.\n        this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n      }\n    }\n    ngDoCheck() {\n      // If users opted into autosizing, do a check every change detection cycle.\n      if (this._autosize && this._isPushed()) {\n        // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n      }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     */\n    _watchDrawerToggle(drawer) {\n      drawer._animationStarted.pipe(filter(event => event.fromState !== event.toState), takeUntil(this._drawers.changes)).subscribe(event => {\n        // Set the transition class on the container so that the animations occur. This should not\n        // be set initially because animations should only be triggered via a change in state.\n        if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n          this._element.nativeElement.classList.add('mat-drawer-transition');\n        }\n        this.updateContentMargins();\n        this._changeDetectorRef.markForCheck();\n      });\n      if (drawer.mode !== 'side') {\n        drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() => this._setContainerClass(drawer.opened));\n      }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     */\n    _watchDrawerPosition(drawer) {\n      if (!drawer) {\n        return;\n      }\n      // NOTE: We need to wait for the microtask queue to be empty before validating,\n      // since both drawers may be swapping positions at the same time.\n      drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n        this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n          this._validateDrawers();\n        });\n      });\n    }\n    /** Subscribes to changes in drawer mode so we can run change detection. */\n    _watchDrawerMode(drawer) {\n      if (drawer) {\n        drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed))).subscribe(() => {\n          this.updateContentMargins();\n          this._changeDetectorRef.markForCheck();\n        });\n      }\n    }\n    /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n    _setContainerClass(isAdd) {\n      const classList = this._element.nativeElement.classList;\n      const className = 'mat-drawer-container-has-open';\n      if (isAdd) {\n        classList.add(className);\n      } else {\n        classList.remove(className);\n      }\n    }\n    /** Validate the state of the drawer children components. */\n    _validateDrawers() {\n      this._start = this._end = null;\n      // Ensure that we have at most one start and one end drawer.\n      this._drawers.forEach(drawer => {\n        if (drawer.position == 'end') {\n          if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDuplicatedDrawerError('end');\n          }\n          this._end = drawer;\n        } else {\n          if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDuplicatedDrawerError('start');\n          }\n          this._start = drawer;\n        }\n      });\n      this._right = this._left = null;\n      // Detect if we're LTR or RTL.\n      if (this._dir && this._dir.value === 'rtl') {\n        this._left = this._end;\n        this._right = this._start;\n      } else {\n        this._left = this._start;\n        this._right = this._end;\n      }\n    }\n    /** Whether the container is being pushed to the side by one of the drawers. */\n    _isPushed() {\n      return this._isDrawerOpen(this._start) && this._start.mode != 'over' || this._isDrawerOpen(this._end) && this._end.mode != 'over';\n    }\n    _onBackdropClicked() {\n      this.backdropClick.emit();\n      this._closeModalDrawersViaBackdrop();\n    }\n    _closeModalDrawersViaBackdrop() {\n      // Close all open drawers where closing is not disabled and the mode is not `side`.\n      [this._start, this._end].filter(drawer => drawer && !drawer.disableClose && this._drawerHasBackdrop(drawer)).forEach(drawer => drawer._closeViaBackdropClick());\n    }\n    _isShowingBackdrop() {\n      return this._isDrawerOpen(this._start) && this._drawerHasBackdrop(this._start) || this._isDrawerOpen(this._end) && this._drawerHasBackdrop(this._end);\n    }\n    _isDrawerOpen(drawer) {\n      return drawer != null && drawer.opened;\n    }\n    // Whether argument drawer should have a backdrop when it opens\n    _drawerHasBackdrop(drawer) {\n      if (this._backdropOverride == null) {\n        return !!drawer && drawer.mode !== 'side';\n      }\n      return this._backdropOverride;\n    }\n    static {\n      this.ɵfac = function MatDrawerContainer_Factory(t) {\n        return new (t || MatDrawerContainer)(i0.ɵɵdirectiveInject(i4.Directionality, 8), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ViewportRuler), i0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatDrawerContainer,\n        selectors: [[\"mat-drawer-container\"]],\n        contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatDrawerContent, 5);\n            i0.ɵɵcontentQuery(dirIndex, MatDrawer, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._content = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n          }\n        },\n        viewQuery: function MatDrawerContainer_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(MatDrawerContent, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n          }\n        },\n        hostAttrs: [\"ngSkipHydration\", \"\", 1, \"mat-drawer-container\"],\n        hostVars: 2,\n        hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n          }\n        },\n        inputs: {\n          autosize: \"autosize\",\n          hasBackdrop: \"hasBackdrop\"\n        },\n        outputs: {\n          backdropClick: \"backdropClick\"\n        },\n        exportAs: [\"matDrawerContainer\"],\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_DRAWER_CONTAINER,\n          useExisting: MatDrawerContainer\n        }])],\n        ngContentSelectors: _c3,\n        decls: 4,\n        vars: 2,\n        consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]],\n        template: function MatDrawerContainer_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c2);\n            i0.ɵɵtemplate(0, MatDrawerContainer_Conditional_0_Template, 1, 2, \"div\", 0);\n            i0.ɵɵprojection(1);\n            i0.ɵɵprojection(2, 1);\n            i0.ɵɵtemplate(3, MatDrawerContainer_Conditional_3_Template, 2, 0, \"mat-drawer-content\");\n          }\n          if (rf & 2) {\n            i0.ɵɵconditional(0, ctx.hasBackdrop ? 0 : -1);\n            i0.ɵɵadvance(3);\n            i0.ɵɵconditional(3, !ctx._content ? 3 : -1);\n          }\n        },\n        dependencies: [MatDrawerContent],\n        styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);position:relative;z-index:4;color:var(--mat-sidenav-container-text-color);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatDrawerContainer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatSidenavContent = /*#__PURE__*/(() => {\n  class MatSidenavContent extends MatDrawerContent {\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n      super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n    static {\n      this.ɵfac = function MatSidenavContent_Factory(t) {\n        return new (t || MatSidenavContent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(forwardRef(() => MatSidenavContainer)), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ScrollDispatcher), i0.ɵɵdirectiveInject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatSidenavContent,\n        selectors: [[\"mat-sidenav-content\"]],\n        hostAttrs: [\"ngSkipHydration\", \"\", 1, \"mat-drawer-content\", \"mat-sidenav-content\"],\n        hostVars: 4,\n        hostBindings: function MatSidenavContent_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n          }\n        },\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CdkScrollable,\n          useExisting: MatSidenavContent\n        }]), i0.ɵɵInheritDefinitionFeature],\n        ngContentSelectors: _c0,\n        decls: 1,\n        vars: 0,\n        template: function MatSidenavContent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵprojection(0);\n          }\n        },\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatSidenavContent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatSidenav = /*#__PURE__*/(() => {\n  class MatSidenav extends MatDrawer {\n    constructor() {\n      super(...arguments);\n      this._fixedInViewport = false;\n      this._fixedTopGap = 0;\n      this._fixedBottomGap = 0;\n    }\n    /** Whether the sidenav is fixed in the viewport. */\n    get fixedInViewport() {\n      return this._fixedInViewport;\n    }\n    set fixedInViewport(value) {\n      this._fixedInViewport = coerceBooleanProperty(value);\n    }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     */\n    get fixedTopGap() {\n      return this._fixedTopGap;\n    }\n    set fixedTopGap(value) {\n      this._fixedTopGap = coerceNumberProperty(value);\n    }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     */\n    get fixedBottomGap() {\n      return this._fixedBottomGap;\n    }\n    set fixedBottomGap(value) {\n      this._fixedBottomGap = coerceNumberProperty(value);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatSidenav_BaseFactory;\n        return function MatSidenav_Factory(t) {\n          return (ɵMatSidenav_BaseFactory || (ɵMatSidenav_BaseFactory = i0.ɵɵgetInheritedFactory(MatSidenav)))(t || MatSidenav);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatSidenav,\n        selectors: [[\"mat-sidenav\"]],\n        hostAttrs: [\"tabIndex\", \"-1\", \"ngSkipHydration\", \"\", 1, \"mat-drawer\", \"mat-sidenav\"],\n        hostVars: 17,\n        hostBindings: function MatSidenav_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"align\", null);\n            i0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n            i0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n          }\n        },\n        inputs: {\n          fixedInViewport: \"fixedInViewport\",\n          fixedTopGap: \"fixedTopGap\",\n          fixedBottomGap: \"fixedBottomGap\"\n        },\n        exportAs: [\"matSidenav\"],\n        features: [i0.ɵɵInheritDefinitionFeature],\n        ngContentSelectors: _c0,\n        decls: 3,\n        vars: 0,\n        consts: [[\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"], [\"content\", \"\"]],\n        template: function MatSidenav_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"div\", 0, 1);\n            i0.ɵɵprojection(2);\n            i0.ɵɵelementEnd();\n          }\n        },\n        dependencies: [i1.CdkScrollable],\n        encapsulation: 2,\n        data: {\n          animation: [matDrawerAnimations.transformDrawer]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return MatSidenav;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatSidenavContainer = /*#__PURE__*/(() => {\n  class MatSidenavContainer extends MatDrawerContainer {\n    constructor() {\n      super(...arguments);\n      this._allDrawers = undefined;\n      // We need an initializer here to avoid a TS error.\n      this._content = undefined;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatSidenavContainer_BaseFactory;\n        return function MatSidenavContainer_Factory(t) {\n          return (ɵMatSidenavContainer_BaseFactory || (ɵMatSidenavContainer_BaseFactory = i0.ɵɵgetInheritedFactory(MatSidenavContainer)))(t || MatSidenavContainer);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatSidenavContainer,\n        selectors: [[\"mat-sidenav-container\"]],\n        contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatSidenavContent, 5);\n            i0.ɵɵcontentQuery(dirIndex, MatSidenav, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._content = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n          }\n        },\n        hostAttrs: [\"ngSkipHydration\", \"\", 1, \"mat-drawer-container\", \"mat-sidenav-container\"],\n        hostVars: 2,\n        hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n          }\n        },\n        exportAs: [\"matSidenavContainer\"],\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_DRAWER_CONTAINER,\n          useExisting: MatSidenavContainer\n        }]), i0.ɵɵInheritDefinitionFeature],\n        ngContentSelectors: _c5,\n        decls: 4,\n        vars: 2,\n        consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]],\n        template: function MatSidenavContainer_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c4);\n            i0.ɵɵtemplate(0, MatSidenavContainer_Conditional_0_Template, 1, 2, \"div\", 0);\n            i0.ɵɵprojection(1);\n            i0.ɵɵprojection(2, 1);\n            i0.ɵɵtemplate(3, MatSidenavContainer_Conditional_3_Template, 2, 0, \"mat-sidenav-content\");\n          }\n          if (rf & 2) {\n            i0.ɵɵconditional(0, ctx.hasBackdrop ? 0 : -1);\n            i0.ɵɵadvance(3);\n            i0.ɵɵconditional(3, !ctx._content ? 3 : -1);\n          }\n        },\n        dependencies: [MatSidenavContent],\n        styles: [_c6],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatSidenavContainer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatSidenavModule = /*#__PURE__*/(() => {\n  class MatSidenavModule {\n    static {\n      this.ɵfac = function MatSidenavModule_Factory(t) {\n        return new (t || MatSidenavModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatSidenavModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, CdkScrollableModule, CdkScrollableModule, MatCommonModule]\n      });\n    }\n  }\n  return MatSidenavModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError };\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AuthRoutingModule } from './auth/auth.routing';\r\nimport { PagesRoutingModule } from './pages/pages.routing';\r\n\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\n\r\nconst routes: Routes = [\r\n  // login y recovery authroutingmodules\r\n  // dashboard pagesroutingmodules\r\n  { path: '**', redirectTo: 'inicio'},\r\n];\r\n\r\n@NgModule({\r\n  imports: \r\n  [RouterModule.forRoot(routes),\r\n  AuthRoutingModule,\r\n  PagesRoutingModule,\r\n  MatSidenavModule],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.css'\r\n})\r\nexport class AppComponent {\r\n  title = 'Blooming';\r\n}\r\n","<router-outlet></router-outlet> \r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule, provideClientHydration } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from '../app.component';\r\nimport { SidebarCentroComponent } from './sidebar-centro/sidebar-centro.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AppRoutingModule } from '../app-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SidebarCentroComponent,\r\n    SidebarComponent,\r\n    NavbarComponent,\r\n    FooterComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AppRoutingModule\r\n  ],\r\n  exports:[\r\n    SidebarCentroComponent,\r\n    SidebarComponent,\r\n    NavbarComponent,\r\n    FooterComponent\r\n  ]\r\n})\r\nexport class CommonsModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SidebarComponent } from '../commons/sidebar/sidebar.component';\r\nimport { NavbarComponent } from '../commons/navbar/navbar.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { UsuariosComponent } from './usuarios/usuarios.component';\r\n\r\nimport { SidebarCentroComponent } from '../commons/sidebar-centro/sidebar-centro.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { AdminLayoutComponent } from '../layouts/admin-layout/admin-layout.component';\r\n\r\nimport { CommonsModule } from '../commons/commons.module';\r\n\r\n//CENTROS\r\nimport { VerProfesoresCComponent } from './centros/ver-profesores-c/ver-profesores-c.component';\r\nimport { VerClasesCComponent } from './centros/ver-clases-c/ver-clases-c.component';\r\nimport { VerAlumnosCComponent } from './centros/ver-alumnos-c/ver-alumnos-c.component';\r\nimport { CrearAlumnosCComponent } from './centros/crear-alumnos-c/crear-alumnos-c.component';\r\nimport { CrearClasesCComponent } from './centros/crear-clases-c/crear-clases-c.component';\r\nimport { CrearProfesoresCComponent } from './centros/crear-profesores-c/crear-profesores-c.component';\r\n\r\n//ADMIN\r\nimport { AdmindashboardComponent } from './admin/admindashboard/admindashboard.component';\r\nimport { VerProfesoresComponent } from './admin/ver-profesores/ver-profesores.component';\r\nimport { CrearProfesoresComponent } from './admin/crear-profesores/crear-profesores.component';\r\nimport { EditarProfesoresComponent } from './admin/editar-profesores/editar-profesores.component';\r\nimport { VerAlumnosComponent } from './admin/ver-alumnos/ver-alumnos.component';\r\nimport { CrearAlumnosComponent } from './admin/crear-alumnos/crear-alumnos.component';\r\nimport { EditarAlumnosComponent } from './admin/editar-alumnos/editar-alumnos.component';\r\nimport { VerClasesComponent } from './admin/ver-clases/ver-clases.component';\r\nimport { CrearClasesComponent } from './admin/crear-clases/crear-clases.component';\r\nimport { EditarClasesComponent } from './admin/editar-clases/editar-clases.component';\r\nimport { VerCentrosComponent } from './admin/ver-centros/ver-centros.component';\r\nimport { CrearCentrosComponent } from './admin/crear-centros/crear-centros.component';\r\nimport { EditarCentrosComponent } from './admin/editar-centros/editar-centros.component';\r\n\r\n//PROFESORES\r\nimport { ProfesoresComponent } from './profesores/profesores.component';\r\nimport { VerClasesPComponent } from './profesores/ver-clases-p/ver-clases-p.component';\r\nimport { VerAlumnosPComponent } from './profesores/ver-alumnos-p/ver-alumnos-p.component';\r\nimport { VerPerfilAlumnoComponent } from './profesores/ver-perfil-alumno/ver-perfil-alumno.component';\r\nimport { ActividadRecienteComponent } from './profesores/actividad-reciente/actividad-reciente.component';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { EditarAlumnosCComponent } from './centros/editar-alumnos-c/editar-alumnos-c.component';\r\nimport { EditarProfesoresCComponent } from './centros/editar-profesores-c/editar-profesores-c.component';\r\nimport { EditarClasesCComponent } from './centros/editar-clases-c/editar-clases-c.component';\r\nimport { AlumnoLayoutComponent } from '../layouts/alumno-layout/alumno-layout.component';\r\nimport { AlumnosComponent } from './alumnos/alumnos.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    /*SidebarComponent,\r\n    SidebarCentroComponent,\r\n    NavbarComponent,\r\n    DashboardComponent,\r\n    UsuariosComponent,\r\n    CentrosVistaComponent,\r\n    AdminComponent*/\r\n    AdminLayoutComponent,\r\n    AlumnoLayoutComponent,\r\n    AdmindashboardComponent,\r\n      VerProfesoresCComponent,\r\n      VerClasesCComponent,\r\n      VerAlumnosCComponent,\r\n      CrearAlumnosCComponent,\r\n      CrearClasesCComponent,\r\n      CrearProfesoresCComponent,\r\n      EditarAlumnosComponent,\r\n      EditarClasesComponent,\r\n      EditarProfesoresComponent,\r\n      EditarCentrosComponent,\r\n      ProfesoresComponent,\r\n      VerClasesPComponent,\r\n      VerAlumnosPComponent,\r\n      VerPerfilAlumnoComponent,\r\n      ActividadRecienteComponent,\r\n      CrearProfesoresComponent,\r\n      CrearClasesComponent,\r\n      CrearAlumnosComponent,\r\n      CrearCentrosComponent,\r\n      VerProfesoresComponent,\r\n      VerAlumnosComponent,\r\n      VerClasesComponent,\r\n      VerCentrosComponent,\r\n      EditarAlumnosCComponent,\r\n      EditarProfesoresCComponent,\r\n      EditarClasesCComponent,\r\n      AlumnosComponent\r\n  ],\r\n  exports: [\r\n    AdminLayoutComponent,\r\n    AlumnoLayoutComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    CommonsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class PagesModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RecoveryComponent } from './recovery/recovery.component';\r\nimport { AuthLayoutComponent } from '../layouts/auth-layout/auth-layout.component';\r\nimport { RegistroComponent } from './registro/registro.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { InicioComponent } from './inicio/inicio.component';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n      LoginComponent,\r\n      RecoveryComponent,\r\n      AuthLayoutComponent,\r\n      RegistroComponent,\r\n      InicioComponent\r\n    ],\r\n    exports: [\r\n        AuthLayoutComponent,\r\n        LoginComponent,\r\n        RecoveryComponent,\r\n        RegistroComponent\r\n    ],\r\n    imports: [\r\n      CommonModule,\r\n      RouterModule,\r\n      FormsModule,\r\n      ReactiveFormsModule,\r\n      HttpClientModule\r\n    ]\r\n  })\r\n  export class AuthModule { }\r\n  \r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule, provideClientHydration } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { FooterComponent } from './commons/footer/footer.component';\r\nimport { PagesModule } from './pages/pages.module';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { CommonsModule } from './commons/commons.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    /*FooterComponent,\r\n    CentrosComponent,\r\n    CrearCentrosComponent,\r\n    ProfesoresComponent,\r\n    AlumnosComponent,\r\n    ClasesComponent,\r\n    CrearAlumnosComponent,\r\n    CrearClasesComponent,\r\n    CrearProfesoresComponent*/\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    PagesModule,\r\n    AuthModule,\r\n    BrowserAnimationsModule,\r\n    CommonModule,\r\n    CommonsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [\r\n    provideClientHydration()\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { ServerModule } from '@angular/platform-server';\r\n\r\nimport { AppModule } from './app.module';\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    AppModule,\r\n    ServerModule,\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppServerModule {}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAIA,KAAC,SAAU,QAAQ,SAAS;AAC1B,aAAO,YAAY,YAAY,OAAO,WAAW,cAAc,OAAO,UAAU,QAAQ,IAAI,OAAO,WAAW,cAAc,OAAO,MAAM,OAAO,OAAO,KAAK,SAAS,OAAO,eAAe,cAAc,aAAa,UAAU,MAAM,OAAO,cAAc,QAAQ;AAAA,IACrQ,GAAG,SAAM,WAAY;AACnB;AAEA,eAAS,sBAAsB,GAAG,GAAG;AACnC,YAAI,IAAI,QAAQ,IAAI,OAAO,eAAe,OAAO,UAAU,EAAE,OAAO,QAAQ,KAAK,EAAE,YAAY;AAC/F,YAAI,QAAQ,GAAG;AACb,cAAI,GACF,GACA,GACA,GACA,IAAI,CAAC,GACL,IAAI,MACJ,IAAI;AACN,cAAI;AACF,gBAAI,KAAK,IAAI,EAAE,KAAK,CAAC,GAAG,MAAM,MAAM,GAAG;AACrC,kBAAI,OAAO,CAAC,MAAM;AAAG;AACrB,kBAAI;AAAA,YACN;AAAO,qBAAO,EAAE,KAAK,IAAI,EAAE,KAAK,CAAC,GAAG,UAAU,EAAE,KAAK,EAAE,KAAK,GAAG,EAAE,WAAW,IAAI,IAAI;AAAG;AAAA,UACzF,SAASA,IAAG;AACV,gBAAI,MAAI,IAAIA;AAAA,UACd,UAAE;AACA,gBAAI;AACF,kBAAI,CAAC,KAAK,QAAQ,EAAE,WAAW,IAAI,EAAE,OAAO,GAAG,OAAO,CAAC,MAAM;AAAI;AAAA,YACnE,UAAE;AACA,kBAAI;AAAG,sBAAM;AAAA,YACf;AAAA,UACF;AACA,iBAAO;AAAA,QACT;AAAA,MACF;AACA,eAAS,QAAQ,GAAG;AAClB;AAEA,eAAO,UAAU,cAAc,OAAO,UAAU,YAAY,OAAO,OAAO,WAAW,SAAUC,IAAG;AAChG,iBAAO,OAAOA;AAAA,QAChB,IAAI,SAAUA,IAAG;AACf,iBAAOA,MAAK,cAAc,OAAO,UAAUA,GAAE,gBAAgB,UAAUA,OAAM,OAAO,YAAY,WAAW,OAAOA;AAAA,QACpH,GAAG,QAAQ,CAAC;AAAA,MACd;AACA,eAAS,gBAAgB,UAAU,aAAa;AAC9C,YAAI,EAAE,oBAAoB,cAAc;AACtC,gBAAM,IAAI,UAAU,mCAAmC;AAAA,QACzD;AAAA,MACF;AACA,eAAS,kBAAkB,QAAQ,OAAO;AACxC,iBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,cAAI,aAAa,MAAM,CAAC;AACxB,qBAAW,aAAa,WAAW,cAAc;AACjD,qBAAW,eAAe;AAC1B,cAAI,WAAW;AAAY,uBAAW,WAAW;AACjD,iBAAO,eAAe,QAAQ,eAAe,WAAW,GAAG,GAAG,UAAU;AAAA,QAC1E;AAAA,MACF;AACA,eAAS,aAAa,aAAa,YAAY,aAAa;AAC1D,YAAI;AAAY,4BAAkB,YAAY,WAAW,UAAU;AACnE,YAAI;AAAa,4BAAkB,aAAa,WAAW;AAC3D,eAAO,eAAe,aAAa,aAAa;AAAA,UAC9C,UAAU;AAAA,QACZ,CAAC;AACD,eAAO;AAAA,MACT;AACA,eAAS,UAAU,UAAU,YAAY;AACvC,YAAI,OAAO,eAAe,cAAc,eAAe,MAAM;AAC3D,gBAAM,IAAI,UAAU,oDAAoD;AAAA,QAC1E;AACA,iBAAS,YAAY,OAAO,OAAO,cAAc,WAAW,WAAW;AAAA,UACrE,aAAa;AAAA,YACX,OAAO;AAAA,YACP,UAAU;AAAA,YACV,cAAc;AAAA,UAChB;AAAA,QACF,CAAC;AACD,eAAO,eAAe,UAAU,aAAa;AAAA,UAC3C,UAAU;AAAA,QACZ,CAAC;AACD,YAAI;AAAY,0BAAgB,UAAU,UAAU;AAAA,MACtD;AACA,eAAS,gBAAgB,GAAG;AAC1B,0BAAkB,OAAO,iBAAiB,OAAO,eAAe,KAAK,IAAI,SAASC,iBAAgBD,IAAG;AACnG,iBAAOA,GAAE,aAAa,OAAO,eAAeA,EAAC;AAAA,QAC/C;AACA,eAAO,gBAAgB,CAAC;AAAA,MAC1B;AACA,eAAS,gBAAgB,GAAG,GAAG;AAC7B,0BAAkB,OAAO,iBAAiB,OAAO,eAAe,KAAK,IAAI,SAASE,iBAAgBF,IAAGG,IAAG;AACtG,UAAAH,GAAE,YAAYG;AACd,iBAAOH;AAAA,QACT;AACA,eAAO,gBAAgB,GAAG,CAAC;AAAA,MAC7B;AACA,eAAS,4BAA4B;AACnC,YAAI,OAAO,YAAY,eAAe,CAAC,QAAQ;AAAW,iBAAO;AACjE,YAAI,QAAQ,UAAU;AAAM,iBAAO;AACnC,YAAI,OAAO,UAAU;AAAY,iBAAO;AACxC,YAAI;AACF,kBAAQ,UAAU,QAAQ,KAAK,QAAQ,UAAU,SAAS,CAAC,GAAG,WAAY;AAAA,UAAC,CAAC,CAAC;AAC7E,iBAAO;AAAA,QACT,SAAS,GAAG;AACV,iBAAO;AAAA,QACT;AAAA,MACF;AACA,eAAS,WAAW,QAAQ,MAAM,OAAO;AACvC,YAAI,0BAA0B,GAAG;AAC/B,uBAAa,QAAQ,UAAU,KAAK;AAAA,QACtC,OAAO;AACL,uBAAa,SAASI,YAAWC,SAAQC,OAAMC,QAAO;AACpD,gBAAI,IAAI,CAAC,IAAI;AACb,cAAE,KAAK,MAAM,GAAGD,KAAI;AACpB,gBAAI,cAAc,SAAS,KAAK,MAAMD,SAAQ,CAAC;AAC/C,gBAAI,WAAW,IAAI,YAAY;AAC/B,gBAAIE;AAAO,8BAAgB,UAAUA,OAAM,SAAS;AACpD,mBAAO;AAAA,UACT;AAAA,QACF;AACA,eAAO,WAAW,MAAM,MAAM,SAAS;AAAA,MACzC;AACA,eAAS,uBAAuBC,OAAM;AACpC,YAAIA,UAAS,QAAQ;AACnB,gBAAM,IAAI,eAAe,2DAA2D;AAAA,QACtF;AACA,eAAOA;AAAA,MACT;AACA,eAAS,2BAA2BA,OAAM,MAAM;AAC9C,YAAI,SAAS,OAAO,SAAS,YAAY,OAAO,SAAS,aAAa;AACpE,iBAAO;AAAA,QACT,WAAW,SAAS,QAAQ;AAC1B,gBAAM,IAAI,UAAU,0DAA0D;AAAA,QAChF;AACA,eAAO,uBAAuBA,KAAI;AAAA,MACpC;AACA,eAAS,aAAa,SAAS;AAC7B,YAAI,4BAA4B,0BAA0B;AAC1D,eAAO,SAAS,uBAAuB;AACrC,cAAI,QAAQ,gBAAgB,OAAO,GACjC;AACF,cAAI,2BAA2B;AAC7B,gBAAI,YAAY,gBAAgB,IAAI,EAAE;AACtC,qBAAS,QAAQ,UAAU,OAAO,WAAW,SAAS;AAAA,UACxD,OAAO;AACL,qBAAS,MAAM,MAAM,MAAM,SAAS;AAAA,UACtC;AACA,iBAAO,2BAA2B,MAAM,MAAM;AAAA,QAChD;AAAA,MACF;AACA,eAAS,eAAe,QAAQ,UAAU;AACxC,eAAO,CAAC,OAAO,UAAU,eAAe,KAAK,QAAQ,QAAQ,GAAG;AAC9D,mBAAS,gBAAgB,MAAM;AAC/B,cAAI,WAAW;AAAM;AAAA,QACvB;AACA,eAAO;AAAA,MACT;AACA,eAAS,OAAO;AACd,YAAI,OAAO,YAAY,eAAe,QAAQ,KAAK;AACjD,iBAAO,QAAQ,IAAI,KAAK;AAAA,QAC1B,OAAO;AACL,iBAAO,SAASC,MAAK,QAAQ,UAAU,UAAU;AAC/C,gBAAI,OAAO,eAAe,QAAQ,QAAQ;AAC1C,gBAAI,CAAC;AAAM;AACX,gBAAI,OAAO,OAAO,yBAAyB,MAAM,QAAQ;AACzD,gBAAI,KAAK,KAAK;AACZ,qBAAO,KAAK,IAAI,KAAK,UAAU,SAAS,IAAI,SAAS,QAAQ;AAAA,YAC/D;AACA,mBAAO,KAAK;AAAA,UACd;AAAA,QACF;AACA,eAAO,KAAK,MAAM,MAAM,SAAS;AAAA,MACnC;AACA,eAAS,eAAe,KAAK,GAAG;AAC9B,eAAO,gBAAgB,GAAG,KAAK,sBAAsB,KAAK,CAAC,KAAK,4BAA4B,KAAK,CAAC,KAAK,iBAAiB;AAAA,MAC1H;AACA,eAAS,mBAAmB,KAAK;AAC/B,eAAO,mBAAmB,GAAG,KAAK,iBAAiB,GAAG,KAAK,4BAA4B,GAAG,KAAK,mBAAmB;AAAA,MACpH;AACA,eAAS,mBAAmB,KAAK;AAC/B,YAAI,MAAM,QAAQ,GAAG;AAAG,iBAAO,kBAAkB,GAAG;AAAA,MACtD;AACA,eAAS,gBAAgB,KAAK;AAC5B,YAAI,MAAM,QAAQ,GAAG;AAAG,iBAAO;AAAA,MACjC;AACA,eAAS,iBAAiB,MAAM;AAC9B,YAAI,OAAO,WAAW,eAAe,KAAK,OAAO,QAAQ,KAAK,QAAQ,KAAK,YAAY,KAAK;AAAM,iBAAO,MAAM,KAAK,IAAI;AAAA,MAC1H;AACA,eAAS,4BAA4B,GAAG,QAAQ;AAC9C,YAAI,CAAC;AAAG;AACR,YAAI,OAAO,MAAM;AAAU,iBAAO,kBAAkB,GAAG,MAAM;AAC7D,YAAI,IAAI,OAAO,UAAU,SAAS,KAAK,CAAC,EAAE,MAAM,GAAG,EAAE;AACrD,YAAI,MAAM,YAAY,EAAE;AAAa,cAAI,EAAE,YAAY;AACvD,YAAI,MAAM,SAAS,MAAM;AAAO,iBAAO,MAAM,KAAK,CAAC;AACnD,YAAI,MAAM,eAAe,2CAA2C,KAAK,CAAC;AAAG,iBAAO,kBAAkB,GAAG,MAAM;AAAA,MACjH;AACA,eAAS,kBAAkB,KAAK,KAAK;AACnC,YAAI,OAAO,QAAQ,MAAM,IAAI;AAAQ,gBAAM,IAAI;AAC/C,iBAAS,IAAI,GAAG,OAAO,IAAI,MAAM,GAAG,GAAG,IAAI,KAAK;AAAK,eAAK,CAAC,IAAI,IAAI,CAAC;AACpE,eAAO;AAAA,MACT;AACA,eAAS,qBAAqB;AAC5B,cAAM,IAAI,UAAU,sIAAsI;AAAA,MAC5J;AACA,eAAS,mBAAmB;AAC1B,cAAM,IAAI,UAAU,2IAA2I;AAAA,MACjK;AACA,eAAS,aAAa,OAAO,MAAM;AACjC,YAAI,OAAO,UAAU,YAAY,UAAU;AAAM,iBAAO;AACxD,YAAI,OAAO,MAAM,OAAO,WAAW;AACnC,YAAI,SAAS,QAAW;AACtB,cAAI,MAAM,KAAK,KAAK,OAAO,QAAQ,SAAS;AAC5C,cAAI,OAAO,QAAQ;AAAU,mBAAO;AACpC,gBAAM,IAAI,UAAU,8CAA8C;AAAA,QACpE;AACA,gBAAQ,SAAS,WAAW,SAAS,QAAQ,KAAK;AAAA,MACpD;AACA,eAAS,eAAe,KAAK;AAC3B,YAAI,MAAM,aAAa,KAAK,QAAQ;AACpC,eAAO,OAAO,QAAQ,WAAW,MAAM,OAAO,GAAG;AAAA,MACnD;AACA,eAAS,sBAAsB,UAAU,YAAY;AACnD,YAAI,aAAa,6BAA6B,UAAU,YAAY,KAAK;AACzE,eAAO,yBAAyB,UAAU,UAAU;AAAA,MACtD;AACA,eAAS,sBAAsB,UAAU,YAAY,OAAO;AAC1D,YAAI,aAAa,6BAA6B,UAAU,YAAY,KAAK;AACzE,iCAAyB,UAAU,YAAY,KAAK;AACpD,eAAO;AAAA,MACT;AACA,eAAS,6BAA6B,UAAU,YAAY,QAAQ;AAClE,YAAI,CAAC,WAAW,IAAI,QAAQ,GAAG;AAC7B,gBAAM,IAAI,UAAU,kBAAkB,SAAS,gCAAgC;AAAA,QACjF;AACA,eAAO,WAAW,IAAI,QAAQ;AAAA,MAChC;AACA,eAAS,yBAAyB,UAAU,YAAY;AACtD,YAAI,WAAW,KAAK;AAClB,iBAAO,WAAW,IAAI,KAAK,QAAQ;AAAA,QACrC;AACA,eAAO,WAAW;AAAA,MACpB;AACA,eAAS,yBAAyB,UAAU,YAAY,OAAO;AAC7D,YAAI,WAAW,KAAK;AAClB,qBAAW,IAAI,KAAK,UAAU,KAAK;AAAA,QACrC,OAAO;AACL,cAAI,CAAC,WAAW,UAAU;AACxB,kBAAM,IAAI,UAAU,0CAA0C;AAAA,UAChE;AACA,qBAAW,QAAQ;AAAA,QACrB;AAAA,MACF;AACA,eAAS,2BAA2B,KAAK,mBAAmB;AAC1D,YAAI,kBAAkB,IAAI,GAAG,GAAG;AAC9B,gBAAM,IAAI,UAAU,gEAAgE;AAAA,QACtF;AAAA,MACF;AACA,eAAS,2BAA2B,KAAK,YAAY,OAAO;AAC1D,mCAA2B,KAAK,UAAU;AAC1C,mBAAW,IAAI,KAAK,KAAK;AAAA,MAC3B;AACA,UAAI,wBAAwB;AAG5B,UAAI,cAAc,CAAC;AACnB,UAAI,6BAA6B,SAASC,8BAA6B;AACrE,YAAI,YAAY,iCAAiC,aAAa;AAC5D,sBAAY,sBAAsB,MAAM;AACxC,sBAAY,wBAAwB;AAAA,QACtC,WAAW,SAAS,MAAM;AACxB,mBAAS,KAAK,MAAM;AAAA,QACtB;AAAA,MACF;AAQA,UAAI,uBAAuB,SAASC,sBAAqB,aAAa;AACpE,eAAO,IAAI,QAAQ,SAAU,SAAS;AACpC,cAAI,CAAC,aAAa;AAChB,mBAAO,QAAQ;AAAA,UACjB;AACA,cAAI,IAAI,OAAO;AACf,cAAI,IAAI,OAAO;AACf,sBAAY,sBAAsB,WAAW,WAAY;AACvD,uCAA2B;AAC3B,oBAAQ;AAAA,UACV,GAAG,qBAAqB;AAExB,iBAAO,SAAS,GAAG,CAAC;AAAA,QACtB,CAAC;AAAA,MACH;AACA,UAAI,aAAa;AAmFjB,UAAI,aAAa,CAAC,aAAa,SAAS,eAAe,UAAU,SAAS,SAAS,eAAe,iBAAiB,SAAS,eAAe,QAAQ,QAAQ,SAAS,SAAS,kBAAkB,WAAW,WAAW,QAAQ,UAAU,mBAAmB,UAAU,QAAQ,gBAAgB,SAAS,SAAS,QAAQ,SAAS,UAAU,SAAS,YAAY,SAAS,YAAY,cAAc,eAAe,sBAAsB,kBAAkB,wBAAwB,iBAAiB,sBAAsB,UAAU,WAAW,UAAU,OAAO,aAAa,WAAW,YAAY,aAAa,UAAU,gBAAgB,cAAc,eAAe,gBAAgB,UAAU,gBAAgB,cAAc,eAAe,gBAAgB,YAAY,eAAe,mBAAmB,OAAO,sBAAsB,gCAAgC,qBAAqB,gBAAgB,gBAAgB,aAAa,iBAAiB,YAAY;AACt6B,UAAI,cAAc,WAAW;AAAA,QAAO,SAAU,KAAK,WAAW;AAC5D,cAAI,SAAS,IAAI,aAAa;AAC9B,iBAAO;AAAA,QACT;AAAA;AAAA,QAA6B,CAAC;AAAA,MAAC;AAG/B,UAAI,QAAQ,CAAC,WAAW,WAAW,QAAQ,YAAY,OAAO;AAC9D,UAAI,YAAY,MAAM;AAAA,QAAO,SAAU,KAAK,MAAM;AAChD,cAAI,IAAI,IAAI,aAAa;AACzB,iBAAO;AAAA,QACT;AAAA;AAAA,QAA2B,CAAC;AAAA,MAAC;AAC7B,UAAI,gBAAgB;AAQpB,UAAI,wBAAwB,SAASC,uBAAsB,KAAK;AAC9D,eAAO,IAAI,OAAO,CAAC,EAAE,YAAY,IAAI,IAAI,MAAM,CAAC;AAAA,MAClD;AAOA,UAAI,OAAO,SAASC,MAAK,SAAS;AAChC,gBAAQ,KAAK,GAAG,OAAO,eAAe,GAAG,EAAE,OAAO,QAAQ,OAAO,MAAM,WAAW,QAAQ,KAAK,GAAG,IAAI,OAAO,CAAC;AAAA,MAChH;AAOA,UAAI,QAAQ,SAASC,OAAM,SAAS;AAClC,gBAAQ,MAAM,GAAG,OAAO,eAAe,GAAG,EAAE,OAAO,OAAO,CAAC;AAAA,MAC7D;AAQA,UAAI,2BAA2B,CAAC;AAOhC,UAAI,WAAW,SAASC,UAAS,SAAS;AACxC,YAAI,CAAC,yBAAyB,SAAS,OAAO,GAAG;AAC/C,mCAAyB,KAAK,OAAO;AACrC,eAAK,OAAO;AAAA,QACd;AAAA,MACF;AAQA,UAAI,uBAAuB,SAASC,sBAAqB,iBAAiB,YAAY;AACpF,iBAAS,IAAK,OAAO,iBAAiB,6EAA+E,EAAE,OAAO,YAAY,YAAa,CAAC;AAAA,MAC1J;AASA,UAAI,iBAAiB,SAASC,gBAAe,KAAK;AAChD,eAAO,OAAO,QAAQ,aAAa,IAAI,IAAI;AAAA,MAC7C;AAMA,UAAI,iBAAiB,SAASC,gBAAe,KAAK;AAChD,eAAO,OAAO,OAAO,IAAI,cAAc;AAAA,MACzC;AAMA,UAAI,YAAY,SAASC,WAAU,KAAK;AACtC,eAAO,eAAe,GAAG,IAAI,IAAI,UAAU,IAAI,QAAQ,QAAQ,GAAG;AAAA,MACpE;AAMA,UAAIC,aAAY,SAASA,WAAU,KAAK;AACtC,eAAO,OAAO,QAAQ,QAAQ,GAAG,MAAM;AAAA,MACzC;AAOA,UAAI,eAAe,SAASC,gBAAe;AACzC,eAAO,SAAS,KAAK,cAAc,IAAI,OAAO,YAAY,SAAS,CAAC;AAAA,MACtE;AAMA,UAAI,oBAAoB,SAASC,mBAAkB,gBAAgB;AACjE,YAAI,YAAY,aAAa;AAC7B,eAAO,YAAY,UAAU,cAAc,cAAc,IAAI;AAAA,MAC/D;AAMA,UAAI,iBAAiB,SAASC,gBAAe,WAAW;AACtD,eAAO,kBAAkB,IAAI,OAAO,SAAS,CAAC;AAAA,MAChD;AAKA,UAAI,WAAW,SAASC,YAAW;AACjC,eAAO,eAAe,YAAY,KAAK;AAAA,MACzC;AAKA,UAAI,UAAU,SAASC,WAAU;AAC/B,eAAO,eAAe,YAAY,IAAI;AAAA,MACxC;AAKA,UAAI,iBAAiB,SAASC,kBAAiB;AAC7C,eAAO,eAAe,YAAY,cAAc,CAAC;AAAA,MACnD;AAKA,UAAI,WAAW,SAASC,YAAW;AACjC,eAAO,eAAe,YAAY,KAAK;AAAA,MACzC;AAKA,UAAI,mBAAmB,SAASC,oBAAmB;AACjD,eAAO,eAAe,YAAY,gBAAgB,CAAC;AAAA,MACrD;AAKA,UAAI,WAAW,SAASC,YAAW;AACjC,eAAO,eAAe,YAAY,KAAK;AAAA,MACzC;AAKA,UAAI,mBAAmB,SAASC,oBAAmB;AACjD,eAAO,eAAe,YAAY,gBAAgB,CAAC;AAAA,MACrD;AAKA,UAAI,uBAAuB,SAASC,wBAAuB;AACzD,eAAO,eAAe,YAAY,oBAAoB,CAAC;AAAA,MACzD;AAKA,UAAI,mBAAmB,SAASC,oBAAmB;AACjD;AAAA;AAAA,UAAwC,kBAAkB,IAAI,OAAO,YAAY,SAAS,IAAI,EAAE,OAAO,YAAY,OAAO,CAAC;AAAA;AAAA,MAE7H;AAKA,UAAI,kBAAkB,SAASC,mBAAkB;AAC/C;AAAA;AAAA,UAAwC,kBAAkB,IAAI,OAAO,YAAY,SAAS,IAAI,EAAE,OAAO,YAAY,MAAM,CAAC;AAAA;AAAA,MAE5H;AAKA,UAAI,gBAAgB,SAASC,iBAAgB;AAC3C;AAAA;AAAA,UAAwC,kBAAkB,IAAI,OAAO,YAAY,SAAS,IAAI,EAAE,OAAO,YAAY,IAAI,CAAC;AAAA;AAAA,MAE1H;AAKA,UAAI,gBAAgB,SAASC,iBAAgB;AAC3C,eAAO,eAAe,YAAY,aAAa,CAAC;AAAA,MAClD;AAKA,UAAI,YAAY,SAASC,aAAY;AACnC,eAAO,kBAAkB,IAAI,OAAO,YAAY,MAAM,CAAC;AAAA,MACzD;AAKA,UAAI,aAAa,SAASC,cAAa;AACrC,eAAO,eAAe,YAAY,OAAO;AAAA,MAC3C;AAKA,UAAI,YAAY,SAASC,aAAY;AACnC,eAAO,eAAe,YAAY,MAAM;AAAA,MAC1C;AAKA,UAAI,sBAAsB,SAASC,uBAAsB;AACvD,eAAO,eAAe,YAAY,oBAAoB,CAAC;AAAA,MACzD;AAKA,UAAI,iBAAiB,SAASC,kBAAiB;AAC7C,eAAO,eAAe,YAAY,KAAK;AAAA,MACzC;AAGA,UAAI,YAAY;AAIhB,UAAI,uBAAuB,SAASC,wBAAuB;AACzD,YAAI,QAAQ,SAAS;AACrB,YAAI,CAAC,OAAO;AACV,iBAAO,CAAC;AAAA,QACV;AAEA,YAAI,gCAAgC,MAAM,iBAAiB,qDAAqD;AAChH,YAAI,sCAAsC,MAAM,KAAK,6BAA6B,EAEjF,KAAK,SAAU,GAAG,GAAG;AACpB,cAAI,YAAY,SAAS,EAAE,aAAa,UAAU,KAAK,GAAG;AAC1D,cAAI,YAAY,SAAS,EAAE,aAAa,UAAU,KAAK,GAAG;AAC1D,cAAI,YAAY,WAAW;AACzB,mBAAO;AAAA,UACT,WAAW,YAAY,WAAW;AAChC,mBAAO;AAAA,UACT;AACA,iBAAO;AAAA,QACT,CAAC;AAGD,YAAI,yBAAyB,MAAM,iBAAiB,SAAS;AAC7D,YAAI,iCAAiC,MAAM,KAAK,sBAAsB,EAAE,OAAO,SAAU,IAAI;AAC3F,iBAAO,GAAG,aAAa,UAAU,MAAM;AAAA,QACzC,CAAC;AACD,eAAO,mBAAmB,IAAI,IAAI,oCAAoC,OAAO,8BAA8B,CAAC,CAAC,EAAE,OAAO,SAAU,IAAI;AAClI,iBAAO,YAAY,EAAE;AAAA,QACvB,CAAC;AAAA,MACH;AAKA,UAAI,UAAU,SAASC,WAAU;AAC/B,eAAO,SAAS,SAAS,MAAM,YAAY,KAAK,KAAK,CAAC,SAAS,SAAS,MAAM,YAAY,aAAa,CAAC,KAAK,CAAC,SAAS,SAAS,MAAM,YAAY,aAAa,CAAC;AAAA,MAClK;AAKA,UAAI,UAAU,SAASC,WAAU;AAC/B,YAAI,QAAQ,SAAS;AACrB,YAAI,CAAC,OAAO;AACV,iBAAO;AAAA,QACT;AACA,eAAO,SAAS,OAAO,YAAY,KAAK;AAAA,MAC1C;AAKA,UAAI,YAAY,SAASC,aAAY;AACnC,YAAI,QAAQ,SAAS;AACrB,YAAI,CAAC,OAAO;AACV,iBAAO;AAAA,QACT;AACA,eAAO,MAAM,aAAa,cAAc;AAAA,MAC1C;AASA,UAAI,eAAe,SAASC,cAAa,MAAM,MAAM;AACnD,aAAK,cAAc;AACnB,YAAI,MAAM;AACR,cAAI,SAAS,IAAI,UAAU;AAC3B,cAAI,SAAS,OAAO,gBAAgB,MAAM,WAAW;AACrD,cAAI,OAAO,OAAO,cAAc,MAAM;AACtC,kBAAQ,MAAM,KAAK,KAAK,UAAU,EAAE,QAAQ,SAAU,OAAO;AAC3D,iBAAK,YAAY,KAAK;AAAA,UACxB,CAAC;AACD,cAAI,OAAO,OAAO,cAAc,MAAM;AACtC,kBAAQ,MAAM,KAAK,KAAK,UAAU,EAAE,QAAQ,SAAU,OAAO;AAC3D,gBAAI,iBAAiB,oBAAoB,iBAAiB,kBAAkB;AAC1E,mBAAK,YAAY,MAAM,UAAU,IAAI,CAAC;AAAA,YACxC,OAAO;AACL,mBAAK,YAAY,KAAK;AAAA,YACxB;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF;AAOA,UAAI,WAAW,SAASC,UAAS,MAAM,WAAW;AAChD,YAAI,CAAC,WAAW;AACd,iBAAO;AAAA,QACT;AACA,YAAI,YAAY,UAAU,MAAM,KAAK;AACrC,iBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,cAAI,CAAC,KAAK,UAAU,SAAS,UAAU,CAAC,CAAC,GAAG;AAC1C,mBAAO;AAAA,UACT;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAMA,UAAI,sBAAsB,SAASC,qBAAoB,MAAM,QAAQ;AACnE,cAAM,KAAK,KAAK,SAAS,EAAE,QAAQ,SAAU,WAAW;AACtD,cAAI,CAAC,OAAO,OAAO,WAAW,EAAE,SAAS,SAAS,KAAK,CAAC,OAAO,OAAO,SAAS,EAAE,SAAS,SAAS,KAAK,CAAC,OAAO,OAAO,OAAO,aAAa,CAAC,CAAC,EAAE,SAAS,SAAS,GAAG;AAClK,iBAAK,UAAU,OAAO,SAAS;AAAA,UACjC;AAAA,QACF,CAAC;AAAA,MACH;AAOA,UAAI,mBAAmB,SAASC,kBAAiB,MAAM,QAAQ,WAAW;AACxE,4BAAoB,MAAM,MAAM;AAChC,YAAI,OAAO,eAAe,OAAO,YAAY,SAAS,GAAG;AACvD,cAAI,OAAO,OAAO,YAAY,SAAS,MAAM,YAAY,CAAC,OAAO,YAAY,SAAS,EAAE,SAAS;AAC/F,iBAAK,+BAA+B,OAAO,WAAW,6CAA8C,EAAE,OAAO,QAAQ,OAAO,YAAY,SAAS,CAAC,GAAG,GAAI,CAAC;AAC1J;AAAA,UACF;AACA,mBAAS,MAAM,OAAO,YAAY,SAAS,CAAC;AAAA,QAC9C;AAAA,MACF;AAOA,UAAI,aAAa,SAASC,UAAS,OAAO,YAAY;AACpD,YAAI,CAAC,YAAY;AACf,iBAAO;AAAA,QACT;AACA,gBAAQ,YAAY;AAAA,UAClB,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,mBAAO,MAAM,cAAc,IAAI,OAAO,YAAY,OAAO,MAAM,EAAE,OAAO,YAAY,UAAU,CAAC,CAAC;AAAA,UAClG,KAAK;AACH,mBAAO,MAAM,cAAc,IAAI,OAAO,YAAY,OAAO,MAAM,EAAE,OAAO,YAAY,UAAU,QAAQ,CAAC;AAAA,UACzG,KAAK;AACH,mBAAO,MAAM,cAAc,IAAI,OAAO,YAAY,OAAO,MAAM,EAAE,OAAO,YAAY,OAAO,gBAAgB,CAAC,KAAK,MAAM,cAAc,IAAI,OAAO,YAAY,OAAO,MAAM,EAAE,OAAO,YAAY,OAAO,oBAAoB,CAAC;AAAA,UAC5N,KAAK;AACH,mBAAO,MAAM,cAAc,IAAI,OAAO,YAAY,OAAO,MAAM,EAAE,OAAO,YAAY,OAAO,QAAQ,CAAC;AAAA,UACtG;AACE,mBAAO,MAAM,cAAc,IAAI,OAAO,YAAY,OAAO,MAAM,EAAE,OAAO,YAAY,KAAK,CAAC;AAAA,QAC9F;AAAA,MACF;AAKA,UAAI,aAAa,SAASC,YAAW,OAAO;AAC1C,cAAM,MAAM;AAGZ,YAAI,MAAM,SAAS,QAAQ;AAEzB,cAAI,MAAM,MAAM;AAChB,gBAAM,QAAQ;AACd,gBAAM,QAAQ;AAAA,QAChB;AAAA,MACF;AAOA,UAAI,cAAc,SAASC,aAAY,QAAQ,WAAW,WAAW;AACnE,YAAI,CAAC,UAAU,CAAC,WAAW;AACzB;AAAA,QACF;AACA,YAAI,OAAO,cAAc,UAAU;AACjC,sBAAY,UAAU,MAAM,KAAK,EAAE,OAAO,OAAO;AAAA,QACnD;AACA,kBAAU,QAAQ,SAAU,WAAW;AACrC,cAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,mBAAO,QAAQ,SAAU,MAAM;AAC7B,0BAAY,KAAK,UAAU,IAAI,SAAS,IAAI,KAAK,UAAU,OAAO,SAAS;AAAA,YAC7E,CAAC;AAAA,UACH,OAAO;AACL,wBAAY,OAAO,UAAU,IAAI,SAAS,IAAI,OAAO,UAAU,OAAO,SAAS;AAAA,UACjF;AAAA,QACF,CAAC;AAAA,MACH;AAMA,UAAI,WAAW,SAASC,UAAS,QAAQ,WAAW;AAClD,oBAAY,QAAQ,WAAW,IAAI;AAAA,MACrC;AAMA,UAAI,cAAc,SAASC,aAAY,QAAQ,WAAW;AACxD,oBAAY,QAAQ,WAAW,KAAK;AAAA,MACtC;AASA,UAAI,wBAAwB,SAASC,uBAAsB,MAAM,WAAW;AAC1E,YAAI,WAAW,MAAM,KAAK,KAAK,QAAQ;AACvC,iBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,cAAI,QAAQ,SAAS,CAAC;AACtB,cAAI,iBAAiB,eAAe,SAAS,OAAO,SAAS,GAAG;AAC9D,mBAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAOA,UAAI,sBAAsB,SAASC,qBAAoB,MAAM,UAAU,OAAO;AAC5E,YAAI,UAAU,GAAG,OAAO,SAAS,KAAK,CAAC,GAAG;AACxC,kBAAQ,SAAS,KAAK;AAAA,QACxB;AACA,YAAI,SAAS,SAAS,KAAK,MAAM,GAAG;AAClC,eAAK,MAAM,QAAQ,IAAI,OAAO,UAAU,WAAW,GAAG,OAAO,OAAO,IAAI,IAAI;AAAA,QAC9E,OAAO;AACL,eAAK,MAAM,eAAe,QAAQ;AAAA,QACpC;AAAA,MACF;AAMA,UAAI,OAAO,SAASC,MAAK,MAAM;AAC7B,YAAI,UAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAClF,iBAAS,KAAK,MAAM,UAAU;AAAA,MAChC;AAKA,UAAI,OAAO,SAASC,MAAK,MAAM;AAC7B,iBAAS,KAAK,MAAM,UAAU;AAAA,MAChC;AAMA,UAAI,2BAA2B,SAASC,0BAAyB,MAAM;AACrE,YAAI,UAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAClF,YAAI,CAAC,MAAM;AACT;AAAA,QACF;AACA,YAAI,iBAAiB,WAAY;AAC/B,iBAAO,MAAM,KAAK,WAAW,OAAO;AAAA,QACtC,CAAC,EAAE,QAAQ,MAAM;AAAA,UACf,WAAW;AAAA,UACX,SAAS;AAAA,QACX,CAAC;AAAA,MACH;AAQA,UAAI,WAAW,SAASC,UAAS,QAAQ,UAAU,UAAU,OAAO;AAElE,YAAI,KAAK,OAAO,cAAc,QAAQ;AACtC,YAAI,IAAI;AACN,aAAG,MAAM,QAAQ,IAAI;AAAA,QACvB;AAAA,MACF;AAOA,UAAI,SAAS,SAASC,QAAO,MAAM,WAAW;AAC5C,YAAI,UAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAClF,oBAAY,KAAK,MAAM,OAAO,IAAI,KAAK,IAAI;AAAA,MAC7C;AAQA,UAAI,cAAc,SAASC,WAAU,MAAM;AACzC,eAAO,CAAC,EAAE,SAAS,KAAK,eAAe,KAAK,gBAAgB,KAAK,eAAe,EAAE;AAAA,MACpF;AAKA,UAAI,sBAAsB,SAASC,uBAAsB;AACvD,eAAO,CAAC,YAAY,iBAAiB,CAAC,KAAK,CAAC,YAAY,cAAc,CAAC,KAAK,CAAC,YAAY,gBAAgB,CAAC;AAAA,MAC5G;AAMA,UAAI,eAAe,SAASC,cAAa,MAAM;AAC7C,eAAO,CAAC,EAAE,KAAK,eAAe,KAAK;AAAA,MACrC;AAQA,UAAI,kBAAkB,SAASC,iBAAgB,MAAM;AACnD,YAAI,QAAQ,OAAO,iBAAiB,IAAI;AACxC,YAAI,eAAe,WAAW,MAAM,iBAAiB,oBAAoB,KAAK,GAAG;AACjF,YAAI,gBAAgB,WAAW,MAAM,iBAAiB,qBAAqB,KAAK,GAAG;AACnF,eAAO,eAAe,KAAK,gBAAgB;AAAA,MAC7C;AAMA,UAAI,0BAA0B,SAASC,yBAAwB,OAAO;AACpE,YAAI,QAAQ,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAChF,YAAI,mBAAmB,oBAAoB;AAC3C,YAAI,CAAC,kBAAkB;AACrB;AAAA,QACF;AACA,YAAI,YAAY,gBAAgB,GAAG;AACjC,cAAI,OAAO;AACT,6BAAiB,MAAM,aAAa;AACpC,6BAAiB,MAAM,QAAQ;AAAA,UACjC;AACA,qBAAW,WAAY;AACrB,6BAAiB,MAAM,aAAa,SAAS,OAAO,QAAQ,KAAM,UAAU;AAC5E,6BAAiB,MAAM,QAAQ;AAAA,UACjC,GAAG,EAAE;AAAA,QACP;AAAA,MACF;AACA,UAAI,uBAAuB,SAASC,wBAAuB;AACzD,YAAI,mBAAmB,oBAAoB;AAC3C,YAAI,CAAC,kBAAkB;AACrB;AAAA,QACF;AACA,YAAI,wBAAwB,SAAS,OAAO,iBAAiB,gBAAgB,EAAE,KAAK;AACpF,yBAAiB,MAAM,eAAe,YAAY;AAClD,yBAAiB,MAAM,QAAQ;AAC/B,YAAI,4BAA4B,SAAS,OAAO,iBAAiB,gBAAgB,EAAE,KAAK;AACxF,YAAI,0BAA0B,wBAAwB,4BAA4B;AAClF,yBAAiB,MAAM,QAAQ,GAAG,OAAO,yBAAyB,GAAG;AAAA,MACvE;AAOA,UAAI,YAAY,SAASC,aAAY;AACnC,eAAO,OAAO,WAAW,eAAe,OAAO,aAAa;AAAA,MAC9D;AACA,UAAI,YAAY,4BAA6B,OAAO,YAAY,OAAO,sBAAwB,EAAE,OAAO,YAAY,gBAAgB,GAAG,WAAa,EAAE,OAAO,YAAY,OAAO,oDAA0D,EAAE,OAAO,YAAY,OAAO,6BAA+B,EAAE,OAAO,YAAY,gBAAgB,GAAG,0BAA4B,EAAE,OAAO,YAAY,MAAM,2BAA6B,EAAE,OAAO,YAAY,OAAO,sBAAwB,EAAE,OAAO,YAAY,OAAO,QAAU,EAAE,OAAO,YAAY,OAAO,0BAA4B,EAAE,OAAO,YAAY,gBAAgB,GAAG,QAAU,EAAE,OAAO,YAAY,gBAAgB,GAAG,6BAA+B,EAAE,OAAO,YAAY,OAAO,QAAU,EAAE,OAAO,YAAY,OAAO,qCAAyC,EAAE,OAAO,YAAY,MAAM,uBAAyB,EAAE,OAAO,YAAY,OAAO,wFAA4F,EAAE,OAAO,YAAY,QAAQ,QAAU,EAAE,OAAO,YAAY,QAAQ,8BAAgC,EAAE,OAAO,YAAY,OAAO,6BAA+B,EAAE,OAAO,YAAY,UAAU,sCAA0C,EAAE,OAAO,YAAY,UAAU,0BAA4B,EAAE,OAAO,YAAY,OAAO,8CAAgD,EAAE,OAAO,YAAY,UAAU,QAAU,EAAE,OAAO,YAAY,UAAU,gCAAkC,EAAE,OAAO,YAAY,oBAAoB,GAAG,QAAU,EAAE,OAAO,YAAY,oBAAoB,GAAG,2BAA6B,EAAE,OAAO,YAAY,SAAS,uBAAyB,EAAE,OAAO,YAAY,QAAQ,8CAAkD,EAAE,OAAO,YAAY,SAAS,iDAAqD,EAAE,OAAO,YAAY,MAAM,iDAAqD,EAAE,OAAO,YAAY,QAAQ,yCAA2C,EAAE,OAAO,YAAY,QAAQ,2BAA6B,EAAE,OAAO,YAAY,8BAA8B,GAAG,uBAAyB,EAAE,OAAO,YAAY,oBAAoB,GAAG,gCAAiC,EAAE,QAAQ,cAAc,EAAE;AAK5nE,UAAI,oBAAoB,SAASC,qBAAoB;AACnD,YAAI,eAAe,aAAa;AAChC,YAAI,CAAC,cAAc;AACjB,iBAAO;AAAA,QACT;AACA,qBAAa,OAAO;AACpB,oBAAY,CAAC,SAAS,iBAAiB,SAAS,IAAI,GAAG,CAAC,YAAY,aAAa,GAAG,YAAY,aAAa,GAAG,YAAY,YAAY,CAAC,CAAC;AAC1I,eAAO;AAAA,MACT;AACA,UAAI,2BAA2B,SAASC,0BAAyB;AAC/D,oBAAY,gBAAgB,uBAAuB;AAAA,MACrD;AACA,UAAI,0BAA0B,SAASC,2BAA0B;AAC/D,YAAI,QAAQ,SAAS;AACrB,YAAI,QAAQ,sBAAsB,OAAO,YAAY,KAAK;AAC1D,YAAI,OAAO,sBAAsB,OAAO,YAAY,IAAI;AAExD,YAAI,QAAQ,MAAM,cAAc,IAAI,OAAO,YAAY,OAAO,QAAQ,CAAC;AAEvE,YAAI,cAAc,MAAM,cAAc,IAAI,OAAO,YAAY,OAAO,SAAS,CAAC;AAC9E,YAAI,SAAS,sBAAsB,OAAO,YAAY,MAAM;AAE5D,YAAI,WAAW,MAAM,cAAc,IAAI,OAAO,YAAY,UAAU,QAAQ,CAAC;AAC7E,YAAI,WAAW,sBAAsB,OAAO,YAAY,QAAQ;AAChE,cAAM,UAAU;AAChB,aAAK,WAAW;AAChB,eAAO,WAAW;AAClB,iBAAS,WAAW;AACpB,iBAAS,UAAU;AACnB,cAAM,UAAU,WAAY;AAC1B,mCAAyB;AACzB,sBAAY,QAAQ,MAAM;AAAA,QAC5B;AACA,cAAM,WAAW,WAAY;AAC3B,mCAAyB;AACzB,sBAAY,QAAQ,MAAM;AAAA,QAC5B;AAAA,MACF;AAMA,UAAI,YAAY,SAASC,WAAU,QAAQ;AACzC,eAAO,OAAO,WAAW,WAAW,SAAS,cAAc,MAAM,IAAI;AAAA,MACvE;AAKA,UAAI,qBAAqB,SAASC,oBAAmB,QAAQ;AAC3D,YAAI,QAAQ,SAAS;AACrB,cAAM,aAAa,QAAQ,OAAO,QAAQ,UAAU,QAAQ;AAC5D,cAAM,aAAa,aAAa,OAAO,QAAQ,WAAW,WAAW;AACrE,YAAI,CAAC,OAAO,OAAO;AACjB,gBAAM,aAAa,cAAc,MAAM;AAAA,QACzC;AAAA,MACF;AAKA,UAAI,WAAW,SAASC,UAAS,eAAe;AAC9C,YAAI,OAAO,iBAAiB,aAAa,EAAE,cAAc,OAAO;AAC9D,mBAAS,aAAa,GAAG,YAAY,GAAG;AAAA,QAC1C;AAAA,MACF;AAOA,UAAI,OAAO,SAASC,MAAK,QAAQ;AAE/B,YAAI,sBAAsB,kBAAkB;AAC5C,YAAI,UAAU,GAAG;AACf,gBAAM,6CAA6C;AACnD;AAAA,QACF;AACA,YAAI,YAAY,SAAS,cAAc,KAAK;AAC5C,kBAAU,YAAY,YAAY;AAClC,YAAI,qBAAqB;AACvB,mBAAS,WAAW,YAAY,eAAe,CAAC;AAAA,QAClD;AACA,qBAAa,WAAW,SAAS;AACjC,YAAI,gBAAgB,UAAU,OAAO,MAAM;AAC3C,sBAAc,YAAY,SAAS;AACnC,2BAAmB,MAAM;AACzB,iBAAS,aAAa;AACtB,gCAAwB;AAAA,MAC1B;AAMA,UAAI,uBAAuB,SAASC,sBAAqB,OAAO,QAAQ;AAEtE,YAAI,iBAAiB,aAAa;AAChC,iBAAO,YAAY,KAAK;AAAA,QAC1B,WAGS,QAAQ,KAAK,MAAM,UAAU;AACpC,uBAAa,OAAO,MAAM;AAAA,QAC5B,WAGS,OAAO;AACd,uBAAa,QAAQ,KAAK;AAAA,QAC5B;AAAA,MACF;AAMA,UAAI,eAAe,SAASC,cAAa,OAAO,QAAQ;AAEtD,YAAI,MAAM,QAAQ;AAChB,2BAAiB,QAAQ,KAAK;AAAA,QAChC,OAGK;AACH,uBAAa,QAAQ,MAAM,SAAS,CAAC;AAAA,QACvC;AAAA,MACF;AAMA,UAAI,mBAAmB,SAASC,kBAAiB,QAAQ,MAAM;AAC7D,eAAO,cAAc;AACrB,YAAI,KAAK,MAAM;AACb,mBAAS,IAAI,GAAI,KAAK,MAAO,KAAK;AAChC,mBAAO,YAAY,KAAK,CAAC,EAAE,UAAU,IAAI,CAAC;AAAA,UAC5C;AAAA,QACF,OAAO;AACL,iBAAO,YAAY,KAAK,UAAU,IAAI,CAAC;AAAA,QACzC;AAAA,MACF;AAKA,UAAI,oBAAoB,WAAY;AAElC,YAAI,UAAU,GAAG;AACf,iBAAO;AAAA,QACT;AACA,YAAI,SAAS,SAAS,cAAc,KAAK;AAGzC,YAAI,OAAO,OAAO,MAAM,oBAAoB,aAAa;AACvD,iBAAO;AAAA,QACT;AAGA,YAAI,OAAO,OAAO,MAAM,cAAc,aAAa;AACjD,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT,EAAE;AAMF,UAAI,gBAAgB,SAASC,eAAc,UAAU,QAAQ;AAC3D,YAAI,UAAU,WAAW;AACzB,YAAI,SAAS,UAAU;AACvB,YAAI,CAAC,WAAW,CAAC,QAAQ;AACvB;AAAA,QACF;AAGA,YAAI,CAAC,OAAO,qBAAqB,CAAC,OAAO,kBAAkB,CAAC,OAAO,kBAAkB;AACnF,eAAK,OAAO;AAAA,QACd,OAAO;AACL,eAAK,OAAO;AAAA,QACd;AAGA,yBAAiB,SAAS,QAAQ,SAAS;AAG3C,sBAAc,SAAS,QAAQ,MAAM;AAGrC,qBAAa,QAAQ,OAAO,cAAc,EAAE;AAC5C,yBAAiB,QAAQ,QAAQ,QAAQ;AAAA,MAC3C;AAOA,eAAS,cAAc,SAAS,QAAQ,QAAQ;AAC9C,YAAI,gBAAgB,iBAAiB;AACrC,YAAI,aAAa,cAAc;AAC/B,YAAI,eAAe,gBAAgB;AACnC,YAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,cAAc;AAClD;AAAA,QACF;AAGA,qBAAa,eAAe,WAAW,MAAM;AAC7C,qBAAa,YAAY,QAAQ,MAAM;AACvC,qBAAa,cAAc,UAAU,MAAM;AAC3C,6BAAqB,eAAe,YAAY,cAAc,MAAM;AACpE,YAAI,OAAO,gBAAgB;AACzB,cAAI,OAAO,OAAO;AAChB,oBAAQ,aAAa,cAAc,aAAa;AAChD,oBAAQ,aAAa,YAAY,aAAa;AAAA,UAChD,OAAO;AACL,oBAAQ,aAAa,cAAc,MAAM;AACzC,oBAAQ,aAAa,YAAY,MAAM;AACvC,oBAAQ,aAAa,eAAe,MAAM;AAAA,UAC5C;AAAA,QACF;AAAA,MACF;AAQA,eAAS,qBAAqB,eAAe,YAAY,cAAc,QAAQ;AAC7E,YAAI,CAAC,OAAO,gBAAgB;AAC1B,sBAAY,CAAC,eAAe,YAAY,YAAY,GAAG,YAAY,MAAM;AACzE;AAAA,QACF;AACA,iBAAS,CAAC,eAAe,YAAY,YAAY,GAAG,YAAY,MAAM;AAGtE,YAAI,OAAO,oBAAoB;AAC7B,wBAAc,MAAM,kBAAkB,OAAO;AAC7C,mBAAS,eAAe,YAAY,iBAAiB,CAAC;AAAA,QACxD;AACA,YAAI,OAAO,iBAAiB;AAC1B,qBAAW,MAAM,kBAAkB,OAAO;AAC1C,mBAAS,YAAY,YAAY,iBAAiB,CAAC;AAAA,QACrD;AACA,YAAI,OAAO,mBAAmB;AAC5B,uBAAa,MAAM,kBAAkB,OAAO;AAC5C,mBAAS,cAAc,YAAY,iBAAiB,CAAC;AAAA,QACvD;AAAA,MACF;AAOA,eAAS,aAAa,QAAQ,YAAY,QAAQ;AAChD,YAAI;AAAA;AAAA,UAAyD,sBAAsB,UAAU;AAAA;AAC7F,eAAO,QAAQ,OAAO,OAAO,OAAO,YAAY,QAAQ,CAAC,GAAG,cAAc;AAC1E,qBAAa,QAAQ,OAAO,GAAG,OAAO,YAAY,YAAY,CAAC,KAAK,EAAE;AACtE,eAAO,aAAa,cAAc,OAAO,GAAG,OAAO,YAAY,iBAAiB,CAAC,KAAK,EAAE;AAGxF,eAAO,YAAY,YAAY,UAAU;AACzC,yBAAiB,QAAQ,QAAQ,GAAG,OAAO,YAAY,QAAQ,CAAC;AAAA,MAClE;AAMA,UAAI,oBAAoB,SAASC,mBAAkB,UAAU,QAAQ;AACnE,YAAI,cAAc,eAAe;AACjC,YAAI,CAAC,aAAa;AAChB;AAAA,QACF;AACA,qBAAa,aAAa,OAAO,mBAAmB,EAAE;AAGtD,yBAAiB,aAAa,QAAQ,aAAa;AACnD,eAAO,aAAa,OAAO,eAAe;AAC1C,oBAAY,aAAa,cAAc,OAAO,wBAAwB,EAAE;AAAA,MAC1E;AAMA,UAAI,kBAAkB,SAASC,iBAAgB,UAAU,QAAQ;AAC/D,YAAI,YAAY,aAAa;AAC7B,YAAI,CAAC,WAAW;AACd;AAAA,QACF;AACA,4BAAoB,WAAW,OAAO,QAAQ;AAC9C,4BAAoB,WAAW,OAAO,QAAQ;AAC9C,wBAAgB,WAAW,OAAO,IAAI;AAGtC,yBAAiB,WAAW,QAAQ,WAAW;AAAA,MACjD;AAMA,eAAS,oBAAoB,WAAW,UAAU;AAChD,YAAI,OAAO,aAAa,UAAU;AAChC,oBAAU,MAAM,aAAa;AAAA,QAC/B,WAAW,CAAC,UAAU;AACpB,mBAAS,CAAC,SAAS,iBAAiB,SAAS,IAAI,GAAG,YAAY,aAAa,CAAC;AAAA,QAChF;AAAA,MACF;AAMA,eAAS,oBAAoB,WAAW,UAAU;AAChD,YAAI,CAAC,UAAU;AACb;AAAA,QACF;AACA,YAAI,YAAY,aAAa;AAC3B,mBAAS,WAAW,YAAY,QAAQ,CAAC;AAAA,QAC3C,OAAO;AACL,eAAK,+DAA+D;AACpE,mBAAS,WAAW,YAAY,MAAM;AAAA,QACxC;AAAA,MACF;AAMA,eAAS,gBAAgB,WAAW,MAAM;AACxC,YAAI,CAAC,MAAM;AACT;AAAA,QACF;AACA,iBAAS,WAAW,YAAY,QAAQ,OAAO,IAAI,CAAC,CAAC;AAAA,MACvD;AAYA,UAAI,eAAe;AAAA,QACjB,aAAa,oBAAI,QAAQ;AAAA,QACzB,UAAU,oBAAI,QAAQ;AAAA,MACxB;AAGA,UAAI,eAAe,CAAC,SAAS,QAAQ,SAAS,UAAU,SAAS,YAAY,UAAU;AAMvF,UAAI,cAAc,SAASC,aAAY,UAAU,QAAQ;AACvD,YAAI,QAAQ,SAAS;AACrB,YAAI,CAAC,OAAO;AACV;AAAA,QACF;AACA,YAAI,cAAc,aAAa,YAAY,IAAI,QAAQ;AACvD,YAAI,WAAW,CAAC,eAAe,OAAO,UAAU,YAAY;AAC5D,qBAAa,QAAQ,SAAU,YAAY;AACzC,cAAI,iBAAiB,sBAAsB,OAAO,YAAY,UAAU,CAAC;AACzE,cAAI,CAAC,gBAAgB;AACnB;AAAA,UACF;AAGA,wBAAc,YAAY,OAAO,eAAe;AAGhD,yBAAe,YAAY,YAAY,UAAU;AACjD,cAAI,UAAU;AACZ,iBAAK,cAAc;AAAA,UACrB;AAAA,QACF,CAAC;AACD,YAAI,OAAO,OAAO;AAChB,cAAI,UAAU;AACZ,sBAAU,MAAM;AAAA,UAClB;AAEA,yBAAe,MAAM;AAAA,QACvB;AAAA,MACF;AAKA,UAAI,YAAY,SAASC,WAAU,QAAQ;AACzC,YAAI,CAAC,OAAO,OAAO;AACjB;AAAA,QACF;AACA,YAAI,CAAC,gBAAgB,OAAO,KAAK,GAAG;AAClC,gBAAM,sCAAsC,OAAO,OAAO,KAAK,eAAe,EAAE,KAAK,KAAK,GAAG,SAAU,EAAE,OAAO,OAAO,OAAO,GAAI,CAAC;AACnI;AAAA,QACF;AACA,YAAI,iBAAiB,kBAAkB,OAAO,KAAK;AACnD,YAAI,QAAQ,gBAAgB,OAAO,KAAK,EAAE,gBAAgB,MAAM;AAChE,aAAK,cAAc;AAGnB,YAAI,OAAO,gBAAgB;AACzB,qBAAW,WAAY;AACrB,uBAAW,KAAK;AAAA,UAClB,CAAC;AAAA,QACH;AAAA,MACF;AAKA,UAAI,mBAAmB,SAASC,kBAAiB,OAAO;AACtD,iBAAS,IAAI,GAAG,IAAI,MAAM,WAAW,QAAQ,KAAK;AAChD,cAAI,WAAW,MAAM,WAAW,CAAC,EAAE;AACnC,cAAI,CAAC,CAAC,MAAM,QAAQ,SAAS,OAAO,EAAE,SAAS,QAAQ,GAAG;AACxD,kBAAM,gBAAgB,QAAQ;AAAA,UAChC;AAAA,QACF;AAAA,MACF;AAMA,UAAI,gBAAgB,SAASC,eAAc,YAAY,iBAAiB;AACtE,YAAI,QAAQ,WAAW,SAAS,GAAG,UAAU;AAC7C,YAAI,CAAC,OAAO;AACV;AAAA,QACF;AACA,yBAAiB,KAAK;AACtB,iBAAS,QAAQ,iBAAiB;AAChC,gBAAM,aAAa,MAAM,gBAAgB,IAAI,CAAC;AAAA,QAChD;AAAA,MACF;AAKA,UAAI,iBAAiB,SAASC,gBAAe,QAAQ;AACnD,YAAI,iBAAiB,kBAAkB,OAAO,KAAK;AACnD,YAAI,QAAQ,OAAO,WAAW,MAAM,UAAU;AAC5C,mBAAS,gBAAgB,OAAO,YAAY,KAAK;AAAA,QACnD;AAAA,MACF;AAMA,UAAI,sBAAsB,SAASC,qBAAoB,OAAO,QAAQ;AACpE,YAAI,CAAC,MAAM,eAAe,OAAO,kBAAkB;AACjD,gBAAM,cAAc,OAAO;AAAA,QAC7B;AAAA,MACF;AAOA,UAAI,gBAAgB,SAASC,eAAc,OAAO,WAAW,QAAQ;AACnE,YAAI,OAAO,YAAY;AACrB,cAAI,QAAQ,SAAS,cAAc,OAAO;AAC1C,cAAI,aAAa,YAAY,aAAa;AAC1C,gBAAM,aAAa,OAAO,MAAM,EAAE;AAClC,gBAAM,YAAY;AAClB,cAAI,QAAQ,OAAO,WAAW,MAAM,UAAU;AAC5C,qBAAS,OAAO,OAAO,YAAY,UAAU;AAAA,UAC/C;AACA,gBAAM,YAAY,OAAO;AACzB,oBAAU,sBAAsB,eAAe,KAAK;AAAA,QACtD;AAAA,MACF;AAMA,UAAI,oBAAoB,SAASC,mBAAkB,WAAW;AAC5D,eAAO,sBAAsB,SAAS,GAAG,YAAY,SAAS,KAAK,YAAY,KAAK;AAAA,MACtF;AAMA,UAAI,wBAAwB,SAASC,uBAAsB,OAAO,YAAY;AAC5E,YAAI,CAAC,UAAU,QAAQ,EAAE,SAAS,QAAQ,UAAU,CAAC,GAAG;AACtD,gBAAM,QAAQ,GAAG,OAAO,UAAU;AAAA,QACpC,WAAW,CAACrE,WAAU,UAAU,GAAG;AACjC,eAAK,iFAAwF,OAAO,QAAQ,UAAU,GAAG,GAAI,CAAC;AAAA,QAChI;AAAA,MACF;AAGA,UAAI,kBAAkB,CAAC;AAOvB,sBAAgB,OAAO,gBAAgB,QAAQ,gBAAgB,WAAW,gBAAgB,SAAS,gBAAgB,MAAM,gBAAgB,MAAM,gBAAgB,SAAS,gBAAgB,OAAO,gBAAgB,gBAAgB,IAAI,gBAAgB,OAAO,gBAAgB,OAAO,gBAAgB,QAAQ,SAAU,OAAO,QAAQ;AAChU,8BAAsB,OAAO,OAAO,UAAU;AAC9C,sBAAc,OAAO,OAAO,MAAM;AAClC,4BAAoB,OAAO,MAAM;AACjC,cAAM,OAAO,OAAO;AACpB,eAAO;AAAA,MACT;AAOA,sBAAgB,OAAO,SAAU,OAAO,QAAQ;AAC9C,sBAAc,OAAO,OAAO,MAAM;AAClC,4BAAoB,OAAO,MAAM;AACjC,eAAO;AAAA,MACT;AAOA,sBAAgB,QAAQ,SAAU,OAAO,QAAQ;AAC/C,YAAI,aAAa,MAAM,cAAc,OAAO;AAC5C,YAAI,cAAc,MAAM,cAAc,QAAQ;AAC9C,8BAAsB,YAAY,OAAO,UAAU;AACnD,mBAAW,OAAO,OAAO;AACzB,8BAAsB,aAAa,OAAO,UAAU;AACpD,sBAAc,YAAY,OAAO,MAAM;AACvC,eAAO;AAAA,MACT;AAOA,sBAAgB,SAAS,SAAU,QAAQ,QAAQ;AACjD,eAAO,cAAc;AACrB,YAAI,OAAO,kBAAkB;AAC3B,cAAI,cAAc,SAAS,cAAc,QAAQ;AACjD,uBAAa,aAAa,OAAO,gBAAgB;AACjD,sBAAY,QAAQ;AACpB,sBAAY,WAAW;AACvB,sBAAY,WAAW;AACvB,iBAAO,YAAY,WAAW;AAAA,QAChC;AACA,sBAAc,QAAQ,QAAQ,MAAM;AACpC,eAAO;AAAA,MACT;AAMA,sBAAgB,QAAQ,SAAU,OAAO;AACvC,cAAM,cAAc;AACpB,eAAO;AAAA,MACT;AAOA,sBAAgB,WAAW,SAAU,mBAAmB,QAAQ;AAC9D,YAAI,WAAW,WAAW,SAAS,GAAG,UAAU;AAChD,iBAAS,QAAQ;AACjB,iBAAS,UAAU,QAAQ,OAAO,UAAU;AAC5C,YAAI,QAAQ,kBAAkB,cAAc,MAAM;AAClD,qBAAa,OAAO,OAAO,gBAAgB;AAC3C,eAAO;AAAA,MACT;AAOA,sBAAgB,WAAW,SAAU,UAAU,QAAQ;AACrD,8BAAsB,UAAU,OAAO,UAAU;AACjD,4BAAoB,UAAU,MAAM;AACpC,sBAAc,UAAU,UAAU,MAAM;AAMxC,YAAI,YAAY,SAASsE,WAAU,IAAI;AACrC,iBAAO,SAAS,OAAO,iBAAiB,EAAE,EAAE,UAAU,IAAI,SAAS,OAAO,iBAAiB,EAAE,EAAE,WAAW;AAAA,QAC5G;AAGA,mBAAW,WAAY;AAErB,cAAI,sBAAsB,QAAQ;AAChC,gBAAI,oBAAoB,SAAS,OAAO,iBAAiB,SAAS,CAAC,EAAE,KAAK;AAC1E,gBAAI,wBAAwB,SAASC,yBAAwB;AAE3D,kBAAI,CAAC,SAAS,KAAK,SAAS,QAAQ,GAAG;AACrC;AAAA,cACF;AACA,kBAAI,gBAAgB,SAAS,cAAc,UAAU,QAAQ;AAC7D,kBAAI,gBAAgB,mBAAmB;AACrC,yBAAS,EAAE,MAAM,QAAQ,GAAG,OAAO,eAAe,IAAI;AAAA,cACxD,OAAO;AACL,oCAAoB,SAAS,GAAG,SAAS,OAAO,KAAK;AAAA,cACvD;AAAA,YACF;AACA,gBAAI,iBAAiB,qBAAqB,EAAE,QAAQ,UAAU;AAAA,cAC5D,YAAY;AAAA,cACZ,iBAAiB,CAAC,OAAO;AAAA,YAC3B,CAAC;AAAA,UACH;AAAA,QACF,CAAC;AACD,eAAO;AAAA,MACT;AAMA,UAAI,gBAAgB,SAASC,eAAc,UAAU,QAAQ;AAC3D,YAAI,gBAAgB,iBAAiB;AACrC,YAAI,CAAC,eAAe;AAClB;AAAA,QACF;AACA,iCAAyB,aAAa;AACtC,yBAAiB,eAAe,QAAQ,eAAe;AAGvD,YAAI,OAAO,MAAM;AACf,+BAAqB,OAAO,MAAM,aAAa;AAC/C,eAAK,eAAe,OAAO;AAAA,QAC7B,WAGS,OAAO,MAAM;AACpB,wBAAc,cAAc,OAAO;AACnC,eAAK,eAAe,OAAO;AAAA,QAC7B,OAGK;AACH,eAAK,aAAa;AAAA,QACpB;AACA,oBAAY,UAAU,MAAM;AAAA,MAC9B;AAMA,UAAI,eAAe,SAASC,cAAa,UAAU,QAAQ;AACzD,YAAI,SAAS,UAAU;AACvB,YAAI,CAAC,QAAQ;AACX;AAAA,QACF;AACA,iCAAyB,MAAM;AAC/B,eAAO,QAAQ,OAAO,QAAQ,OAAO;AACrC,YAAI,OAAO,QAAQ;AACjB,+BAAqB,OAAO,QAAQ,MAAM;AAAA,QAC5C;AAGA,yBAAiB,QAAQ,QAAQ,QAAQ;AAAA,MAC3C;AAMA,UAAI,aAAa,SAASC,YAAW,UAAU,QAAQ;AACrD,YAAI,cAAc,aAAa,YAAY,IAAI,QAAQ;AACvD,YAAI,OAAO,QAAQ;AACnB,YAAI,CAAC,MAAM;AACT;AAAA,QACF;AAGA,YAAI,eAAe,OAAO,SAAS,YAAY,MAAM;AAEnD,qBAAW,MAAM,MAAM;AACvB,sBAAY,MAAM,MAAM;AACxB;AAAA,QACF;AACA,YAAI,CAAC,OAAO,QAAQ,CAAC,OAAO,UAAU;AACpC,eAAK,IAAI;AACT;AAAA,QACF;AACA,YAAI,OAAO,QAAQ,OAAO,KAAK,SAAS,EAAE,QAAQ,OAAO,IAAI,MAAM,IAAI;AACrE,gBAAM,oFAA+F,OAAO,OAAO,MAAM,GAAI,CAAC;AAC9H,eAAK,IAAI;AACT;AAAA,QACF;AACA,aAAK,IAAI;AAGT,mBAAW,MAAM,MAAM;AACvB,oBAAY,MAAM,MAAM;AAGxB,iBAAS,MAAM,OAAO,aAAa,OAAO,UAAU,IAAI;AAAA,MAC1D;AAMA,UAAI,cAAc,SAASC,aAAY,MAAM,QAAQ;AACnD,iBAAS,KAAK,GAAG,kBAAkB,OAAO,QAAQ,SAAS,GAAG,KAAK,gBAAgB,QAAQ,MAAM;AAC/F,cAAI,qBAAqB,eAAe,gBAAgB,EAAE,GAAG,CAAC,GAC5D,WAAW,mBAAmB,CAAC,GAC/B,gBAAgB,mBAAmB,CAAC;AACtC,cAAI,OAAO,SAAS,UAAU;AAC5B,wBAAY,MAAM,aAAa;AAAA,UACjC;AAAA,QACF;AACA,iBAAS,MAAM,OAAO,QAAQ,UAAU,OAAO,IAAI,CAAC;AAGpD,iBAAS,MAAM,MAAM;AAGrB,yCAAiC;AAGjC,yBAAiB,MAAM,QAAQ,MAAM;AAAA,MACvC;AAGA,UAAI,mCAAmC,SAASC,oCAAmC;AACjF,YAAI,QAAQ,SAAS;AACrB,YAAI,CAAC,OAAO;AACV;AAAA,QACF;AACA,YAAI,uBAAuB,OAAO,iBAAiB,KAAK,EAAE,iBAAiB,kBAAkB;AAE7F,YAAI,mBAAmB,MAAM,iBAAiB,0DAA0D;AACxG,iBAAS,IAAI,GAAG,IAAI,iBAAiB,QAAQ,KAAK;AAChD,2BAAiB,CAAC,EAAE,MAAM,kBAAkB;AAAA,QAC9C;AAAA,MACF;AACA,UAAI,kBAAkB;AACtB,UAAI,gBAAgB;AAMpB,UAAI,aAAa,SAASC,YAAW,MAAM,QAAQ;AACjD,YAAI,CAAC,OAAO,QAAQ,CAAC,OAAO,UAAU;AACpC;AAAA,QACF;AACA,YAAI,aAAa,KAAK;AACtB,YAAI,aAAa;AACjB,YAAI,OAAO,UAAU;AACnB,uBAAa,YAAY,OAAO,QAAQ;AAAA,QAC1C,WAAW,OAAO,SAAS,WAAW;AACpC,uBAAa;AACb,uBAAa,WAAW,QAAQ,iBAAiB,EAAE;AAAA,QACrD,WAAW,OAAO,SAAS,SAAS;AAClC,uBAAa;AAAA,QACf,WAAW,OAAO,MAAM;AACtB,cAAI,kBAAkB;AAAA,YACpB,UAAU;AAAA,YACV,SAAS;AAAA,YACT,MAAM;AAAA,UACR;AACA,uBAAa,YAAY,gBAAgB,OAAO,IAAI,CAAC;AAAA,QACvD;AACA,YAAI,WAAW,KAAK,MAAM,WAAW,KAAK,GAAG;AAC3C,uBAAa,MAAM,UAAU;AAAA,QAC/B;AAAA,MACF;AAMA,UAAI,WAAW,SAASC,UAAS,MAAM,QAAQ;AAC7C,YAAI,CAAC,OAAO,WAAW;AACrB;AAAA,QACF;AACA,aAAK,MAAM,QAAQ,OAAO;AAC1B,aAAK,MAAM,cAAc,OAAO;AAChC,iBAAS,MAAM,GAAG,OAAO,CAAC,2BAA2B,4BAA4B,2BAA2B,0BAA0B,GAAG,MAAM,KAAK,QAAQ,OAAO;AACjK,cAAI,MAAM,KAAK,GAAG;AAClB,mBAAS,MAAM,KAAK,mBAAmB,OAAO,SAAS;AAAA,QACzD;AACA,iBAAS,MAAM,uBAAuB,eAAe,OAAO,SAAS;AAAA,MACvE;AAMA,UAAI,cAAc,SAASC,aAAY,SAAS;AAC9C,eAAO,eAAgB,OAAO,YAAY,cAAc,GAAG,IAAK,EAAE,OAAO,SAAS,QAAQ;AAAA,MAC5F;AAMA,UAAI,cAAc,SAASC,aAAY,UAAU,QAAQ;AACvD,YAAI,QAAQ,SAAS;AACrB,YAAI,CAAC,OAAO;AACV;AAAA,QACF;AACA,YAAI,CAAC,OAAO,UAAU;AACpB,eAAK,KAAK;AACV;AAAA,QACF;AACA,aAAK,OAAO,EAAE;AAGd,cAAM,aAAa,OAAO,OAAO,QAAQ;AACzC,cAAM,aAAa,OAAO,OAAO,YAAY,EAAE;AAG/C,4BAAoB,OAAO,SAAS,OAAO,UAAU;AACrD,4BAAoB,OAAO,UAAU,OAAO,WAAW;AAGvD,cAAM,YAAY,YAAY;AAC9B,yBAAiB,OAAO,QAAQ,OAAO;AAAA,MACzC;AAMA,UAAI,cAAc,SAASC,aAAY,UAAU,QAAQ;AACvD,YAAI,YAAY,aAAa;AAC7B,YAAI,QAAQ,SAAS;AACrB,YAAI,CAAC,aAAa,CAAC,OAAO;AACxB;AAAA,QACF;AAIA,YAAI,OAAO,OAAO;AAChB,8BAAoB,WAAW,SAAS,OAAO,KAAK;AACpD,gBAAM,MAAM,QAAQ;AACpB,cAAI,SAAS,UAAU;AACvB,oBAAU,MAAM,aAAa,QAAQ,QAAQ,CAAC;AAAA,QAChD,OAAO;AACL,8BAAoB,OAAO,SAAS,OAAO,KAAK;AAAA,QAClD;AAGA,4BAAoB,OAAO,WAAW,OAAO,OAAO;AAGpD,YAAI,OAAO,OAAO;AAChB,gBAAM,MAAM,QAAQ,OAAO;AAAA,QAC7B;AAGA,YAAI,OAAO,YAAY;AACrB,gBAAM,MAAM,aAAa,OAAO;AAAA,QAClC;AACA,aAAK,qBAAqB,CAAC;AAG3B,qBAAa,OAAO,MAAM;AAAA,MAC5B;AAMA,UAAI,eAAe,SAASC,YAAW,OAAO,QAAQ;AACpD,YAAI,YAAY,OAAO,aAAa,CAAC;AAErC,cAAM,YAAY,GAAG,OAAO,YAAY,OAAO,GAAG,EAAE,OAAO,YAAY,KAAK,IAAI,UAAU,QAAQ,EAAE;AACpG,YAAI,OAAO,OAAO;AAChB,mBAAS,CAAC,SAAS,iBAAiB,SAAS,IAAI,GAAG,YAAY,aAAa,CAAC;AAC9E,mBAAS,OAAO,YAAY,KAAK;AAAA,QACnC,OAAO;AACL,mBAAS,OAAO,YAAY,KAAK;AAAA,QACnC;AAGA,yBAAiB,OAAO,QAAQ,OAAO;AACvC,YAAI,OAAO,OAAO,gBAAgB,UAAU;AAC1C,mBAAS,OAAO,OAAO,WAAW;AAAA,QACpC;AAGA,YAAI,OAAO,MAAM;AACf,mBAAS,OAAO,YAAY,QAAQ,OAAO,OAAO,IAAI,CAAC,CAAC;AAAA,QAC1D;AAAA,MACF;AAMA,UAAI,sBAAsB,SAASC,qBAAoB,UAAU,QAAQ;AACvE,YAAI,yBAAyB,iBAAiB;AAC9C,YAAI,CAAC,wBAAwB;AAC3B;AAAA,QACF;AACA,YAAI,gBAAgB,OAAO,eACzB,sBAAsB,OAAO;AAC/B,YAAI,CAAC,iBAAiB,cAAc,WAAW,KAAK,wBAAwB,QAAW;AACrF,eAAK,sBAAsB;AAC3B;AAAA,QACF;AACA,aAAK,sBAAsB;AAC3B,+BAAuB,cAAc;AACrC,YAAI,uBAAuB,cAAc,QAAQ;AAC/C,eAAK,uIAA4I;AAAA,QACnJ;AACA,sBAAc,QAAQ,SAAU,MAAM,OAAO;AAC3C,cAAI,SAAS,kBAAkB,IAAI;AACnC,iCAAuB,YAAY,MAAM;AACzC,cAAI,UAAU,qBAAqB;AACjC,qBAAS,QAAQ,YAAY,sBAAsB,CAAC;AAAA,UACtD;AACA,cAAI,UAAU,cAAc,SAAS,GAAG;AACtC,gBAAI,SAAS,kBAAkB,MAAM;AACrC,mCAAuB,YAAY,MAAM;AAAA,UAC3C;AAAA,QACF,CAAC;AAAA,MACH;AAMA,UAAI,oBAAoB,SAASC,mBAAkB,MAAM;AACvD,YAAI,SAAS,SAAS,cAAc,IAAI;AACxC,iBAAS,QAAQ,YAAY,eAAe,CAAC;AAC7C,qBAAa,QAAQ,IAAI;AACzB,eAAO;AAAA,MACT;AAMA,UAAI,oBAAoB,SAASC,mBAAkB,QAAQ;AACzD,YAAI,SAAS,SAAS,cAAc,IAAI;AACxC,iBAAS,QAAQ,YAAY,oBAAoB,CAAC;AAClD,YAAI,OAAO,uBAAuB;AAChC,8BAAoB,QAAQ,SAAS,OAAO,qBAAqB;AAAA,QACnE;AACA,eAAO;AAAA,MACT;AAMA,UAAI,cAAc,SAASC,aAAY,UAAU,QAAQ;AACvD,YAAI,QAAQ,SAAS;AACrB,YAAI,CAAC,OAAO;AACV;AAAA,QACF;AACA,iCAAyB,KAAK;AAC9B,eAAO,OAAO,OAAO,SAAS,OAAO,WAAW,OAAO;AACvD,YAAI,OAAO,OAAO;AAChB,+BAAqB,OAAO,OAAO,KAAK;AAAA,QAC1C;AACA,YAAI,OAAO,WAAW;AACpB,gBAAM,YAAY,OAAO;AAAA,QAC3B;AAGA,yBAAiB,OAAO,QAAQ,OAAO;AAAA,MACzC;AAMA,UAAI,SAAS,SAASC,QAAO,UAAU,QAAQ;AAC7C,oBAAY,UAAU,MAAM;AAC5B,wBAAgB,UAAU,MAAM;AAChC,4BAAoB,UAAU,MAAM;AACpC,mBAAW,UAAU,MAAM;AAC3B,oBAAY,UAAU,MAAM;AAC5B,oBAAY,UAAU,MAAM;AAC5B,0BAAkB,UAAU,MAAM;AAClC,sBAAc,UAAU,MAAM;AAC9B,sBAAc,UAAU,MAAM;AAC9B,qBAAa,UAAU,MAAM;AAC7B,YAAI,QAAQ,SAAS;AACrB,YAAI,OAAO,OAAO,cAAc,cAAc,OAAO;AACnD,iBAAO,UAAU,KAAK;AAAA,QACxB;AAAA,MACF;AAKA,UAAI,YAAY,SAAS9C,aAAY;AACnC,eAAO,YAAY,SAAS,CAAC;AAAA,MAC/B;AAKA,UAAI,eAAe,SAAS+C,gBAAe;AACzC,YAAI;AACJ,gBAAQ,wBAAwB,iBAAiB,OAAO,QAAQ,0BAA0B,SAAS,SAAS,sBAAsB,MAAM;AAAA,MAC1I;AAKA,UAAI,YAAY,SAASC,aAAY;AACnC,YAAI;AACJ,gBAAQ,qBAAqB,cAAc,OAAO,QAAQ,uBAAuB,SAAS,SAAS,mBAAmB,MAAM;AAAA,MAC9H;AAKA,UAAI,cAAc,SAASC,eAAc;AACvC,YAAI;AACJ,gBAAQ,uBAAuB,gBAAgB,OAAO,QAAQ,yBAAyB,SAAS,SAAS,qBAAqB,MAAM;AAAA,MACtI;AAKA,UAAI,gBAAgB,OAAO,OAAO;AAAA,QAChC,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,OAAO;AAAA,QACP,KAAK;AAAA,QACL,OAAO;AAAA,MACT,CAAC;AAKD,UAAI,uBAAuB,SAASC,sBAAqBC,cAAa;AACpE,YAAIA,aAAY,iBAAiBA,aAAY,qBAAqB;AAChE,UAAAA,aAAY,cAAc,oBAAoB,WAAWA,aAAY,gBAAgB;AAAA,YACnF,SAASA,aAAY;AAAA,UACvB,CAAC;AACD,UAAAA,aAAY,sBAAsB;AAAA,QACpC;AAAA,MACF;AAOA,UAAI,oBAAoB,SAASC,mBAAkBD,cAAa,aAAa,aAAa;AACxF,6BAAqBA,YAAW;AAChC,YAAI,CAAC,YAAY,OAAO;AACtB,UAAAA,aAAY,iBAAiB,SAAU,GAAG;AACxC,mBAAO,eAAe,aAAa,GAAG,WAAW;AAAA,UACnD;AACA,UAAAA,aAAY,gBAAgB,YAAY,yBAAyB,SAAS,SAAS;AACnF,UAAAA,aAAY,yBAAyB,YAAY;AACjD,UAAAA,aAAY,cAAc,iBAAiB,WAAWA,aAAY,gBAAgB;AAAA,YAChF,SAASA,aAAY;AAAA,UACvB,CAAC;AACD,UAAAA,aAAY,sBAAsB;AAAA,QACpC;AAAA,MACF;AAMA,UAAI,WAAW,SAASE,UAAS,OAAO,WAAW;AACjD,YAAI;AACJ,YAAI,oBAAoB,qBAAqB;AAE7C,YAAI,kBAAkB,QAAQ;AAC5B,kBAAQ,QAAQ;AAGhB,cAAI,UAAU,kBAAkB,QAAQ;AACtC,oBAAQ;AAAA,UAGV,WAAW,UAAU,IAAI;AACvB,oBAAQ,kBAAkB,SAAS;AAAA,UACrC;AACA,4BAAkB,KAAK,EAAE,MAAM;AAC/B;AAAA,QACF;AAEA,SAAC,gBAAgB,SAAS,OAAO,QAAQ,kBAAkB,UAAU,cAAc,MAAM;AAAA,MAC3F;AACA,UAAI,sBAAsB,CAAC,cAAc,WAAW;AACpD,UAAI,0BAA0B,CAAC,aAAa,SAAS;AAOrD,UAAI,iBAAiB,SAASC,gBAAe,aAAa,OAAO,aAAa;AAC5E,YAAI,CAAC,aAAa;AAChB;AAAA,QACF;AAMA,YAAI,MAAM,eAAe,MAAM,YAAY,KAAK;AAC9C;AAAA,QACF;AACA,YAAI,YAAY,wBAAwB;AACtC,gBAAM,gBAAgB;AAAA,QACxB;AAGA,YAAI,MAAM,QAAQ,SAAS;AACzB,sBAAY,OAAO,WAAW;AAAA,QAChC,WAGS,MAAM,QAAQ,OAAO;AAC5B,oBAAU,KAAK;AAAA,QACjB,WAGS,CAAC,EAAE,OAAO,qBAAqB,uBAAuB,EAAE,SAAS,MAAM,GAAG,GAAG;AACpF,uBAAa,MAAM,GAAG;AAAA,QACxB,WAGS,MAAM,QAAQ,UAAU;AAC/B,oBAAU,OAAO,aAAa,WAAW;AAAA,QAC3C;AAAA,MACF;AAMA,UAAI,cAAc,SAASC,aAAY,OAAO,aAAa;AAEzD,YAAI,CAAC,eAAe,YAAY,aAAa,GAAG;AAC9C;AAAA,QACF;AACA,YAAI,QAAQ,WAAW,SAAS,GAAG,YAAY,KAAK;AACpD,YAAI,MAAM,UAAU,SAAS,MAAM,kBAAkB,eAAe,MAAM,OAAO,cAAc,MAAM,WAAW;AAC9G,cAAI,CAAC,YAAY,MAAM,EAAE,SAAS,YAAY,KAAK,GAAG;AACpD;AAAA,UACF;AAEA,uBAAa;AACb,gBAAM,eAAe;AAAA,QACvB;AAAA,MACF;AAKA,UAAI,YAAY,SAASC,WAAU,OAAO;AACxC,YAAI,gBAAgB,MAAM;AAC1B,YAAI,oBAAoB,qBAAqB;AAC7C,YAAI,WAAW;AACf,iBAAS,IAAI,GAAG,IAAI,kBAAkB,QAAQ,KAAK;AACjD,cAAI,kBAAkB,kBAAkB,CAAC,GAAG;AAC1C,uBAAW;AACX;AAAA,UACF;AAAA,QACF;AAGA,YAAI,CAAC,MAAM,UAAU;AACnB,mBAAS,UAAU,CAAC;AAAA,QACtB,OAGK;AACH,mBAAS,UAAU,EAAE;AAAA,QACvB;AACA,cAAM,gBAAgB;AACtB,cAAM,eAAe;AAAA,MACvB;AAKA,UAAI,eAAe,SAASC,cAAa,KAAK;AAC5C,YAAI,UAAU,WAAW;AACzB,YAAI,gBAAgB,iBAAiB;AACrC,YAAI,aAAa,cAAc;AAC/B,YAAI,eAAe,gBAAgB;AACnC,YAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,cAAc,CAAC,cAAc;AAC9D;AAAA,QACF;AAEA,YAAI,UAAU,CAAC,eAAe,YAAY,YAAY;AACtD,YAAI,SAAS,yBAAyB,eAAe,CAAC,QAAQ,SAAS,SAAS,aAAa,GAAG;AAC9F;AAAA,QACF;AACA,YAAI,UAAU,oBAAoB,SAAS,GAAG,IAAI,uBAAuB;AACzE,YAAI,gBAAgB,SAAS;AAC7B,YAAI,CAAC,eAAe;AAClB;AAAA,QACF;AACA,iBAAS,IAAI,GAAG,IAAI,QAAQ,SAAS,QAAQ,KAAK;AAChD,0BAAgB,cAAc,OAAO;AACrC,cAAI,CAAC,eAAe;AAClB;AAAA,UACF;AACA,cAAI,yBAAyB,qBAAqB,YAAY,aAAa,GAAG;AAC5E;AAAA,UACF;AAAA,QACF;AACA,YAAI,yBAAyB,mBAAmB;AAC9C,wBAAc,MAAM;AAAA,QACtB;AAAA,MACF;AAOA,UAAI,YAAY,SAASC,WAAU,OAAO,aAAa,aAAa;AAClE,YAAI,eAAe,YAAY,cAAc,GAAG;AAC9C,gBAAM,eAAe;AACrB,sBAAY,cAAc,GAAG;AAAA,QAC/B;AAAA,MACF;AAYA,UAAI,iBAAiB;AAAA,QACnB,oBAAoB,oBAAI,QAAQ;AAAA,QAChC,mBAAmB,oBAAI,QAAQ;AAAA,MACjC;AAOA,UAAI,gBAAgB,SAASC,iBAAgB;AAC3C,YAAI,eAAe,MAAM,KAAK,SAAS,KAAK,QAAQ;AACpD,qBAAa,QAAQ,SAAU,IAAI;AACjC,cAAI,OAAO,aAAa,KAAK,GAAG,SAAS,aAAa,CAAC,GAAG;AACxD;AAAA,UACF;AACA,cAAI,GAAG,aAAa,aAAa,GAAG;AAClC,eAAG,aAAa,6BAA6B,GAAG,aAAa,aAAa,KAAK,EAAE;AAAA,UACnF;AACA,aAAG,aAAa,eAAe,MAAM;AAAA,QACvC,CAAC;AAAA,MACH;AACA,UAAI,kBAAkB,SAASC,mBAAkB;AAC/C,YAAI,eAAe,MAAM,KAAK,SAAS,KAAK,QAAQ;AACpD,qBAAa,QAAQ,SAAU,IAAI;AACjC,cAAI,GAAG,aAAa,2BAA2B,GAAG;AAChD,eAAG,aAAa,eAAe,GAAG,aAAa,2BAA2B,KAAK,EAAE;AACjF,eAAG,gBAAgB,2BAA2B;AAAA,UAChD,OAAO;AACL,eAAG,gBAAgB,aAAa;AAAA,UAClC;AAAA,QACF,CAAC;AAAA,MACH;AAGA,UAAI,gBAAgB,OAAO,WAAW,eAAe,CAAC,CAAC,OAAO;AAM9D,UAAI,SAAS,SAASC,UAAS;AAC7B,YAAI,iBAAiB,CAAC,SAAS,SAAS,MAAM,YAAY,MAAM,GAAG;AACjE,cAAI,SAAS,SAAS,KAAK;AAC3B,mBAAS,KAAK,MAAM,MAAM,GAAG,OAAO,SAAS,IAAI,IAAI;AACrD,mBAAS,SAAS,MAAM,YAAY,MAAM;AAC1C,yBAAe;AAAA,QACjB;AAAA,MACF;AAKA,UAAI,iBAAiB,SAASC,kBAAiB;AAC7C,YAAI,YAAY,aAAa;AAC7B,YAAI,CAAC,WAAW;AACd;AAAA,QACF;AAEA,YAAI;AAIJ,kBAAU,eAAe,SAAU,OAAO;AACxC,6BAAmB,uBAAuB,KAAK;AAAA,QACjD;AAIA,kBAAU,cAAc,SAAU,OAAO;AACvC,cAAI,kBAAkB;AACpB,kBAAM,eAAe;AACrB,kBAAM,gBAAgB;AAAA,UACxB;AAAA,QACF;AAAA,MACF;AAMA,UAAI,yBAAyB,SAASC,wBAAuB,OAAO;AAClE,YAAI,SAAS,MAAM;AACnB,YAAI,YAAY,aAAa;AAC7B,YAAI,gBAAgB,iBAAiB;AACrC,YAAI,CAAC,aAAa,CAAC,eAAe;AAChC,iBAAO;AAAA,QACT;AACA,YAAI,SAAS,KAAK,KAAK,OAAO,KAAK,GAAG;AACpC,iBAAO;AAAA,QACT;AACA,YAAI,WAAW,WAAW;AACxB,iBAAO;AAAA,QACT;AACA,YAAI,CAAC,aAAa,SAAS,KAAK,kBAAkB,eAAe,OAAO,YAAY;AAAA,QAEpF,OAAO,YAAY;AAAA,QAEnB,EAAE,aAAa,aAAa;AAAA,QAE5B,cAAc,SAAS,MAAM,IAAI;AAC/B,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAQA,UAAI,WAAW,SAASC,UAAS,OAAO;AACtC,eAAO,MAAM,WAAW,MAAM,QAAQ,UAAU,MAAM,QAAQ,CAAC,EAAE,cAAc;AAAA,MACjF;AAQA,UAAI,SAAS,SAASC,QAAO,OAAO;AAClC,eAAO,MAAM,WAAW,MAAM,QAAQ,SAAS;AAAA,MACjD;AACA,UAAI,aAAa,SAASC,cAAa;AACrC,YAAI,SAAS,SAAS,MAAM,YAAY,MAAM,GAAG;AAC/C,cAAI,SAAS,SAAS,SAAS,KAAK,MAAM,KAAK,EAAE;AACjD,sBAAY,SAAS,MAAM,YAAY,MAAM;AAC7C,mBAAS,KAAK,MAAM,MAAM;AAC1B,mBAAS,KAAK,YAAY,SAAS;AAAA,QACrC;AAAA,MACF;AAQA,UAAI,mBAAmB,SAASC,oBAAmB;AACjD,YAAI,YAAY,SAAS,cAAc,KAAK;AAC5C,kBAAU,YAAY,YAAY,mBAAmB;AACrD,iBAAS,KAAK,YAAY,SAAS;AACnC,YAAI,iBAAiB,UAAU,sBAAsB,EAAE,QAAQ,UAAU;AACzE,iBAAS,KAAK,YAAY,SAAS;AACnC,eAAO;AAAA,MACT;AAMA,UAAI,sBAAsB;AAK1B,UAAI,8BAA8B,SAASC,6BAA4B,qBAAqB;AAE1F,YAAI,wBAAwB,MAAM;AAChC;AAAA,QACF;AAEA,YAAI,SAAS,KAAK,eAAe,OAAO,eAAe,wBAAwB,UAC7E;AAEA,gCAAsB,SAAS,OAAO,iBAAiB,SAAS,IAAI,EAAE,iBAAiB,eAAe,CAAC;AACvG,mBAAS,KAAK,MAAM,eAAe,GAAG,OAAO,sBAAsB,iBAAiB,GAAG,IAAI;AAAA,QAC7F;AAAA,MACF;AACA,UAAI,kCAAkC,SAASC,mCAAkC;AAC/E,YAAI,wBAAwB,MAAM;AAChC,mBAAS,KAAK,MAAM,eAAe,GAAG,OAAO,qBAAqB,IAAI;AACtE,gCAAsB;AAAA,QACxB;AAAA,MACF;AAQA,eAAS,yBAAyB,UAAU,WAAW,aAAa,UAAU;AAC5E,YAAI,QAAQ,GAAG;AACb,oCAA0B,UAAU,QAAQ;AAAA,QAC9C,OAAO;AACL,+BAAqB,WAAW,EAAE,KAAK,WAAY;AACjD,mBAAO,0BAA0B,UAAU,QAAQ;AAAA,UACrD,CAAC;AACD,+BAAqB,WAAW;AAAA,QAClC;AAIA,YAAI,eAAe;AACjB,oBAAU,aAAa,SAAS,yBAAyB;AACzD,oBAAU,gBAAgB,OAAO;AACjC,oBAAU,YAAY;AAAA,QACxB,OAAO;AACL,oBAAU,OAAO;AAAA,QACnB;AACA,YAAI,QAAQ,GAAG;AACb,0CAAgC;AAChC,qBAAW;AACX,0BAAgB;AAAA,QAClB;AACA,0BAAkB;AAAA,MACpB;AAKA,eAAS,oBAAoB;AAC3B,oBAAY,CAAC,SAAS,iBAAiB,SAAS,IAAI,GAAG,CAAC,YAAY,OAAO,YAAY,aAAa,GAAG,YAAY,aAAa,GAAG,YAAY,aAAa,CAAC,CAAC;AAAA,MAChK;AAOA,eAAS,MAAM,cAAc;AAC3B,uBAAe,oBAAoB,YAAY;AAC/C,YAAI,qBAAqB,eAAe,mBAAmB,IAAI,IAAI;AACnE,YAAI,WAAW,kBAAkB,IAAI;AACrC,YAAI,KAAK,mBAAmB;AAE1B,cAAI,CAAC,aAAa,aAAa;AAC7B,kCAAsB,IAAI;AAC1B,+BAAmB,YAAY;AAAA,UACjC;AAAA,QACF,WAAW,UAAU;AAEnB,6BAAmB,YAAY;AAAA,QACjC;AAAA,MACF;AACA,UAAI,oBAAoB,SAASC,mBAAkB,UAAU;AAC3D,YAAI,QAAQ,SAAS;AACrB,YAAI,CAAC,OAAO;AACV,iBAAO;AAAA,QACT;AACA,YAAI,cAAc,aAAa,YAAY,IAAI,QAAQ;AACvD,YAAI,CAAC,eAAe,SAAS,OAAO,YAAY,UAAU,KAAK,GAAG;AAChE,iBAAO;AAAA,QACT;AACA,oBAAY,OAAO,YAAY,UAAU,KAAK;AAC9C,iBAAS,OAAO,YAAY,UAAU,KAAK;AAC3C,YAAI,WAAW,aAAa;AAC5B,oBAAY,UAAU,YAAY,UAAU,QAAQ;AACpD,iBAAS,UAAU,YAAY,UAAU,QAAQ;AACjD,6BAAqB,UAAU,OAAO,WAAW;AACjD,eAAO;AAAA,MACT;AAKA,eAAS,cAAcrH,QAAO;AAC5B,YAAIsH,iBAAgB,eAAe,kBAAkB,IAAI,IAAI;AAC7D,8BAAsB,IAAI;AAC1B,YAAIA,gBAAe;AAEjB,UAAAA,eAActH,MAAK;AAAA,QACrB;AAAA,MACF;AAKA,UAAI,wBAAwB,SAASuH,uBAAsB,UAAU;AACnE,YAAI,SAAS,mBAAmB;AAC9B,iBAAO,SAAS;AAEhB,cAAI,CAAC,aAAa,YAAY,IAAI,QAAQ,GAAG;AAC3C,qBAAS,SAAS;AAAA,UACpB;AAAA,QACF;AAAA,MACF;AAMA,UAAI,sBAAsB,SAASC,qBAAoB,cAAc;AAEnE,YAAI,OAAO,iBAAiB,aAAa;AACvC,iBAAO;AAAA,YACL,aAAa;AAAA,YACb,UAAU;AAAA,YACV,aAAa;AAAA,UACf;AAAA,QACF;AACA,eAAO,OAAO,OAAO;AAAA,UACnB,aAAa;AAAA,UACb,UAAU;AAAA,UACV,aAAa;AAAA,QACf,GAAG,YAAY;AAAA,MACjB;AAOA,UAAI,uBAAuB,SAASC,sBAAqB,UAAU,OAAO,aAAa;AACrF,YAAI,YAAY,aAAa;AAE7B,YAAI,uBAAuB,qBAAqB,gBAAgB,KAAK;AACrE,YAAI,OAAO,YAAY,cAAc,YAAY;AAC/C,sBAAY,UAAU,KAAK;AAAA,QAC7B;AACA,YAAI,sBAAsB;AACxB,uBAAa,UAAU,OAAO,WAAW,YAAY,aAAa,YAAY,QAAQ;AAAA,QACxF,OAAO;AAEL,mCAAyB,UAAU,WAAW,YAAY,aAAa,YAAY,QAAQ;AAAA,QAC7F;AAAA,MACF;AASA,UAAI,eAAe,SAASC,cAAa,UAAU,OAAO,WAAW,aAAa,UAAU;AAC1F,YAAI,CAAC,mBAAmB;AACtB;AAAA,QACF;AACA,oBAAY,iCAAiC,yBAAyB,KAAK,MAAM,UAAU,WAAW,aAAa,QAAQ;AAC3H,cAAM,iBAAiB,mBAAmB,SAAU,GAAG;AACrD,cAAI,EAAE,WAAW,OAAO;AACtB,wBAAY,+BAA+B;AAC3C,mBAAO,YAAY;AAAA,UACrB;AAAA,QACF,CAAC;AAAA,MACH;AAMA,UAAI,4BAA4B,SAASC,2BAA0B,UAAU,UAAU;AACrF,mBAAW,WAAY;AACrB,cAAI,OAAO,aAAa,YAAY;AAClC,qBAAS,KAAK,SAAS,MAAM,EAAE;AAAA,UACjC;AAEA,cAAI,SAAS,UAAU;AACrB,qBAAS,SAAS;AAAA,UACpB;AAAA,QACF,CAAC;AAAA,MACH;AAQA,UAAI,cAAc,SAASC,aAAY,iBAAiB;AACtD,YAAI,QAAQ,SAAS;AACrB,YAAI,CAAC,OAAO;AACV,cAAIC,OAAK;AAAA,QACX;AAEA,gBAAQ,SAAS;AACjB,YAAI,CAAC,OAAO;AACV;AAAA,QACF;AACA,YAAI,SAAS,UAAU;AACvB,YAAI,QAAQ,GAAG;AACb,eAAK,QAAQ,CAAC;AAAA,QAChB,OAAO;AACL,wBAAc,OAAO,eAAe;AAAA,QACtC;AACA,aAAK,MAAM;AACX,cAAM,aAAa,gBAAgB,MAAM;AACzC,cAAM,aAAa,aAAa,MAAM;AACtC,cAAM,MAAM;AAAA,MACd;AAMA,UAAI,gBAAgB,SAASC,eAAc,OAAO,iBAAiB;AACjE,YAAI,UAAU,WAAW;AACzB,YAAI,SAAS,UAAU;AACvB,YAAI,CAAC,WAAW,CAAC,QAAQ;AACvB;AAAA,QACF;AACA,YAAI,CAAC,mBAAmB,YAAY,iBAAiB,CAAC,GAAG;AACvD,4BAAkB,iBAAiB;AAAA,QACrC;AACA,aAAK,OAAO;AACZ,YAAI,iBAAiB;AACnB,eAAK,eAAe;AACpB,iBAAO,aAAa,0BAA0B,gBAAgB,SAAS;AACvE,kBAAQ,aAAa,QAAQ,eAAe;AAAA,QAC9C;AACA,iBAAS,CAAC,OAAO,OAAO,GAAG,YAAY,OAAO;AAAA,MAChD;AAMA,UAAI,6BAA6B,SAASC,4BAA2B,UAAU,QAAQ;AACrF,YAAI,OAAO,UAAU,YAAY,OAAO,UAAU,SAAS;AACzD,6BAAmB,UAAU,MAAM;AAAA,QACrC,WAAW,CAAC,QAAQ,SAAS,UAAU,OAAO,UAAU,EAAE,KAAK,SAAU,GAAG;AAC1E,iBAAO,MAAM,OAAO;AAAA,QACtB,CAAC,MAAM,eAAe,OAAO,UAAU,KAAKzH,WAAU,OAAO,UAAU,IAAI;AACzE,sBAAY,iBAAiB,CAAC;AAC9B,2BAAiB,UAAU,MAAM;AAAA,QACnC;AAAA,MACF;AAOA,UAAI,gBAAgB,SAAS0H,eAAc,UAAU,aAAa;AAChE,YAAI,QAAQ,SAAS,SAAS;AAC9B,YAAI,CAAC,OAAO;AACV,iBAAO;AAAA,QACT;AACA,gBAAQ,YAAY,OAAO;AAAA,UACzB,KAAK;AACH,mBAAO,iBAAiB,KAAK;AAAA,UAC/B,KAAK;AACH,mBAAO,cAAc,KAAK;AAAA,UAC5B,KAAK;AACH,mBAAO,aAAa,KAAK;AAAA,UAC3B;AACE,mBAAO,YAAY,gBAAgB,MAAM,MAAM,KAAK,IAAI,MAAM;AAAA,QAClE;AAAA,MACF;AAMA,UAAI,mBAAmB,SAASC,kBAAiB,OAAO;AACtD,eAAO,MAAM,UAAU,IAAI;AAAA,MAC7B;AAMA,UAAI,gBAAgB,SAASC,eAAc,OAAO;AAChD,eAAO,MAAM,UAAU,MAAM,QAAQ;AAAA,MACvC;AAMA,UAAI,eAAe,SAASC,cAAa,OAAO;AAC9C,eAAO,MAAM,SAAS,MAAM,MAAM,SAAS,MAAM,aAAa,UAAU,MAAM,OAAO,MAAM,QAAQ,MAAM,MAAM,CAAC,IAAI;AAAA,MACtH;AAMA,UAAI,qBAAqB,SAASC,oBAAmB,UAAU,QAAQ;AACrE,YAAI,QAAQ,SAAS;AACrB,YAAI,CAAC,OAAO;AACV;AAAA,QACF;AAIA,YAAI,sBAAsB,SAASC,qBAAoB,cAAc;AACnE,cAAI,OAAO,UAAU,UAAU;AAC7B,kCAAsB,OAAO,mBAAmB,YAAY,GAAG,MAAM;AAAA,UACvE,WAAW,OAAO,UAAU,SAAS;AACnC,iCAAqB,OAAO,mBAAmB,YAAY,GAAG,MAAM;AAAA,UACtE;AAAA,QACF;AACA,YAAI,eAAe,OAAO,YAAY,KAAK/H,WAAU,OAAO,YAAY,GAAG;AACzE,sBAAY,iBAAiB,CAAC;AAC9B,oBAAU,OAAO,YAAY,EAAE,KAAK,SAAU,cAAc;AAC1D,qBAAS,YAAY;AACrB,gCAAoB,YAAY;AAAA,UAClC,CAAC;AAAA,QACH,WAAW,QAAQ,OAAO,YAAY,MAAM,UAAU;AACpD,8BAAoB,OAAO,YAAY;AAAA,QACzC,OAAO;AACL,gBAAM,yEAAyE,OAAO,QAAQ,OAAO,YAAY,CAAC,CAAC;AAAA,QACrH;AAAA,MACF;AAMA,UAAI,mBAAmB,SAASgI,kBAAiB,UAAU,QAAQ;AACjE,YAAI,QAAQ,SAAS,SAAS;AAC9B,YAAI,CAAC,OAAO;AACV;AAAA,QACF;AACA,aAAK,KAAK;AACV,kBAAU,OAAO,UAAU,EAAE,KAAK,SAAU,YAAY;AACtD,gBAAM,QAAQ,OAAO,UAAU,WAAW,GAAG,OAAO,WAAW,UAAU,KAAK,CAAC,IAAI,GAAG,OAAO,UAAU;AACvG,eAAK,KAAK;AACV,gBAAM,MAAM;AACZ,mBAAS,YAAY;AAAA,QACvB,CAAC,EAAE,OAAO,EAAE,SAAU,KAAK;AACzB,gBAAM,gCAAgC,OAAO,GAAG,CAAC;AACjD,gBAAM,QAAQ;AACd,eAAK,KAAK;AACV,gBAAM,MAAM;AACZ,mBAAS,YAAY;AAAA,QACvB,CAAC;AAAA,MACH;AAOA,eAAS,sBAAsB,OAAO,cAAc,QAAQ;AAC1D,YAAI,SAAS,sBAAsB,OAAO,YAAY,MAAM;AAC5D,YAAI,CAAC,QAAQ;AACX;AAAA,QACF;AAMA,YAAI,eAAe,SAASC,cAAa,QAAQ,aAAa,aAAa;AACzE,cAAI,SAAS,SAAS,cAAc,QAAQ;AAC5C,iBAAO,QAAQ;AACf,uBAAa,QAAQ,WAAW;AAChC,iBAAO,WAAW,WAAW,aAAa,OAAO,UAAU;AAC3D,iBAAO,YAAY,MAAM;AAAA,QAC3B;AACA,qBAAa,QAAQ,SAAU,aAAa;AAC1C,cAAI,cAAc,YAAY,CAAC;AAC/B,cAAI,cAAc,YAAY,CAAC;AAK/B,cAAI,MAAM,QAAQ,WAAW,GAAG;AAE9B,gBAAI,WAAW,SAAS,cAAc,UAAU;AAChD,qBAAS,QAAQ;AACjB,qBAAS,WAAW;AACpB,mBAAO,YAAY,QAAQ;AAC3B,wBAAY,QAAQ,SAAU,GAAG;AAC/B,qBAAO,aAAa,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAAA,YAC1C,CAAC;AAAA,UACH,OAAO;AAEL,yBAAa,QAAQ,aAAa,WAAW;AAAA,UAC/C;AAAA,QACF,CAAC;AACD,eAAO,MAAM;AAAA,MACf;AAOA,eAAS,qBAAqB,OAAO,cAAc,QAAQ;AACzD,YAAI,QAAQ,sBAAsB,OAAO,YAAY,KAAK;AAC1D,YAAI,CAAC,OAAO;AACV;AAAA,QACF;AACA,qBAAa,QAAQ,SAAU,aAAa;AAC1C,cAAI,aAAa,YAAY,CAAC;AAC9B,cAAI,aAAa,YAAY,CAAC;AAC9B,cAAI,aAAa,SAAS,cAAc,OAAO;AAC/C,cAAI,oBAAoB,SAAS,cAAc,OAAO;AACtD,qBAAW,OAAO;AAClB,qBAAW,OAAO,YAAY;AAC9B,qBAAW,QAAQ;AACnB,cAAI,WAAW,YAAY,OAAO,UAAU,GAAG;AAC7C,uBAAW,UAAU;AAAA,UACvB;AACA,cAAI,QAAQ,SAAS,cAAc,MAAM;AACzC,uBAAa,OAAO,UAAU;AAC9B,gBAAM,YAAY,YAAY;AAC9B,4BAAkB,YAAY,UAAU;AACxC,4BAAkB,YAAY,KAAK;AACnC,gBAAM,YAAY,iBAAiB;AAAA,QACrC,CAAC;AACD,YAAI,SAAS,MAAM,iBAAiB,OAAO;AAC3C,YAAI,OAAO,QAAQ;AACjB,iBAAO,CAAC,EAAE,MAAM;AAAA,QAClB;AAAA,MACF;AASA,UAAI,qBAAqB,SAASC,oBAAmB,cAAc;AAEjE,YAAI,SAAS,CAAC;AACd,YAAI,wBAAwB,KAAK;AAC/B,uBAAa,QAAQ,SAAU,OAAO,KAAK;AACzC,gBAAI,iBAAiB;AACrB,gBAAI,QAAQ,cAAc,MAAM,UAAU;AAExC,+BAAiBA,oBAAmB,cAAc;AAAA,YACpD;AACA,mBAAO,KAAK,CAAC,KAAK,cAAc,CAAC;AAAA,UACnC,CAAC;AAAA,QACH,OAAO;AACL,iBAAO,KAAK,YAAY,EAAE,QAAQ,SAAU,KAAK;AAC/C,gBAAI,iBAAiB,aAAa,GAAG;AACrC,gBAAI,QAAQ,cAAc,MAAM,UAAU;AAExC,+BAAiBA,oBAAmB,cAAc;AAAA,YACpD;AACA,mBAAO,KAAK,CAAC,KAAK,cAAc,CAAC;AAAA,UACnC,CAAC;AAAA,QACH;AACA,eAAO;AAAA,MACT;AAOA,UAAI,aAAa,SAASC,YAAW,aAAa,YAAY;AAC5D,eAAO,CAAC,CAAC,cAAc,WAAW,SAAS,MAAM,YAAY,SAAS;AAAA,MACxE;AACA,UAAI,QAAQ;AAKZ,UAAI,2BAA2B,SAASC,0BAAyB,UAAU;AACzE,YAAI,cAAc,aAAa,YAAY,IAAI,QAAQ;AACvD,iBAAS,eAAe;AACxB,YAAI,YAAY,OAAO;AACrB,uCAA6B,UAAU,SAAS;AAAA,QAClD,OAAO;AACL,kBAAQ,UAAU,IAAI;AAAA,QACxB;AAAA,MACF;AAKA,UAAI,wBAAwB,SAASC,uBAAsB,UAAU;AACnE,YAAI,cAAc,aAAa,YAAY,IAAI,QAAQ;AACvD,iBAAS,eAAe;AACxB,YAAI,YAAY,wBAAwB;AACtC,uCAA6B,UAAU,MAAM;AAAA,QAC/C,OAAO;AACL,eAAK,UAAU,KAAK;AAAA,QACtB;AAAA,MACF;AAMA,UAAI,0BAA0B,SAASC,yBAAwB,UAAU,aAAa;AACpF,iBAAS,eAAe;AACxB,oBAAY,cAAc,MAAM;AAAA,MAClC;AAMA,UAAI,+BAA+B,SAASC,8BAA6B,UAAU,MAAM;AACvF,YAAI,cAAc,aAAa,YAAY,IAAI,QAAQ;AACvD,YAAI,CAAC,YAAY,OAAO;AACtB,gBAAM,0EAA4E,OAAO,sBAAsB,IAAI,CAAC,CAAC;AACrH;AAAA,QACF;AACA,YAAI,QAAQ,SAAS,SAAS;AAC9B,YAAI,aAAa,cAAc,UAAU,WAAW;AACpD,YAAI,YAAY,gBAAgB;AAC9B,+BAAqB,UAAU,YAAY,IAAI;AAAA,QACjD,WAAW,SAAS,CAAC,MAAM,cAAc,GAAG;AAC1C,mBAAS,cAAc;AACvB,mBAAS,sBAAsB,YAAY,iBAAiB;AAAA,QAC9D,WAAW,SAAS,QAAQ;AAC1B,eAAK,UAAU,UAAU;AAAA,QAC3B,OAAO;AACL,kBAAQ,UAAU,UAAU;AAAA,QAC9B;AAAA,MACF;AAOA,UAAI,uBAAuB,SAASC,sBAAqB,UAAU,YAAY,MAAM;AACnF,YAAI,cAAc,aAAa,YAAY,IAAI,QAAQ;AACvD,iBAAS,aAAa;AACtB,YAAI,oBAAoB,QAAQ,QAAQ,EAAE,KAAK,WAAY;AACzD,iBAAO,UAAU,YAAY,eAAe,YAAY,YAAY,iBAAiB,CAAC;AAAA,QACxF,CAAC;AACD,0BAAkB,KAAK,SAAU,mBAAmB;AAClD,mBAAS,cAAc;AACvB,mBAAS,YAAY;AACrB,cAAI,mBAAmB;AACrB,qBAAS,sBAAsB,iBAAiB;AAAA,UAClD,WAAW,SAAS,QAAQ;AAC1B,iBAAK,UAAU,UAAU;AAAA,UAC3B,OAAO;AACL,oBAAQ,UAAU,UAAU;AAAA,UAC9B;AAAA,QACF,CAAC;AAAA,MACH;AAMA,UAAI,OAAO,SAASC,MAAK,UAAU,OAAO;AACxC,YAAI,cAAc,aAAa,YAAY,IAAI,YAAY,KAAK;AAChE,YAAI,YAAY,kBAAkB;AAChC,sBAAY,cAAc,CAAC;AAAA,QAC7B;AACA,YAAI,YAAY,SAAS;AACvB,mBAAS,oBAAoB;AAC7B,cAAI,iBAAiB,QAAQ,QAAQ,EAAE,KAAK,WAAY;AACtD,mBAAO,UAAU,YAAY,QAAQ,OAAO,YAAY,iBAAiB,CAAC;AAAA,UAC5E,CAAC;AACD,yBAAe,KAAK,SAAU,cAAc;AAC1C,gBAAI,iBAAiB,OAAO;AAC1B,uBAAS,YAAY;AACrB,oCAAsB,QAAQ;AAAA,YAChC,OAAO;AACL,uBAAS,MAAM;AAAA,gBACb,UAAU;AAAA,gBACV,OAAO,OAAO,iBAAiB,cAAc,QAAQ;AAAA,cACvD,CAAC;AAAA,YACH;AAAA,UACF,CAAC,EAAE,OAAO,EAAE,SAAU/I,QAAO;AAC3B,mBAAO,WAAW,YAAY,OAAOA,MAAK;AAAA,UAC5C,CAAC;AAAA,QACH,OAAO;AACL,mBAAS,MAAM;AAAA,YACb,UAAU;AAAA,YACV;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF;AAMA,UAAI,cAAc,SAASgJ,aAAY,UAAU,OAAO;AACtD,iBAAS,MAAM;AAAA,UACb,aAAa;AAAA,UACb;AAAA,QACF,CAAC;AAAA,MACH;AAOA,UAAI,aAAa,SAASC,YAAW,UAAUjJ,QAAO;AACpD,iBAAS,cAAcA,MAAK;AAAA,MAC9B;AAOA,UAAI,UAAU,SAASkJ,SAAQ,UAAU,OAAO;AAC9C,YAAI,cAAc,aAAa,YAAY,IAAI,YAAY,KAAK;AAChE,YAAI,YAAY,qBAAqB;AACnC,sBAAY;AAAA,QACd;AACA,YAAI,YAAY,YAAY;AAC1B,mBAAS,uBAAuB;AAChC,mBAAS,oBAAoB;AAC7B,cAAI,oBAAoB,QAAQ,QAAQ,EAAE,KAAK,WAAY;AACzD,mBAAO,UAAU,YAAY,WAAW,OAAO,YAAY,iBAAiB,CAAC;AAAA,UAC/E,CAAC;AACD,4BAAkB,KAAK,SAAU,iBAAiB;AAChD,gBAAI,YAAY,qBAAqB,CAAC,KAAK,oBAAoB,OAAO;AACpE,uBAAS,YAAY;AACrB,oCAAsB,QAAQ;AAAA,YAChC,OAAO;AACL,0BAAY,UAAU,OAAO,oBAAoB,cAAc,QAAQ,eAAe;AAAA,YACxF;AAAA,UACF,CAAC,EAAE,OAAO,EAAE,SAAUlJ,QAAO;AAC3B,mBAAO,WAAW,YAAY,OAAOA,MAAK;AAAA,UAC5C,CAAC;AAAA,QACH,OAAO;AACL,sBAAY,UAAU,KAAK;AAAA,QAC7B;AAAA,MACF;AAKA,eAAS,cAAc;AAErB,YAAI,cAAc,aAAa,YAAY,IAAI,IAAI;AACnD,YAAI,CAAC,aAAa;AAChB;AAAA,QACF;AACA,YAAI,WAAW,aAAa,SAAS,IAAI,IAAI;AAC7C,aAAK,SAAS,MAAM;AACpB,YAAI,QAAQ,GAAG;AACb,cAAI,YAAY,MAAM;AACpB,iBAAK,QAAQ,CAAC;AAAA,UAChB;AAAA,QACF,OAAO;AACL,4BAAkB,QAAQ;AAAA,QAC5B;AACA,oBAAY,CAAC,SAAS,OAAO,SAAS,OAAO,GAAG,YAAY,OAAO;AACnE,iBAAS,MAAM,gBAAgB,WAAW;AAC1C,iBAAS,MAAM,gBAAgB,cAAc;AAC7C,iBAAS,cAAc,WAAW;AAClC,iBAAS,WAAW,WAAW;AAC/B,iBAAS,aAAa,WAAW;AAAA,MACnC;AACA,UAAI,oBAAoB,SAASmJ,mBAAkB,UAAU;AAC3D,YAAI,kBAAkB,SAAS,MAAM,uBAAuB,SAAS,OAAO,aAAa,wBAAwB,CAAC;AAClH,YAAI,gBAAgB,QAAQ;AAC1B,eAAK,gBAAgB,CAAC,GAAG,cAAc;AAAA,QACzC,WAAW,oBAAoB,GAAG;AAChC,eAAK,SAAS,OAAO;AAAA,QACvB;AAAA,MACF;AAOA,eAAS,WAAW;AAClB,YAAI,cAAc,aAAa,YAAY,IAAI,IAAI;AACnD,YAAI,WAAW,aAAa,SAAS,IAAI,IAAI;AAC7C,YAAI,CAAC,UAAU;AACb,iBAAO;AAAA,QACT;AACA,eAAO,WAAW,SAAS,OAAO,YAAY,KAAK;AAAA,MACrD;AAOA,eAAS,mBAAmB,UAAU,SAAS,UAAU;AACvD,YAAI,WAAW,aAAa,SAAS,IAAI,QAAQ;AACjD,gBAAQ,QAAQ,SAAU,QAAQ;AAChC,mBAAS,MAAM,EAAE,WAAW;AAAA,QAC9B,CAAC;AAAA,MACH;AAMA,eAAS,iBAAiB,OAAO,UAAU;AACzC,YAAI,QAAQ,SAAS;AACrB,YAAI,CAAC,SAAS,CAAC,OAAO;AACpB;AAAA,QACF;AACA,YAAI,MAAM,SAAS,SAAS;AAE1B,cAAI,SAAS,MAAM,iBAAiB,UAAW,OAAO,YAAY,OAAO,IAAK,CAAC;AAC/E,mBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,mBAAO,CAAC,EAAE,WAAW;AAAA,UACvB;AAAA,QACF,OAAO;AACL,gBAAM,WAAW;AAAA,QACnB;AAAA,MACF;AAMA,eAAS,gBAAgB;AACvB,2BAAmB,MAAM,CAAC,iBAAiB,cAAc,cAAc,GAAG,KAAK;AAAA,MACjF;AAMA,eAAS,iBAAiB;AACxB,2BAAmB,MAAM,CAAC,iBAAiB,cAAc,cAAc,GAAG,IAAI;AAAA,MAChF;AAMA,eAAS,cAAc;AACrB,yBAAiB,KAAK,SAAS,GAAG,KAAK;AAAA,MACzC;AAMA,eAAS,eAAe;AACtB,yBAAiB,KAAK,SAAS,GAAG,IAAI;AAAA,MACxC;AAQA,eAAS,sBAAsBnJ,QAAO;AACpC,YAAI,WAAW,aAAa,SAAS,IAAI,IAAI;AAC7C,YAAI,SAAS,aAAa,YAAY,IAAI,IAAI;AAC9C,qBAAa,SAAS,mBAAmBA,MAAK;AAC9C,iBAAS,kBAAkB,YAAY,YAAY,oBAAoB;AACvE,YAAI,OAAO,eAAe,OAAO,YAAY,mBAAmB;AAC9D,mBAAS,SAAS,mBAAmB,OAAO,YAAY,iBAAiB;AAAA,QAC3E;AACA,aAAK,SAAS,iBAAiB;AAC/B,YAAI,QAAQ,KAAK,SAAS;AAC1B,YAAI,OAAO;AACT,gBAAM,aAAa,gBAAgB,MAAM;AACzC,gBAAM,aAAa,oBAAoB,YAAY,oBAAoB,CAAC;AACxE,qBAAW,KAAK;AAChB,mBAAS,OAAO,YAAY,UAAU;AAAA,QACxC;AAAA,MACF;AAOA,eAAS,yBAAyB;AAChC,YAAI,WAAW,aAAa,SAAS,IAAI,IAAI;AAC7C,YAAI,SAAS,mBAAmB;AAC9B,eAAK,SAAS,iBAAiB;AAAA,QACjC;AACA,YAAI,QAAQ,KAAK,SAAS;AAC1B,YAAI,OAAO;AACT,gBAAM,gBAAgB,cAAc;AACpC,gBAAM,gBAAgB,kBAAkB;AACxC,sBAAY,OAAO,YAAY,UAAU;AAAA,QAC3C;AAAA,MACF;AACA,UAAI,gBAAgB;AAAA,QAClB,OAAO;AAAA,QACP,WAAW;AAAA,QACX,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,WAAW;AAAA,QACX,UAAU;AAAA,QACV,UAAU;AAAA,QACV,OAAO;AAAA,QACP,WAAW;AAAA,QACX,WAAW;AAAA,UACT,OAAO;AAAA,UACP,UAAU;AAAA,UACV,MAAM;AAAA,QACR;AAAA,QACA,WAAW;AAAA,UACT,OAAO;AAAA,UACP,UAAU;AAAA,UACV,MAAM;AAAA,QACR;AAAA,QACA,aAAa,CAAC;AAAA,QACd,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,UAAU;AAAA,QACV,YAAY;AAAA,QACZ,mBAAmB;AAAA,QACnB,gBAAgB;AAAA,QAChB,eAAe;AAAA,QACf,wBAAwB;AAAA,QACxB,wBAAwB;AAAA,QACxB,mBAAmB;AAAA,QACnB,gBAAgB;AAAA,QAChB,kBAAkB;AAAA,QAClB,YAAY;AAAA,QACZ,SAAS;AAAA,QACT,mBAAmB;AAAA,QACnB,wBAAwB;AAAA,QACxB,oBAAoB;AAAA,QACpB,gBAAgB;AAAA,QAChB,qBAAqB;AAAA,QACrB,iBAAiB;AAAA,QACjB,kBAAkB;AAAA,QAClB,uBAAuB;AAAA,QACvB,mBAAmB;AAAA,QACnB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,cAAc;AAAA,QACd,WAAW;AAAA,QACX,aAAa;AAAA,QACb,aAAa;AAAA,QACb,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,sBAAsB;AAAA,QACtB,YAAY;AAAA,QACZ,qBAAqB;AAAA,QACrB,kBAAkB;AAAA,QAClB,UAAU;AAAA,QACV,YAAY;AAAA,QACZ,aAAa;AAAA,QACb,UAAU;AAAA,QACV,OAAO;AAAA,QACP,kBAAkB;AAAA,QAClB,OAAO;AAAA,QACP,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,OAAO;AAAA,QACP,kBAAkB;AAAA,QAClB,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,cAAc,CAAC;AAAA,QACf,gBAAgB;AAAA,QAChB,eAAe;AAAA,QACf,iBAAiB,CAAC;AAAA,QAClB,gBAAgB;AAAA,QAChB,wBAAwB;AAAA,QACxB,mBAAmB;AAAA,QACnB,MAAM;AAAA,QACN,UAAU;AAAA,QACV,eAAe,CAAC;AAAA,QAChB,qBAAqB;AAAA,QACrB,uBAAuB;AAAA,QACvB,UAAU;AAAA,QACV,SAAS;AAAA,QACT,WAAW;AAAA,QACX,WAAW;AAAA,QACX,UAAU;AAAA,QACV,YAAY;AAAA,QACZ,kBAAkB;AAAA,MACpB;AACA,UAAI,kBAAkB,CAAC,kBAAkB,qBAAqB,cAAc,kBAAkB,yBAAyB,qBAAqB,oBAAoB,wBAAwB,mBAAmB,SAAS,0BAA0B,sBAAsB,qBAAqB,uBAAuB,eAAe,uBAAuB,mBAAmB,kBAAkB,YAAY,cAAc,UAAU,aAAa,QAAQ,QAAQ,aAAa,YAAY,YAAY,eAAe,YAAY,cAAc,cAAc,WAAW,iBAAiB,eAAe,kBAAkB,oBAAoB,mBAAmB,qBAAqB,kBAAkB,QAAQ,SAAS,aAAa,WAAW;AAG5sB,UAAI,mBAAmB,CAAC;AACxB,UAAI,0BAA0B,CAAC,qBAAqB,iBAAiB,YAAY,gBAAgB,aAAa,eAAe,eAAe,cAAc,wBAAwB;AAQlL,UAAI,mBAAmB,SAASoJ,kBAAiB,WAAW;AAC1D,eAAO,OAAO,UAAU,eAAe,KAAK,eAAe,SAAS;AAAA,MACtE;AAQA,UAAI,uBAAuB,SAASC,sBAAqB,WAAW;AAClE,eAAO,gBAAgB,QAAQ,SAAS,MAAM;AAAA,MAChD;AAQA,UAAI,wBAAwB,SAASC,uBAAsB,WAAW;AACpE,eAAO,iBAAiB,SAAS;AAAA,MACnC;AAKA,UAAI,sBAAsB,SAASC,qBAAoB,OAAO;AAC5D,YAAI,CAAC,iBAAiB,KAAK,GAAG;AAC5B,eAAK,sBAAuB,OAAO,OAAO,GAAI,CAAC;AAAA,QACjD;AAAA,MACF;AAKA,UAAI,2BAA2B,SAASC,0BAAyB,OAAO;AACtE,YAAI,wBAAwB,SAAS,KAAK,GAAG;AAC3C,eAAK,kBAAmB,OAAO,OAAO,+BAAgC,CAAC;AAAA,QACzE;AAAA,MACF;AAKA,UAAI,2BAA2B,SAASC,0BAAyB,OAAO;AACtE,YAAI,eAAe,sBAAsB,KAAK;AAC9C,YAAI,cAAc;AAChB,+BAAqB,OAAO,YAAY;AAAA,QAC1C;AAAA,MACF;AAOA,UAAI,wBAAwB,SAASC,uBAAsB,QAAQ;AACjE,YAAI,OAAO,aAAa,SAAS,OAAO,mBAAmB;AACzD,eAAK,iFAAiF;AAAA,QACxF;AACA,iBAAS,SAAS,QAAQ;AACxB,8BAAoB,KAAK;AACzB,cAAI,OAAO,OAAO;AAChB,qCAAyB,KAAK;AAAA,UAChC;AACA,mCAAyB,KAAK;AAAA,QAChC;AAAA,MACF;AAOA,eAAS,OAAO,QAAQ;AACtB,YAAI,QAAQ,SAAS;AACrB,YAAI,cAAc,aAAa,YAAY,IAAI,IAAI;AACnD,YAAI,CAAC,SAAS,SAAS,OAAO,YAAY,UAAU,KAAK,GAAG;AAC1D,eAAK,4IAA4I;AACjJ;AAAA,QACF;AACA,YAAI,uBAAuB,kBAAkB,MAAM;AACnD,YAAI,gBAAgB,OAAO,OAAO,CAAC,GAAG,aAAa,oBAAoB;AACvE,eAAO,MAAM,aAAa;AAC1B,qBAAa,YAAY,IAAI,MAAM,aAAa;AAChD,eAAO,iBAAiB,MAAM;AAAA,UAC5B,QAAQ;AAAA,YACN,OAAO,OAAO,OAAO,CAAC,GAAG,KAAK,QAAQ,MAAM;AAAA,YAC5C,UAAU;AAAA,YACV,YAAY;AAAA,UACd;AAAA,QACF,CAAC;AAAA,MACH;AAMA,UAAI,oBAAoB,SAASC,mBAAkB,QAAQ;AACzD,YAAI,uBAAuB,CAAC;AAC5B,eAAO,KAAK,MAAM,EAAE,QAAQ,SAAU,OAAO;AAC3C,cAAI,qBAAqB,KAAK,GAAG;AAC/B,iCAAqB,KAAK,IAAI,OAAO,KAAK;AAAA,UAC5C,OAAO;AACL,iBAAK,gCAAgC,OAAO,KAAK,CAAC;AAAA,UACpD;AAAA,QACF,CAAC;AACD,eAAO;AAAA,MACT;AAKA,eAAS,WAAW;AAClB,YAAI,WAAW,aAAa,SAAS,IAAI,IAAI;AAC7C,YAAI,cAAc,aAAa,YAAY,IAAI,IAAI;AACnD,YAAI,CAAC,aAAa;AAChB,0BAAgB,IAAI;AACpB;AAAA,QACF;AAGA,YAAI,SAAS,SAAS,YAAY,gCAAgC;AAChE,sBAAY,+BAA+B;AAC3C,iBAAO,YAAY;AAAA,QACrB;AACA,YAAI,OAAO,YAAY,eAAe,YAAY;AAChD,sBAAY,WAAW;AAAA,QACzB;AACA,oBAAY,IAAI;AAAA,MAClB;AAKA,UAAI,cAAc,SAASC,aAAY,UAAU;AAC/C,wBAAgB,QAAQ;AAExB,eAAO,SAAS;AAEhB,eAAO,YAAY;AACnB,eAAO,YAAY;AAEnB,eAAO,YAAY;AAAA,MACrB;AAKA,UAAI,kBAAkB,SAASC,iBAAgB,UAAU;AAEvD,YAAI,SAAS,mBAAmB;AAC9B,wBAAc,cAAc,QAAQ;AACpC,mBAAS,oBAAoB;AAAA,QAC/B,OAAO;AACL,wBAAc,gBAAgB,QAAQ;AACtC,wBAAc,cAAc,QAAQ;AACpC,iBAAO,SAAS;AAEhB,iBAAO,SAAS;AAChB,iBAAO,SAAS;AAChB,iBAAO,SAAS;AAChB,iBAAO,SAAS;AAChB,iBAAO,SAAS;AAChB,iBAAO,SAAS;AAChB,iBAAO,SAAS;AAChB,iBAAO,SAAS;AAChB,iBAAO,SAAS;AAChB,iBAAO,SAAS;AAChB,iBAAO,SAAS;AAChB,iBAAO,SAAS;AAChB,iBAAO,SAAS;AAChB,iBAAO,SAAS;AAChB,iBAAO,SAAS;AAChB,iBAAO,SAAS;AAAA,QAClB;AAAA,MACF;AAMA,UAAI,gBAAgB,SAASC,eAAc,KAAK,UAAU;AACxD,iBAAS,KAAK,KAAK;AACjB,cAAI,CAAC,EAAE,QAAQ,EAAE,QAAQ;AAAA,QAC3B;AAAA,MACF;AACA,UAAI,kBAA+B,uBAAO,OAAO;AAAA,QAC/C,WAAW;AAAA,QACX;AAAA,QACA;AAAA,QACA,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ;AAAA,QACA;AAAA,QACA,gBAAgB;AAAA,QAChB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAOD,UAAI,mBAAmB,SAASC,kBAAiB,aAAa,UAAU,aAAa;AACnF,YAAI,YAAY,OAAO;AACrB,2BAAiB,aAAa,UAAU,WAAW;AAAA,QACrD,OAAO;AAGL,+BAAqB,QAAQ;AAG7B,mCAAyB,QAAQ;AACjC,2BAAiB,aAAa,UAAU,WAAW;AAAA,QACrD;AAAA,MACF;AAOA,UAAI,mBAAmB,SAASC,kBAAiB,aAAa,UAAU,aAAa;AAEnF,iBAAS,MAAM,UAAU,WAAY;AACnC,cAAI,gBAAgB,iBAAiB,WAAW,KAAK,YAAY,SAAS,YAAY,QAAQ;AAC5F;AAAA,UACF;AACA,sBAAY,cAAc,KAAK;AAAA,QACjC;AAAA,MACF;AAMA,UAAI,mBAAmB,SAASC,kBAAiB,aAAa;AAC5D,eAAO,CAAC,EAAE,YAAY,qBAAqB,YAAY,kBAAkB,YAAY,oBAAoB,YAAY;AAAA,MACvH;AACA,UAAI,qBAAqB;AAKzB,UAAI,uBAAuB,SAASC,sBAAqB,UAAU;AACjE,iBAAS,MAAM,cAAc,WAAY;AACvC,mBAAS,UAAU,YAAY,SAAU,GAAG;AAC1C,qBAAS,UAAU,YAAY,WAAY;AAAA,YAAC;AAG5C,gBAAI,EAAE,WAAW,SAAS,WAAW;AACnC,mCAAqB;AAAA,YACvB;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAKA,UAAI,2BAA2B,SAASC,0BAAyB,UAAU;AACzE,iBAAS,UAAU,cAAc,WAAY;AAC3C,mBAAS,MAAM,YAAY,SAAU,GAAG;AACtC,qBAAS,MAAM,YAAY,WAAY;AAAA,YAAC;AAExC,gBAAI,EAAE,WAAW,SAAS,SAAS,EAAE,kBAAkB,eAAe,SAAS,MAAM,SAAS,EAAE,MAAM,GAAG;AACvG,mCAAqB;AAAA,YACvB;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAOA,UAAI,mBAAmB,SAASC,kBAAiB,aAAa,UAAU,aAAa;AACnF,iBAAS,UAAU,UAAU,SAAU,GAAG;AACxC,cAAI,oBAAoB;AACtB,iCAAqB;AACrB;AAAA,UACF;AACA,cAAI,EAAE,WAAW,SAAS,aAAa,eAAe,YAAY,iBAAiB,GAAG;AACpF,wBAAY,cAAc,QAAQ;AAAA,UACpC;AAAA,QACF;AAAA,MACF;AACA,UAAI,kBAAkB,SAASC,iBAAgB,MAAM;AACnD,eAAO,QAAQ,IAAI,MAAM,YAAY,KAAK;AAAA,MAC5C;AACA,UAAI,YAAY,SAASC,WAAU,MAAM;AACvC,eAAO,gBAAgB,WAAW,gBAAgB,IAAI;AAAA,MACxD;AACA,UAAI,eAAe,SAASC,cAAa,MAAM;AAC7C,YAAI,SAAS,CAAC;AACd,YAAI,QAAQ,KAAK,CAAC,CAAC,MAAM,YAAY,CAAC,UAAU,KAAK,CAAC,CAAC,GAAG;AACxD,iBAAO,OAAO,QAAQ,KAAK,CAAC,CAAC;AAAA,QAC/B,OAAO;AACL,WAAC,SAAS,QAAQ,MAAM,EAAE,QAAQ,SAAU,MAAM,OAAO;AACvD,gBAAI,MAAM,KAAK,KAAK;AACpB,gBAAI,OAAO,QAAQ,YAAY,UAAU,GAAG,GAAG;AAC7C,qBAAO,IAAI,IAAI;AAAA,YACjB,WAAW,QAAQ,QAAW;AAC5B,oBAAM,sBAAsB,OAAO,MAAM,wCAA4C,EAAE,OAAO,QAAQ,GAAG,CAAC,CAAC;AAAA,YAC7G;AAAA,UACF,CAAC;AAAA,QACH;AACA,eAAO;AAAA,MACT;AAQA,eAAS,OAAO;AACd,YAAI1C,SAAO;AACX,iBAAS,OAAO,UAAU,QAAQ,OAAO,IAAI,MAAM,IAAI,GAAG,OAAO,GAAG,OAAO,MAAM,QAAQ;AACvF,eAAK,IAAI,IAAI,UAAU,IAAI;AAAA,QAC7B;AACA,eAAO,WAAWA,QAAM,IAAI;AAAA,MAC9B;AAqBA,eAAS,MAAM,aAAa;AAC1B,YAAI,YAAyB,yBAAU2C,QAAO;AAC5C,oBAAUC,YAAWD,MAAK;AAC1B,cAAI,SAAS,aAAaC,UAAS;AACnC,mBAASA,aAAY;AACnB,4BAAgB,MAAMA,UAAS;AAC/B,mBAAO,OAAO,MAAM,MAAM,SAAS;AAAA,UACrC;AACA,uBAAaA,YAAW,CAAC;AAAA,YACvB,KAAK;AAAA,YACL,OAAO,SAAS,MAAM,QAAQ,qBAAqB;AACjD,qBAAO,KAAK,gBAAgBA,WAAU,SAAS,GAAG,SAAS,IAAI,EAAE,KAAK,MAAM,QAAQ,OAAO,OAAO,CAAC,GAAG,aAAa,mBAAmB,CAAC;AAAA,YACzI;AAAA,UACF,CAAC,CAAC;AACF,iBAAOA;AAAA,QACT,EAAE,IAAI;AACN,eAAO;AAAA,MACT;AAQA,UAAI,eAAe,SAASC,gBAAe;AACzC,eAAO,YAAY,WAAW,YAAY,QAAQ,aAAa;AAAA,MACjE;AAQA,UAAI,YAAY,SAASC,aAAY;AACnC,YAAI,YAAY,SAAS;AACvB,+BAAqB;AACrB,iBAAO,YAAY,QAAQ,KAAK;AAAA,QAClC;AAAA,MACF;AAQA,UAAI,cAAc,SAASC,eAAc;AACvC,YAAI,YAAY,SAAS;AACvB,cAAI,YAAY,YAAY,QAAQ,MAAM;AAC1C,kCAAwB,SAAS;AACjC,iBAAO;AAAA,QACT;AAAA,MACF;AAQA,UAAI,cAAc,SAASC,eAAc;AACvC,YAAI,QAAQ,YAAY;AACxB,eAAO,UAAU,MAAM,UAAU,UAAU,IAAI,YAAY;AAAA,MAC7D;AASA,UAAI,gBAAgB,SAASC,eAAc,IAAI;AAC7C,YAAI,YAAY,SAAS;AACvB,cAAI,YAAY,YAAY,QAAQ,SAAS,EAAE;AAC/C,kCAAwB,WAAW,IAAI;AACvC,iBAAO;AAAA,QACT;AAAA,MACF;AASA,UAAI,iBAAiB,SAASC,kBAAiB;AAC7C,eAAO,CAAC,EAAE,YAAY,WAAW,YAAY,QAAQ,UAAU;AAAA,MACjE;AACA,UAAI,yBAAyB;AAC7B,UAAI,gBAAgB,CAAC;AAKrB,eAAS,mBAAmB;AAC1B,YAAI,OAAO,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAC/E,sBAAc,IAAI,IAAI;AACtB,YAAI,CAAC,wBAAwB;AAC3B,mBAAS,KAAK,iBAAiB,SAAS,iBAAiB;AACzD,mCAAyB;AAAA,QAC3B;AAAA,MACF;AACA,UAAI,oBAAoB,SAASC,mBAAkB,OAAO;AACxD,iBAAS,KAAK,MAAM,QAAQ,MAAM,OAAO,UAAU,KAAK,GAAG,YAAY;AACrE,mBAAS,QAAQ,eAAe;AAC9B,gBAAI,WAAW,GAAG,aAAa,IAAI;AACnC,gBAAI,UAAU;AACZ,4BAAc,IAAI,EAAE,KAAK;AAAA,gBACvB;AAAA,cACF,CAAC;AACD;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACA,UAAI,gBAA6B,uBAAO,OAAO;AAAA,QAC7C,WAAW;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,eAAe;AAAA,QACf;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AACD,UAAI,QAAqB,2BAAY;AAKnC,iBAASC,OAAM,UAAU,OAAO;AAC9B,0BAAgB,MAAMA,MAAK;AAC3B,eAAK,WAAW;AAChB,eAAK,YAAY;AACjB,eAAK,UAAU;AACf,eAAK,MAAM;AAAA,QACb;AAKA,qBAAaA,QAAO,CAAC;AAAA,UACnB,KAAK;AAAA,UACL,OAAO,SAAS,QAAQ;AACtB,gBAAI,CAAC,KAAK,SAAS;AACjB,mBAAK,UAAU;AACf,mBAAK,UAAU,oBAAI,KAAK;AACxB,mBAAK,KAAK,WAAW,KAAK,UAAU,KAAK,SAAS;AAAA,YACpD;AACA,mBAAO,KAAK;AAAA,UACd;AAAA;AAAA;AAAA;AAAA,QAKF,GAAG;AAAA,UACD,KAAK;AAAA,UACL,OAAO,SAAS,OAAO;AACrB,gBAAI,KAAK,WAAW,KAAK,SAAS;AAChC,mBAAK,UAAU;AACf,2BAAa,KAAK,EAAE;AACpB,mBAAK,cAAa,oBAAI,KAAK,GAAE,QAAQ,IAAI,KAAK,QAAQ,QAAQ;AAAA,YAChE;AACA,mBAAO,KAAK;AAAA,UACd;AAAA;AAAA;AAAA;AAAA;AAAA,QAMF,GAAG;AAAA,UACD,KAAK;AAAA,UACL,OAAO,SAAS,SAAS,GAAG;AAC1B,gBAAI,UAAU,KAAK;AACnB,gBAAI,SAAS;AACX,mBAAK,KAAK;AAAA,YACZ;AACA,iBAAK,aAAa;AAClB,gBAAI,SAAS;AACX,mBAAK,MAAM;AAAA,YACb;AACA,mBAAO,KAAK;AAAA,UACd;AAAA;AAAA;AAAA;AAAA,QAKF,GAAG;AAAA,UACD,KAAK;AAAA,UACL,OAAO,SAASP,gBAAe;AAC7B,gBAAI,KAAK,SAAS;AAChB,mBAAK,KAAK;AACV,mBAAK,MAAM;AAAA,YACb;AACA,mBAAO,KAAK;AAAA,UACd;AAAA;AAAA;AAAA;AAAA,QAKF,GAAG;AAAA,UACD,KAAK;AAAA,UACL,OAAO,SAAS,YAAY;AAC1B,mBAAO,KAAK;AAAA,UACd;AAAA,QACF,CAAC,CAAC;AACF,eAAOO;AAAA,MACT,EAAE;AACF,UAAI,mBAAmB,CAAC,cAAc,aAAa,aAAa;AAMhE,UAAI,oBAAoB,SAASC,mBAAkB,QAAQ;AAEzD,YAAI,WAAW,OAAO,OAAO,aAAa,WAAW,SAAS,cAAc,OAAO,QAAQ,IAAI,OAAO;AACtG,YAAI,CAAC,UAAU;AACb,iBAAO,CAAC;AAAA,QACV;AAEA,YAAI,kBAAkB,SAAS;AAC/B,gCAAwB,eAAe;AACvC,YAAI,SAAS,OAAO,OAAO,cAAc,eAAe,GAAG,sBAAsB,eAAe,GAAG,eAAe,eAAe,GAAG,aAAa,eAAe,GAAG,YAAY,eAAe,GAAG,aAAa,eAAe,GAAG,oBAAoB,iBAAiB,gBAAgB,CAAC;AACtR,eAAO;AAAA,MACT;AAMA,UAAI,gBAAgB,SAASC,eAAc,iBAAiB;AAC1D,YAAI,SAAS,CAAC;AAEd,YAAI,aAAa,MAAM,KAAK,gBAAgB,iBAAiB,YAAY,CAAC;AAC1E,mBAAW,QAAQ,SAAU,OAAO;AAClC,oCAA0B,OAAO,CAAC,QAAQ,OAAO,CAAC;AAClD,cAAI,YAAY,MAAM,aAAa,MAAM;AACzC,cAAI,QAAQ,MAAM,aAAa,OAAO;AACtC,cAAI,OAAO,cAAc,SAAS,MAAM,WAAW;AACjD,mBAAO,SAAS,IAAI,UAAU;AAAA,UAChC,WAAW,QAAQ,cAAc,SAAS,CAAC,MAAM,UAAU;AACzD,mBAAO,SAAS,IAAI,KAAK,MAAM,KAAK;AAAA,UACtC,OAAO;AACL,mBAAO,SAAS,IAAI;AAAA,UACtB;AAAA,QACF,CAAC;AACD,eAAO;AAAA,MACT;AAMA,UAAI,wBAAwB,SAASC,uBAAsB,iBAAiB;AAC1E,YAAI,SAAS,CAAC;AAEd,YAAI,gBAAgB,MAAM,KAAK,gBAAgB,iBAAiB,qBAAqB,CAAC;AACtF,sBAAc,QAAQ,SAAU,OAAO;AACrC,cAAI,YAAY,MAAM,aAAa,MAAM;AACzC,cAAI,QAAQ,MAAM,aAAa,OAAO;AACtC,iBAAO,SAAS,IAAI,IAAI,SAAS,UAAU,OAAO,KAAK,CAAC,EAAE;AAAA,QAC5D,CAAC;AACD,eAAO;AAAA,MACT;AAMA,UAAI,iBAAiB,SAASC,gBAAe,iBAAiB;AAC5D,YAAI,SAAS,CAAC;AAEd,YAAI,cAAc,MAAM,KAAK,gBAAgB,iBAAiB,aAAa,CAAC;AAC5E,oBAAY,QAAQ,SAAU,QAAQ;AACpC,oCAA0B,QAAQ,CAAC,QAAQ,SAAS,YAAY,CAAC;AACjE,cAAI,OAAO,OAAO,aAAa,MAAM;AACrC,iBAAO,GAAG,OAAO,MAAM,YAAY,CAAC,IAAI,OAAO;AAC/C,iBAAO,OAAO,OAAO,sBAAsB,IAAI,GAAG,QAAQ,CAAC,IAAI;AAC/D,cAAI,OAAO,aAAa,OAAO,GAAG;AAChC,mBAAO,GAAG,OAAO,MAAM,aAAa,CAAC,IAAI,OAAO,aAAa,OAAO;AAAA,UACtE;AACA,cAAI,OAAO,aAAa,YAAY,GAAG;AACrC,mBAAO,GAAG,OAAO,MAAM,iBAAiB,CAAC,IAAI,OAAO,aAAa,YAAY;AAAA,UAC/E;AAAA,QACF,CAAC;AACD,eAAO;AAAA,MACT;AAMA,UAAI,eAAe,SAASC,cAAa,iBAAiB;AACxD,YAAI,SAAS,CAAC;AAEd,YAAI,QAAQ,gBAAgB,cAAc,YAAY;AACtD,YAAI,OAAO;AACT,oCAA0B,OAAO,CAAC,OAAO,SAAS,UAAU,KAAK,CAAC;AAClE,cAAI,MAAM,aAAa,KAAK,GAAG;AAC7B,mBAAO,WAAW,MAAM,aAAa,KAAK;AAAA,UAC5C;AACA,cAAI,MAAM,aAAa,OAAO,GAAG;AAC/B,mBAAO,aAAa,MAAM,aAAa,OAAO;AAAA,UAChD;AACA,cAAI,MAAM,aAAa,QAAQ,GAAG;AAChC,mBAAO,cAAc,MAAM,aAAa,QAAQ;AAAA,UAClD;AACA,cAAI,MAAM,aAAa,KAAK,GAAG;AAC7B,mBAAO,WAAW,MAAM,aAAa,KAAK;AAAA,UAC5C;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAMA,UAAI,cAAc,SAASC,aAAY,iBAAiB;AACtD,YAAI,SAAS,CAAC;AAEd,YAAI,OAAO,gBAAgB,cAAc,WAAW;AACpD,YAAI,MAAM;AACR,oCAA0B,MAAM,CAAC,QAAQ,OAAO,CAAC;AACjD,cAAI,KAAK,aAAa,MAAM,GAAG;AAG7B,mBAAO,OAAO,KAAK,aAAa,MAAM;AAAA,UACxC;AACA,cAAI,KAAK,aAAa,OAAO,GAAG;AAC9B,mBAAO,YAAY,KAAK,aAAa,OAAO;AAAA,UAC9C;AACA,iBAAO,WAAW,KAAK;AAAA,QACzB;AACA,eAAO;AAAA,MACT;AAMA,UAAI,eAAe,SAASC,cAAa,iBAAiB;AACxD,YAAI,SAAS,CAAC;AAEd,YAAI,QAAQ,gBAAgB,cAAc,YAAY;AACtD,YAAI,OAAO;AACT,oCAA0B,OAAO,CAAC,QAAQ,SAAS,eAAe,OAAO,CAAC;AAG1E,iBAAO,QAAQ,MAAM,aAAa,MAAM,KAAK;AAC7C,cAAI,MAAM,aAAa,OAAO,GAAG;AAC/B,mBAAO,aAAa,MAAM,aAAa,OAAO;AAAA,UAChD;AACA,cAAI,MAAM,aAAa,aAAa,GAAG;AACrC,mBAAO,mBAAmB,MAAM,aAAa,aAAa;AAAA,UAC5D;AACA,cAAI,MAAM,aAAa,OAAO,GAAG;AAC/B,mBAAO,aAAa,MAAM,aAAa,OAAO;AAAA,UAChD;AAAA,QACF;AAEA,YAAI,eAAe,MAAM,KAAK,gBAAgB,iBAAiB,mBAAmB,CAAC;AACnF,YAAI,aAAa,QAAQ;AACvB,iBAAO,eAAe,CAAC;AACvB,uBAAa,QAAQ,SAAU,QAAQ;AACrC,sCAA0B,QAAQ,CAAC,OAAO,CAAC;AAC3C,gBAAI,cAAc,OAAO,aAAa,OAAO;AAC7C,gBAAI,aAAa,OAAO;AACxB,mBAAO,aAAa,WAAW,IAAI;AAAA,UACrC,CAAC;AAAA,QACH;AACA,eAAO;AAAA,MACT;AAOA,UAAI,sBAAsB,SAASC,qBAAoB,iBAAiB,YAAY;AAClF,YAAI,SAAS,CAAC;AACd,iBAAS,KAAK,YAAY;AACxB,cAAI,YAAY,WAAW,CAAC;AAE5B,cAAI,MAAM,gBAAgB,cAAc,SAAS;AACjD,cAAI,KAAK;AACP,sCAA0B,KAAK,CAAC,CAAC;AACjC,mBAAO,UAAU,QAAQ,UAAU,EAAE,CAAC,IAAI,IAAI,UAAU,KAAK;AAAA,UAC/D;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAKA,UAAI,0BAA0B,SAASC,yBAAwB,iBAAiB;AAC9E,YAAI,kBAAkB,iBAAiB,OAAO,CAAC,cAAc,uBAAuB,eAAe,cAAc,aAAa,cAAc,mBAAmB,CAAC;AAChK,cAAM,KAAK,gBAAgB,QAAQ,EAAE,QAAQ,SAAU,IAAI;AACzD,cAAI,UAAU,GAAG,QAAQ,YAAY;AACrC,cAAI,CAAC,gBAAgB,SAAS,OAAO,GAAG;AACtC,iBAAK,yBAAyB,OAAO,SAAS,GAAG,CAAC;AAAA,UACpD;AAAA,QACF,CAAC;AAAA,MACH;AAMA,UAAI,4BAA4B,SAASC,2BAA0B,IAAI,mBAAmB;AACxF,cAAM,KAAK,GAAG,UAAU,EAAE,QAAQ,SAAU,WAAW;AACrD,cAAI,kBAAkB,QAAQ,UAAU,IAAI,MAAM,IAAI;AACpD,iBAAK,CAAC,2BAA4B,OAAO,UAAU,MAAM,QAAS,EAAE,OAAO,GAAG,QAAQ,YAAY,GAAG,IAAI,GAAG,GAAG,OAAO,kBAAkB,SAAS,2BAA2B,OAAO,kBAAkB,KAAK,IAAI,CAAC,IAAI,gDAAgD,CAAC,CAAC;AAAA,UACvQ;AAAA,QACF,CAAC;AAAA,MACH;AACA,UAAI,qBAAqB;AAOzB,UAAI,YAAY,SAASC,WAAU,QAAQ;AACzC,YAAI,YAAY,aAAa;AAC7B,YAAI,QAAQ,SAAS;AACrB,YAAI,OAAO,OAAO,aAAa,YAAY;AACzC,iBAAO,SAAS,KAAK;AAAA,QACvB;AACA,YAAI,aAAa,OAAO,iBAAiB,SAAS,IAAI;AACtD,YAAI,sBAAsB,WAAW;AACrC,mBAAW,WAAW,OAAO,MAAM;AAGnC,mBAAW,WAAY;AACrB,iCAAuB,WAAW,KAAK;AAAA,QACzC,GAAG,kBAAkB;AACrB,YAAI,QAAQ,GAAG;AACb,6BAAmB,WAAW,OAAO,kBAAkB,mBAAmB;AAC1E,wBAAc;AAAA,QAChB;AACA,YAAI,CAAC,QAAQ,KAAK,CAAC,YAAY,uBAAuB;AACpD,sBAAY,wBAAwB,SAAS;AAAA,QAC/C;AACA,YAAI,OAAO,OAAO,YAAY,YAAY;AACxC,qBAAW,WAAY;AACrB,mBAAO,OAAO,QAAQ,KAAK;AAAA,UAC7B,CAAC;AAAA,QACH;AACA,oBAAY,WAAW,YAAY,eAAe,CAAC;AAAA,MACrD;AAKA,UAAI,4BAA4B,SAASC,2BAA0B,OAAO;AACxE,YAAI,QAAQ,SAAS;AACrB,YAAI,MAAM,WAAW,SAAS,CAAC,mBAAmB;AAChD;AAAA,QACF;AACA,YAAI,YAAY,aAAa;AAC7B,cAAM,oBAAoB,mBAAmBA,0BAAyB;AACtE,kBAAU,MAAM,YAAY;AAAA,MAC9B;AAMA,UAAI,yBAAyB,SAASC,wBAAuB,WAAW,OAAO;AAC7E,YAAI,qBAAqB,gBAAgB,KAAK,GAAG;AAC/C,oBAAU,MAAM,YAAY;AAC5B,gBAAM,iBAAiB,mBAAmB,yBAAyB;AAAA,QACrE,OAAO;AACL,oBAAU,MAAM,YAAY;AAAA,QAC9B;AAAA,MACF;AAOA,UAAI,qBAAqB,SAASC,oBAAmB,WAAW,kBAAkB,qBAAqB;AACrG,eAAO;AACP,YAAI,oBAAoB,wBAAwB,UAAU;AACxD,sCAA4B,mBAAmB;AAAA,QACjD;AAGA,mBAAW,WAAY;AACrB,oBAAU,YAAY;AAAA,QACxB,CAAC;AAAA,MACH;AAOA,UAAI,aAAa,SAASvG,YAAW,WAAW,OAAO,QAAQ;AAC7D,iBAAS,WAAW,OAAO,UAAU,QAAQ;AAC7C,YAAI,OAAO,WAAW;AAEpB,gBAAM,MAAM,YAAY,WAAW,KAAK,WAAW;AACnD,eAAK,OAAO,MAAM;AAClB,qBAAW,WAAY;AAErB,qBAAS,OAAO,OAAO,UAAU,KAAK;AAEtC,kBAAM,MAAM,eAAe,SAAS;AAAA,UACtC,GAAG,kBAAkB;AAAA,QACvB,OAAO;AACL,eAAK,OAAO,MAAM;AAAA,QACpB;AACA,iBAAS,CAAC,SAAS,iBAAiB,SAAS,IAAI,GAAG,YAAY,KAAK;AACrE,YAAI,OAAO,cAAc,OAAO,YAAY,CAAC,OAAO,OAAO;AACzD,mBAAS,CAAC,SAAS,iBAAiB,SAAS,IAAI,GAAG,YAAY,aAAa,CAAC;AAAA,QAChF;AAAA,MACF;AACA,UAAI,yBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAM3B,OAAO,SAAS,MAAM,QAAQ,mBAAmB;AAC/C,iBAAO,wDAAwD,KAAK,MAAM,IAAI,QAAQ,QAAQ,IAAI,QAAQ,QAAQ,qBAAqB,uBAAuB;AAAA,QAChK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,KAAK,SAAS,IAAI,QAAQ,mBAAmB;AAE3C,iBAAO,8FAA8F,KAAK,MAAM,IAAI,QAAQ,QAAQ,IAAI,QAAQ,QAAQ,qBAAqB,aAAa;AAAA,QAC5L;AAAA,MACF;AAKA,eAAS,0BAA0B,QAAQ;AAEzC,YAAI,OAAO,gBAAgB;AACzB;AAAA,QACF;AACA,YAAI,OAAO,UAAU,SAAS;AAC5B,iBAAO,iBAAiB,uBAAuB,OAAO;AAAA,QACxD;AACA,YAAI,OAAO,UAAU,OAAO;AAC1B,iBAAO,iBAAiB,uBAAuB,KAAK;AAAA,QACtD;AAAA,MACF;AAKA,eAAS,4BAA4B,QAAQ;AAE3C,YAAI,CAAC,OAAO,UAAU,OAAO,OAAO,WAAW,YAAY,CAAC,SAAS,cAAc,OAAO,MAAM,KAAK,OAAO,OAAO,WAAW,YAAY,CAAC,OAAO,OAAO,aAAa;AACpK,eAAK,qDAAqD;AAC1D,iBAAO,SAAS;AAAA,QAClB;AAAA,MACF;AAOA,eAAS,cAAc,QAAQ;AAC7B,kCAA0B,MAAM;AAGhC,YAAI,OAAO,uBAAuB,CAAC,OAAO,YAAY;AACpD,eAAK,kMAA4M;AAAA,QACnN;AACA,oCAA4B,MAAM;AAGlC,YAAI,OAAO,OAAO,UAAU,UAAU;AACpC,iBAAO,QAAQ,OAAO,MAAM,MAAM,IAAI,EAAE,KAAK,QAAQ;AAAA,QACvD;AACA,aAAK,MAAM;AAAA,MACb;AAGA,UAAI;AACJ,UAAI,WAAwB,oBAAI,QAAQ;AACxC,UAAI,aAA0B,2BAAY;AAKxC,iBAASwG,cAAa;AACpB,0BAAgB,MAAMA,WAAU;AAIhC,qCAA2B,MAAM,UAAU;AAAA,YACzC,UAAU;AAAA,YACV,OAAO;AAAA,UACT,CAAC;AAED,cAAI,OAAO,WAAW,aAAa;AACjC;AAAA,UACF;AACA,4BAAkB;AAGlB,mBAAS,OAAO,UAAU,QAAQ,OAAO,IAAI,MAAM,IAAI,GAAG,OAAO,GAAG,OAAO,MAAM,QAAQ;AACvF,iBAAK,IAAI,IAAI,UAAU,IAAI;AAAA,UAC7B;AACA,cAAI,cAAc,OAAO,OAAO,KAAK,YAAY,aAAa,IAAI,CAAC;AAGnE,eAAK,SAAS;AAGd,eAAK,oBAAoB;AACzB,gCAAsB,MAAM,UAAU,KAAK,MAAM,gBAAgB,MAAM,CAAC;AAAA,QAC1E;AACA,qBAAaA,aAAY,CAAC;AAAA,UACxB,KAAK;AAAA,UACL,OAAO,SAAS,MAAM,YAAY;AAChC,gBAAI,cAAc,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAC;AACvF,kCAAsB,OAAO,OAAO,CAAC,GAAG,aAAa,UAAU,CAAC;AAChE,gBAAI,YAAY,iBAAiB;AAC/B,kBAAI,qBAAqB,eAAe,mBAAmB,IAAI,YAAY,eAAe;AAC1F,kBAAI,oBAAoB,YAAY,gBAAgB;AACpD,0BAAY,gBAAgB,SAAS;AACrC,kBAAI,CAAC,mBAAmB;AACtB,mCAAmB;AAAA,kBACjB,aAAa;AAAA,gBACf,CAAC;AAAA,cACH;AACA,kBAAI,QAAQ,GAAG;AACb,gCAAgB;AAAA,cAClB;AAAA,YACF;AACA,wBAAY,kBAAkB;AAC9B,gBAAI,cAAc,cAAc,YAAY,WAAW;AACvD,0BAAc,WAAW;AACzB,mBAAO,OAAO,WAAW;AAGzB,gBAAI,YAAY,SAAS;AACvB,0BAAY,QAAQ,KAAK;AACzB,qBAAO,YAAY;AAAA,YACrB;AAGA,yBAAa,YAAY,mBAAmB;AAC5C,gBAAI,WAAW,iBAAiB,eAAe;AAC/C,mBAAO,iBAAiB,WAAW;AACnC,yBAAa,YAAY,IAAI,iBAAiB,WAAW;AACzD,mBAAO,YAAY,iBAAiB,UAAU,WAAW;AAAA,UAC3D;AAAA;AAAA,QAGF,GAAG;AAAA,UACD,KAAK;AAAA,UACL,OAAO,SAAS,KAAK,aAAa;AAChC,mBAAO,sBAAsB,MAAM,QAAQ,EAAE,KAAK,WAAW;AAAA,UAC/D;AAAA,QACF,GAAG;AAAA,UACD,KAAK;AAAA,UACL,OAAO,SAAS,SAAS,WAAW;AAClC,mBAAO,sBAAsB,MAAM,QAAQ,EAAE,SAAS,EAAE,SAAS;AAAA,UACnE;AAAA,QACF,CAAC,CAAC;AACF,eAAOA;AAAA,MACT,EAAE;AAQF,UAAI,cAAc,SAASC,aAAY,UAAU,UAAU,aAAa;AACtE,eAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAK5C,cAAI,cAAc,SAASC,aAAY,SAAS;AAC9C,qBAAS,MAAM;AAAA,cACb,aAAa;AAAA,cACb;AAAA,YACF,CAAC;AAAA,UACH;AACA,yBAAe,mBAAmB,IAAI,UAAU,OAAO;AACvD,yBAAe,kBAAkB,IAAI,UAAU,MAAM;AACrD,mBAAS,cAAc,UAAU,WAAY;AAC3C,qCAAyB,QAAQ;AAAA,UACnC;AACA,mBAAS,WAAW,UAAU,WAAY;AACxC,kCAAsB,QAAQ;AAAA,UAChC;AACA,mBAAS,aAAa,UAAU,WAAY;AAC1C,oCAAwB,UAAU,WAAW;AAAA,UAC/C;AACA,mBAAS,YAAY,UAAU,WAAY;AACzC,wBAAY,cAAc,KAAK;AAAA,UACjC;AACA,2BAAiB,aAAa,UAAU,WAAW;AACnD,4BAAkB,aAAa,aAAa,WAAW;AACvD,qCAA2B,UAAU,WAAW;AAChD,oBAAU,WAAW;AACrB,qBAAW,aAAa,aAAa,WAAW;AAChD,oBAAU,UAAU,WAAW;AAG/B,qBAAW,WAAY;AACrB,qBAAS,UAAU,YAAY;AAAA,UACjC,CAAC;AAAA,QACH,CAAC;AAAA,MACH;AAOA,UAAI,gBAAgB,SAASC,eAAc,YAAY,aAAa;AAClE,YAAI,iBAAiB,kBAAkB,UAAU;AACjD,YAAI,SAAS,OAAO,OAAO,CAAC,GAAG,eAAe,aAAa,gBAAgB,UAAU;AACrF,eAAO,YAAY,OAAO,OAAO,CAAC,GAAG,cAAc,WAAW,OAAO,SAAS;AAC9E,eAAO,YAAY,OAAO,OAAO,CAAC,GAAG,cAAc,WAAW,OAAO,SAAS;AAC9E,YAAI,OAAO,cAAc,OAAO;AAC9B,iBAAO,YAAY;AAAA,YACjB,UAAU;AAAA,UACZ;AACA,iBAAO,YAAY,CAAC;AAAA,QACtB;AACA,eAAO;AAAA,MACT;AAMA,UAAI,mBAAmB,SAASC,kBAAiB,UAAU;AACzD,YAAI,WAAW;AAAA,UACb,OAAO,SAAS;AAAA,UAChB,WAAW,aAAa;AAAA,UACxB,SAAS,WAAW;AAAA,UACpB,eAAe,iBAAiB;AAAA,UAChC,YAAY,cAAc;AAAA,UAC1B,cAAc,gBAAgB;AAAA,UAC9B,QAAQ,UAAU;AAAA,UAClB,aAAa,eAAe;AAAA,UAC5B,mBAAmB,qBAAqB;AAAA,UACxC,eAAe,iBAAiB;AAAA,QAClC;AACA,qBAAa,SAAS,IAAI,UAAU,QAAQ;AAC5C,eAAO;AAAA,MACT;AAOA,UAAI,aAAa,SAASC,YAAWnG,cAAa,aAAa,aAAa;AAC1E,YAAI,mBAAmB,oBAAoB;AAC3C,aAAK,gBAAgB;AACrB,YAAI,YAAY,OAAO;AACrB,UAAAA,aAAY,UAAU,IAAI,MAAM,WAAY;AAC1C,wBAAY,OAAO;AACnB,mBAAOA,aAAY;AAAA,UACrB,GAAG,YAAY,KAAK;AACpB,cAAI,YAAY,kBAAkB;AAChC,iBAAK,gBAAgB;AACrB,6BAAiB,kBAAkB,aAAa,kBAAkB;AAClE,uBAAW,WAAY;AACrB,kBAAIA,aAAY,WAAWA,aAAY,QAAQ,SAAS;AAEtD,wCAAwB,YAAY,KAAK;AAAA,cAC3C;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AAAA,MACF;AAMA,UAAI,YAAY,SAASoG,WAAU,UAAU,aAAa;AACxD,YAAI,YAAY,OAAO;AACrB;AAAA,QACF;AACA,YAAI,CAAC,eAAe,YAAY,aAAa,GAAG;AAC9C,4BAAkB;AAClB;AAAA,QACF;AACA,YAAI,CAAC,YAAY,UAAU,WAAW,GAAG;AACvC,mBAAS,IAAI,CAAC;AAAA,QAChB;AAAA,MACF;AAOA,UAAI,cAAc,SAASC,aAAY,UAAU,aAAa;AAC5D,YAAI,YAAY,aAAa,YAAY,SAAS,UAAU,GAAG;AAC7D,mBAAS,WAAW,MAAM;AAC1B,iBAAO;AAAA,QACT;AACA,YAAI,YAAY,eAAe,YAAY,SAAS,YAAY,GAAG;AACjE,mBAAS,aAAa,MAAM;AAC5B,iBAAO;AAAA,QACT;AACA,YAAI,YAAY,gBAAgB,YAAY,SAAS,aAAa,GAAG;AACnE,mBAAS,cAAc,MAAM;AAC7B,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AACA,UAAI,oBAAoB,SAASC,qBAAoB;AACnD,YAAI,SAAS,yBAAyB,eAAe,OAAO,SAAS,cAAc,SAAS,YAAY;AACtG,mBAAS,cAAc,KAAK;AAAA,QAC9B;AAAA,MACF;AAGA,UAAI,OAAO,WAAW,eAAe,QAAQ,KAAK,UAAU,QAAQ,KAAK,SAAS,KAAK,MAAM,wBAAwB,GAAG;AACtH,YAAI,MAAM,oBAAI,KAAK;AACnB,YAAI,iBAAiB,aAAa,QAAQ,iBAAiB;AAC3D,YAAI,CAAC,gBAAgB;AACnB,uBAAa,QAAQ,mBAAmB,GAAG,OAAO,GAAG,CAAC;AAAA,QACxD,YAAY,IAAI,QAAQ,IAAI,KAAK,MAAM,cAAc,MAAM,MAAO,KAAK,KAAK,MAAM,GAAG;AACnF,qBAAW,WAAY;AACrB,qBAAS,KAAK,MAAM,gBAAgB;AACpC,gBAAI,kBAAkB,SAAS,cAAc,OAAO;AACpD,4BAAgB,MAAM;AACtB,4BAAgB,OAAO;AACvB,qBAAS,KAAK,YAAY,eAAe;AACzC,uBAAW,WAAY;AACrB,8BAAgB,KAAK,EAAE,OAAO,EAAE,WAAY;AAAA,cAE5C,CAAC;AAAA,YACH,GAAG,IAAI;AAAA,UACT,GAAG,GAAG;AAAA,QACR;AAAA,MACF;AAGA,iBAAW,UAAU,iBAAiB;AACtC,iBAAW,UAAU,gBAAgB;AACrC,iBAAW,UAAU,WAAW;AAChC,iBAAW,UAAU,eAAe;AACpC,iBAAW,UAAU,cAAc;AACnC,iBAAW,UAAU,cAAc;AACnC,iBAAW,UAAU,iBAAiB;AACtC,iBAAW,UAAU,wBAAwB;AAC7C,iBAAW,UAAU,yBAAyB;AAC9C,iBAAW,UAAU,QAAQ;AAC7B,iBAAW,UAAU,aAAa;AAClC,iBAAW,UAAU,aAAa;AAClC,iBAAW,UAAU,aAAa;AAClC,iBAAW,UAAU,gBAAgB;AACrC,iBAAW,UAAU,SAAS;AAC9B,iBAAW,UAAU,WAAW;AAGhC,aAAO,OAAO,YAAY,aAAa;AAGvC,aAAO,KAAK,eAAe,EAAE,QAAQ,SAAU,KAAK;AAKlD,mBAAW,GAAG,IAAI,WAAY;AAC5B,cAAI,mBAAmB,gBAAgB,GAAG,GAAG;AAC3C,gBAAI;AACJ,oBAAQ,mBAAmB,iBAAiB,GAAG,EAAE,MAAM,kBAAkB,SAAS;AAAA,UACpF;AACA,iBAAO;AAAA,QACT;AAAA,MACF,CAAC;AACD,iBAAW,gBAAgB;AAC3B,iBAAW,UAAU;AACrB,UAAI3E,SAAO;AAEX,MAAAA,OAAK,SAAS,IAAIA;AAClB,aAAOA;AAAA,IACT,CAAC;AACD,QAAI,OAAO,YAAS,eAAe,QAAK,aAAa;AACnD,cAAK,OAAO,QAAK,aAAa,QAAK,OAAO,QAAK,aAAa,QAAK;AAAA,IACnE;AACA,mBAAe,OAAO,YAAY,SAAU,GAAG,GAAG;AAChD,UAAI,IAAI,EAAE,cAAc,OAAO;AAC/B,UAAI,EAAE,qBAAqB,MAAM,EAAE,CAAC,EAAE,YAAY,CAAC,GAAG,EAAE;AAAY,UAAE,WAAW,aAAa,EAAE,WAAW,UAAU;AAAA;AAAQ,YAAI;AAC/H,YAAE,YAAY;AAAA,QAChB,SAAS4E,IAAG;AACV,YAAE,YAAY;AAAA,QAChB;AAAA,IACF,EAAE,UAAU,ytuBAAiuuB;AAAA;AAAA;;;ACriJ7uuB,IAAaC,sBAAmB,uBAAA;AAA1B,QAAOA,uBAAP,MAAOA,qBAAmB;;;qBAAnBA,sBAAmB;EAAA;;UAAnBA;IAAmBC,WAAA,CAAA,CAAA,iBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,UAAA,SAAAC,6BAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACNhCE,QAAAC,oBAAA,GAAA,eAAA;;;;;;ADMM,MAAOT,uBAAP;SAAOA;AAAmB,GAAA;;;AEYhC,IAAI,2BAAyC,uBAAM;AACjD,QAAM,4BAAN,MAAM,0BAAyB;AAAA,IAC7B,YAAY,WAAW,aAAa;AAClC,WAAK,YAAY;AACjB,WAAK,cAAc;AAMnB,WAAK,WAAW,OAAK;AAAA,MAAC;AAKtB,WAAK,YAAY,MAAM;AAAA,MAAC;AAAA,IAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,YAAY,KAAK,OAAO;AACtB,WAAK,UAAU,YAAY,KAAK,YAAY,eAAe,KAAK,KAAK;AAAA,IACvE;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,kBAAkB,IAAI;AACpB,WAAK,YAAY;AAAA,IACnB;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,iBAAiB,IAAI;AACnB,WAAK,WAAW;AAAA,IAClB;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,iBAAiB,YAAY;AAC3B,WAAK,YAAY,YAAY,UAAU;AAAA,IACzC;AAAA,EAWF;AATI,4BAAK,YAAO,SAAS,iCAAiC,GAAG;AACvD,WAAO,KAAK,KAAK,2BAA6B,4BAAqB,SAAS,GAAM,4BAAqB,UAAU,CAAC;AAAA,EACpH;AAGA,4BAAK,YAAsB,gBAAG,4BAAkB;AAAA,IAC9C,MAAM;AAAA,EACR,CAAC;AArDL,MAAMU,4BAAN;AAwDA,SAAOA;AACT,GAAG;AAaH,IAAI,8BAA4C,uBAAM;AACpD,QAAM,+BAAN,MAAM,qCAAoC,yBAAyB;AAAA,EAenE;AAbI,+BAAK,YAAuB,uBAAM;AAChC,QAAI;AACJ,WAAO,SAAS,oCAAoC,GAAG;AACrD,cAAQ,kDAA6C,gDAA8C,gCAAsB,4BAA2B,IAAI,KAAK,4BAA2B;AAAA,IAC1L;AAAA,EACF,GAAG;AAGH,+BAAK,YAAsB,gBAAG,4BAAkB;AAAA,IAC9C,MAAM;AAAA,IACN,UAAU,CAAI,oCAA0B;AAAA,EAC1C,CAAC;AAbL,MAAMC,+BAAN;AAgBA,SAAOA;AACT,GAAG;AAWH,IAAM,oBAAiC,oBAAI,eAAe,iBAAiB;AAC3E,IAAM,0BAA0B;AAAA,EAC9B,SAAS;AAAA,EACT,aAA0B,2BAAW,MAAM,4BAA4B;AAAA,EACvE,OAAO;AACT;AAwBA,IAAI,+BAA6C,uBAAM;AACrD,QAAM,gCAAN,MAAM,sCAAqC,4BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA,IAKrE,WAAW,OAAO;AAChB,WAAK,YAAY,WAAW,KAAK;AAAA,IACnC;AAAA,EAyBF;AAvBI,gCAAK,YAAuB,uBAAM;AAChC,QAAI;AACJ,WAAO,SAAS,qCAAqC,GAAG;AACtD,cAAQ,mDAA8C,iDAA+C,gCAAsB,6BAA4B,IAAI,KAAK,6BAA4B;AAAA,IAC9L;AAAA,EACF,GAAG;AAGH,gCAAK,YAAsB,gBAAG,4BAAkB;AAAA,IAC9C,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,SAAS,QAAQ,YAAY,mBAAmB,EAAE,GAAG,CAAC,SAAS,QAAQ,YAAY,eAAe,EAAE,GAAG,CAAC,SAAS,QAAQ,YAAY,WAAW,EAAE,CAAC;AAAA,IAChK,cAAc,SAAS,0CAA0C,IAAI,KAAK;AACxE,UAAI,KAAK,GAAG;AACV,QAAG,qBAAW,UAAU,SAAS,uDAAuD,QAAQ;AAC9F,iBAAO,IAAI,SAAS,OAAO,OAAO,OAAO;AAAA,QAC3C,CAAC,EAAE,QAAQ,SAAS,uDAAuD;AACzE,iBAAO,IAAI,UAAU;AAAA,QACvB,CAAC;AAAA,MACH;AAAA,IACF;AAAA,IACA,UAAU,CAAI,6BAAmB,CAAC,uBAAuB,CAAC,GAAM,oCAA0B;AAAA,EAC5F,CAAC;AA9BL,MAAMC,gCAAN;AAiCA,SAAOA;AACT,GAAG;AAIH,IAAM,yBAAyB;AAAA,EAC7B,SAAS;AAAA,EACT,aAA0B,2BAAW,MAAM,oBAAoB;AAAA,EAC/D,OAAO;AACT;AAKA,SAAS,aAAa;AACpB,QAAM,YAAY,OAAQ,IAAI,OAAQ,EAAE,aAAa,IAAI;AACzD,SAAO,gBAAgB,KAAK,UAAU,YAAY,CAAC;AACrD;AAOA,IAAM,0BAAuC,oBAAI,eAAe,sBAAsB;AAoCtF,IAAI,uBAAqC,uBAAM;AAC7C,QAAM,wBAAN,MAAM,8BAA6B,yBAAyB;AAAA,IAC1D,YAAY,UAAU,YAAY,kBAAkB;AAClD,YAAM,UAAU,UAAU;AAC1B,WAAK,mBAAmB;AAExB,WAAK,aAAa;AAClB,UAAI,KAAK,oBAAoB,MAAM;AACjC,aAAK,mBAAmB,CAAC,WAAW;AAAA,MACtC;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,WAAW,OAAO;AAChB,YAAM,kBAAkB,SAAS,OAAO,KAAK;AAC7C,WAAK,YAAY,SAAS,eAAe;AAAA,IAC3C;AAAA;AAAA,IAEA,aAAa,OAAO;AAClB,UAAI,CAAC,KAAK,oBAAoB,KAAK,oBAAoB,CAAC,KAAK,YAAY;AACvE,aAAK,SAAS,KAAK;AAAA,MACrB;AAAA,IACF;AAAA;AAAA,IAEA,oBAAoB;AAClB,WAAK,aAAa;AAAA,IACpB;AAAA;AAAA,IAEA,gBAAgB,OAAO;AACrB,WAAK,aAAa;AAClB,WAAK,oBAAoB,KAAK,SAAS,KAAK;AAAA,IAC9C;AAAA,EA0BF;AAxBI,wBAAK,YAAO,SAAS,6BAA6B,GAAG;AACnD,WAAO,KAAK,KAAK,uBAAyB,4BAAqB,SAAS,GAAM,4BAAqB,UAAU,GAAM,4BAAkB,yBAAyB,CAAC,CAAC;AAAA,EAClK;AAGA,wBAAK,YAAsB,gBAAG,4BAAkB;AAAA,IAC9C,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,SAAS,mBAAmB,IAAI,GAAG,QAAQ,UAAU,GAAG,CAAC,YAAY,mBAAmB,EAAE,GAAG,CAAC,SAAS,eAAe,IAAI,GAAG,QAAQ,UAAU,GAAG,CAAC,YAAY,eAAe,EAAE,GAAG,CAAC,SAAS,WAAW,IAAI,GAAG,QAAQ,UAAU,GAAG,CAAC,YAAY,WAAW,EAAE,GAAG,CAAC,IAAI,oBAAoB,EAAE,CAAC;AAAA,IAC1S,cAAc,SAAS,kCAAkC,IAAI,KAAK;AAChE,UAAI,KAAK,GAAG;AACV,QAAG,qBAAW,SAAS,SAAS,8CAA8C,QAAQ;AACpF,iBAAO,IAAI,aAAa,OAAO,OAAO,KAAK;AAAA,QAC7C,CAAC,EAAE,QAAQ,SAAS,+CAA+C;AACjE,iBAAO,IAAI,UAAU;AAAA,QACvB,CAAC,EAAE,oBAAoB,SAAS,2DAA2D;AACzF,iBAAO,IAAI,kBAAkB;AAAA,QAC/B,CAAC,EAAE,kBAAkB,SAAS,uDAAuD,QAAQ;AAC3F,iBAAO,IAAI,gBAAgB,OAAO,OAAO,KAAK;AAAA,QAChD,CAAC;AAAA,MACH;AAAA,IACF;AAAA,IACA,UAAU,CAAI,6BAAmB,CAAC,sBAAsB,CAAC,GAAM,oCAA0B;AAAA,EAC3F,CAAC;AAxDL,MAAMC,wBAAN;AA2DA,SAAOA;AACT,GAAG;AAIH,SAAS,kBAAkB,OAAO;AAMhC,SAAO,SAAS,SAAS,OAAO,UAAU,YAAY,MAAM,QAAQ,KAAK,MAAM,MAAM,WAAW;AAClG;AACA,SAAS,eAAe,OAAO;AAE7B,SAAO,SAAS,QAAQ,OAAO,MAAM,WAAW;AAClD;AA6BA,IAAM,gBAA6B,oBAAI,eAAe,cAAc;AA8BpE,IAAM,sBAAmC,oBAAI,eAAe,mBAAmB;AA+B/E,IAAM,eAAe;AAYrB,IAAM,aAAN,MAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqBf,OAAO,IAAI,KAAK;AACd,WAAO,aAAa,GAAG;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqBA,OAAO,IAAI,KAAK;AACd,WAAO,aAAa,GAAG;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqBA,OAAO,SAAS,SAAS;AACvB,WAAO,kBAAkB,OAAO;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsBA,OAAO,aAAa,SAAS;AAC3B,WAAO,sBAAsB,OAAO;AAAA,EACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqCA,OAAO,MAAM,SAAS;AACpB,WAAO,eAAe,OAAO;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA+BA,OAAO,UAAU,WAAW;AAC1B,WAAO,mBAAmB,SAAS;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA4BA,OAAO,UAAU,WAAW;AAC1B,WAAO,mBAAmB,SAAS;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkDA,OAAO,QAAQ,SAAS;AACtB,WAAO,iBAAiB,OAAO;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAO,cAAc,SAAS;AAC5B,WAAO,cAAc,OAAO;AAAA,EAC9B;AAAA,EACA,OAAO,QAAQ,YAAY;AACzB,WAAO,QAAQ,UAAU;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA,OAAO,aAAa,YAAY;AAC9B,WAAO,aAAa,UAAU;AAAA,EAChC;AACF;AAKA,SAAS,aAAa,KAAK;AACzB,SAAO,aAAW;AAChB,QAAI,kBAAkB,QAAQ,KAAK,KAAK,kBAAkB,GAAG,GAAG;AAC9D,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ,WAAW,QAAQ,KAAK;AAGtC,WAAO,CAAC,MAAM,KAAK,KAAK,QAAQ,MAAM;AAAA,MACpC,OAAO;AAAA,QACL,OAAO;AAAA,QACP,UAAU,QAAQ;AAAA,MACpB;AAAA,IACF,IAAI;AAAA,EACN;AACF;AAKA,SAAS,aAAa,KAAK;AACzB,SAAO,aAAW;AAChB,QAAI,kBAAkB,QAAQ,KAAK,KAAK,kBAAkB,GAAG,GAAG;AAC9D,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ,WAAW,QAAQ,KAAK;AAGtC,WAAO,CAAC,MAAM,KAAK,KAAK,QAAQ,MAAM;AAAA,MACpC,OAAO;AAAA,QACL,OAAO;AAAA,QACP,UAAU,QAAQ;AAAA,MACpB;AAAA,IACF,IAAI;AAAA,EACN;AACF;AAKA,SAAS,kBAAkB,SAAS;AAClC,SAAO,kBAAkB,QAAQ,KAAK,IAAI;AAAA,IACxC,YAAY;AAAA,EACd,IAAI;AACN;AAMA,SAAS,sBAAsB,SAAS;AACtC,SAAO,QAAQ,UAAU,OAAO,OAAO;AAAA,IACrC,YAAY;AAAA,EACd;AACF;AAKA,SAAS,eAAe,SAAS;AAC/B,MAAI,kBAAkB,QAAQ,KAAK,GAAG;AACpC,WAAO;AAAA,EACT;AAEA,SAAO,aAAa,KAAK,QAAQ,KAAK,IAAI,OAAO;AAAA,IAC/C,SAAS;AAAA,EACX;AACF;AAKA,SAAS,mBAAmB,WAAW;AACrC,SAAO,aAAW;AAChB,QAAI,kBAAkB,QAAQ,KAAK,KAAK,CAAC,eAAe,QAAQ,KAAK,GAAG;AAGtE,aAAO;AAAA,IACT;AACA,WAAO,QAAQ,MAAM,SAAS,YAAY;AAAA,MACxC,aAAa;AAAA,QACX,kBAAkB;AAAA,QAClB,gBAAgB,QAAQ,MAAM;AAAA,MAChC;AAAA,IACF,IAAI;AAAA,EACN;AACF;AAKA,SAAS,mBAAmB,WAAW;AACrC,SAAO,aAAW;AAChB,WAAO,eAAe,QAAQ,KAAK,KAAK,QAAQ,MAAM,SAAS,YAAY;AAAA,MACzE,aAAa;AAAA,QACX,kBAAkB;AAAA,QAClB,gBAAgB,QAAQ,MAAM;AAAA,MAChC;AAAA,IACF,IAAI;AAAA,EACN;AACF;AAKA,SAAS,iBAAiB,SAAS;AACjC,MAAI,CAAC;AAAS,WAAO;AACrB,MAAI;AACJ,MAAI;AACJ,MAAI,OAAO,YAAY,UAAU;AAC/B,eAAW;AACX,QAAI,QAAQ,OAAO,CAAC,MAAM;AAAK,kBAAY;AAC3C,gBAAY;AACZ,QAAI,QAAQ,OAAO,QAAQ,SAAS,CAAC,MAAM;AAAK,kBAAY;AAC5D,YAAQ,IAAI,OAAO,QAAQ;AAAA,EAC7B,OAAO;AACL,eAAW,QAAQ,SAAS;AAC5B,YAAQ;AAAA,EACV;AACA,SAAO,aAAW;AAChB,QAAI,kBAAkB,QAAQ,KAAK,GAAG;AACpC,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ,QAAQ;AACtB,WAAO,MAAM,KAAK,KAAK,IAAI,OAAO;AAAA,MAChC,WAAW;AAAA,QACT,mBAAmB;AAAA,QACnB,eAAe;AAAA,MACjB;AAAA,IACF;AAAA,EACF;AACF;AAIA,SAAS,cAAc,SAAS;AAC9B,SAAO;AACT;AACA,SAAS,UAAU,GAAG;AACpB,SAAO,KAAK;AACd;AACA,SAAS,aAAa,OAAO;AAC3B,QAAM,MAAM,UAAW,KAAK,IAAI,KAAK,KAAK,IAAI;AAC9C,OAAK,OAAO,cAAc,eAAe,cAAc,CAAC,eAAgB,GAAG,GAAG;AAC5E,QAAI,eAAe;AAEnB,QAAI,OAAO,UAAU,UAAU;AAC7B,sBAAgB;AAAA,IAClB;AACA,UAAM,IAAI,aAAc,OAA0D,YAAY;AAAA,EAChG;AACA,SAAO;AACT;AACA,SAAS,YAAY,eAAe;AAClC,MAAI,MAAM,CAAC;AACX,gBAAc,QAAQ,YAAU;AAC9B,UAAM,UAAU,OAAO,kCAClB,MACA,UACD;AAAA,EACN,CAAC;AACD,SAAO,OAAO,KAAK,GAAG,EAAE,WAAW,IAAI,OAAO;AAChD;AACA,SAAS,kBAAkB,SAAS,YAAY;AAC9C,SAAO,WAAW,IAAI,eAAa,UAAU,OAAO,CAAC;AACvD;AACA,SAAS,cAAc,WAAW;AAChC,SAAO,CAAC,UAAU;AACpB;AASA,SAAS,oBAAoB,YAAY;AACvC,SAAO,WAAW,IAAI,eAAa;AACjC,WAAO,cAAc,SAAS,IAAI,YAAY,OAAK,UAAU,SAAS,CAAC;AAAA,EACzE,CAAC;AACH;AAKA,SAAS,QAAQ,YAAY;AAC3B,MAAI,CAAC;AAAY,WAAO;AACxB,QAAM,oBAAoB,WAAW,OAAO,SAAS;AACrD,MAAI,kBAAkB,UAAU;AAAG,WAAO;AAC1C,SAAO,SAAU,SAAS;AACxB,WAAO,YAAY,kBAAkB,SAAS,iBAAiB,CAAC;AAAA,EAClE;AACF;AAMA,SAAS,kBAAkB,YAAY;AACrC,SAAO,cAAc,OAAO,QAAQ,oBAAoB,UAAU,CAAC,IAAI;AACzE;AAKA,SAAS,aAAa,YAAY;AAChC,MAAI,CAAC;AAAY,WAAO;AACxB,QAAM,oBAAoB,WAAW,OAAO,SAAS;AACrD,MAAI,kBAAkB,UAAU;AAAG,WAAO;AAC1C,SAAO,SAAU,SAAS;AACxB,UAAM,cAAc,kBAAkB,SAAS,iBAAiB,EAAE,IAAI,YAAY;AAClF,WAAO,SAAS,WAAW,EAAE,KAAK,IAAI,WAAW,CAAC;AAAA,EACpD;AACF;AAMA,SAAS,uBAAuB,YAAY;AAC1C,SAAO,cAAc,OAAO,aAAa,oBAAoB,UAAU,CAAC,IAAI;AAC9E;AAKA,SAAS,gBAAgB,mBAAmB,cAAc;AACxD,MAAI,sBAAsB;AAAM,WAAO,CAAC,YAAY;AACpD,SAAO,MAAM,QAAQ,iBAAiB,IAAI,CAAC,GAAG,mBAAmB,YAAY,IAAI,CAAC,mBAAmB,YAAY;AACnH;AAIA,SAAS,qBAAqB,SAAS;AACrC,SAAO,QAAQ;AACjB;AAIA,SAAS,0BAA0B,SAAS;AAC1C,SAAO,QAAQ;AACjB;AAQA,SAAS,oBAAoB,YAAY;AACvC,MAAI,CAAC;AAAY,WAAO,CAAC;AACzB,SAAO,MAAM,QAAQ,UAAU,IAAI,aAAa,CAAC,UAAU;AAC7D;AAQA,SAAS,aAAa,YAAY,WAAW;AAC3C,SAAO,MAAM,QAAQ,UAAU,IAAI,WAAW,SAAS,SAAS,IAAI,eAAe;AACrF;AAQA,SAAS,cAAc,YAAY,mBAAmB;AACpD,QAAM,UAAU,oBAAoB,iBAAiB;AACrD,QAAM,kBAAkB,oBAAoB,UAAU;AACtD,kBAAgB,QAAQ,OAAK;AAK3B,QAAI,CAAC,aAAa,SAAS,CAAC,GAAG;AAC7B,cAAQ,KAAK,CAAC;AAAA,IAChB;AAAA,EACF,CAAC;AACD,SAAO;AACT;AACA,SAAS,iBAAiB,YAAY,mBAAmB;AACvD,SAAO,oBAAoB,iBAAiB,EAAE,OAAO,OAAK,CAAC,aAAa,YAAY,CAAC,CAAC;AACxF;AAUA,IAAM,2BAAN,MAA+B;AAAA,EAC7B,cAAc;AAKZ,SAAK,iBAAiB,CAAC;AAMvB,SAAK,sBAAsB,CAAC;AAI5B,SAAK,sBAAsB,CAAC;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,QAAQ;AACV,WAAO,KAAK,UAAU,KAAK,QAAQ,QAAQ;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,IAAI,QAAQ;AACV,WAAO,KAAK,UAAU,KAAK,QAAQ,QAAQ;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,UAAU;AACZ,WAAO,KAAK,UAAU,KAAK,QAAQ,UAAU;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,IAAI,UAAU;AACZ,WAAO,KAAK,UAAU,KAAK,QAAQ,UAAU;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,IAAI,WAAW;AACb,WAAO,KAAK,UAAU,KAAK,QAAQ,WAAW;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,UAAU;AACZ,WAAO,KAAK,UAAU,KAAK,QAAQ,UAAU;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,SAAS;AACX,WAAO,KAAK,UAAU,KAAK,QAAQ,SAAS;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,WAAW;AACb,WAAO,KAAK,UAAU,KAAK,QAAQ,WAAW;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,QAAQ;AACV,WAAO,KAAK,UAAU,KAAK,QAAQ,QAAQ;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,UAAU;AACZ,WAAO,KAAK,UAAU,KAAK,QAAQ,UAAU;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,IAAI,SAAS;AACX,WAAO,KAAK,UAAU,KAAK,QAAQ,SAAS;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,YAAY;AACd,WAAO,KAAK,UAAU,KAAK,QAAQ,YAAY;AAAA,EACjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,gBAAgB;AAClB,WAAO,KAAK,UAAU,KAAK,QAAQ,gBAAgB;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,IAAI,eAAe;AACjB,WAAO,KAAK,UAAU,KAAK,QAAQ,eAAe;AAAA,EACpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,OAAO;AACT,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,eAAe,YAAY;AACzB,SAAK,iBAAiB,cAAc,CAAC;AACrC,SAAK,uBAAuB,kBAAkB,KAAK,cAAc;AAAA,EACnE;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,oBAAoB,YAAY;AAC9B,SAAK,sBAAsB,cAAc,CAAC;AAC1C,SAAK,4BAA4B,uBAAuB,KAAK,mBAAmB;AAAA,EAClF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,YAAY;AACd,WAAO,KAAK,wBAAwB;AAAA,EACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,iBAAiB;AACnB,WAAO,KAAK,6BAA6B;AAAA,EAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,mBAAmB,IAAI;AACrB,SAAK,oBAAoB,KAAK,EAAE;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,4BAA4B;AAC1B,SAAK,oBAAoB,QAAQ,QAAM,GAAG,CAAC;AAC3C,SAAK,sBAAsB,CAAC;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,QAAQ,QAAW;AACvB,QAAI,KAAK;AAAS,WAAK,QAAQ,MAAM,KAAK;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA+BA,SAAS,WAAW,MAAM;AACxB,WAAO,KAAK,UAAU,KAAK,QAAQ,SAAS,WAAW,IAAI,IAAI;AAAA,EACjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA4BA,SAAS,WAAW,MAAM;AACxB,WAAO,KAAK,UAAU,KAAK,QAAQ,SAAS,WAAW,IAAI,IAAI;AAAA,EACjE;AACF;AASA,IAAM,mBAAN,cAA+B,yBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtD,IAAI,gBAAgB;AAClB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,OAAO;AACT,WAAO;AAAA,EACT;AACF;AASA,IAAM,YAAN,cAAwB,yBAAyB;AAAA,EAC/C,cAAc;AACZ,UAAM,GAAG,SAAS;AAOlB,SAAK,UAAU;AAKf,SAAK,OAAO;AAKZ,SAAK,gBAAgB;AAAA,EACvB;AACF;AAMA,IAAM,wBAAN,MAA4B;AAAA,EAC1B,YAAY,IAAI;AACd,SAAK,MAAM;AAAA,EACb;AAAA,EACA,IAAI,YAAY;AACd,WAAO,CAAC,CAAC,KAAK,KAAK,SAAS;AAAA,EAC9B;AAAA,EACA,IAAI,cAAc;AAChB,WAAO,CAAC,CAAC,KAAK,KAAK,SAAS;AAAA,EAC9B;AAAA,EACA,IAAI,aAAa;AACf,WAAO,CAAC,CAAC,KAAK,KAAK,SAAS;AAAA,EAC9B;AAAA,EACA,IAAI,UAAU;AACZ,WAAO,CAAC,CAAC,KAAK,KAAK,SAAS;AAAA,EAC9B;AAAA,EACA,IAAI,UAAU;AACZ,WAAO,CAAC,CAAC,KAAK,KAAK,SAAS;AAAA,EAC9B;AAAA,EACA,IAAI,YAAY;AACd,WAAO,CAAC,CAAC,KAAK,KAAK,SAAS;AAAA,EAC9B;AAAA,EACA,IAAI,YAAY;AACd,WAAO,CAAC,CAAC,KAAK,KAAK,SAAS;AAAA,EAC9B;AAAA,EACA,IAAI,cAAc;AAGhB,WAAO,CAAC,CAAC,KAAK,KAAK;AAAA,EACrB;AACF;AACA,IAAM,sBAAsB;AAAA,EAC1B,wBAAwB;AAAA,EACxB,sBAAsB;AAAA,EACtB,uBAAuB;AAAA,EACvB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,sBAAsB;AAAA,EACtB,sBAAsB;AACxB;AACA,IAAM,oBAAoB,iCACrB,sBADqB;AAAA,EAExB,wBAAwB;AAC1B;AAwBA,IAAI,kBAAgC,uBAAM;AACxC,QAAM,mBAAN,MAAM,yBAAwB,sBAAsB;AAAA,IAClD,YAAY,IAAI;AACd,YAAM,EAAE;AAAA,IACV;AAAA,EAmBF;AAjBI,mBAAK,YAAO,SAAS,wBAAwB,GAAG;AAC9C,WAAO,KAAK,KAAK,kBAAoB,4BAAkB,WAAW,CAAC,CAAC;AAAA,EACtE;AAGA,mBAAK,YAAsB,gBAAG,4BAAkB;AAAA,IAC9C,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,IAAI,mBAAmB,EAAE,GAAG,CAAC,IAAI,WAAW,EAAE,GAAG,CAAC,IAAI,eAAe,EAAE,CAAC;AAAA,IACrF,UAAU;AAAA,IACV,cAAc,SAAS,6BAA6B,IAAI,KAAK;AAC3D,UAAI,KAAK,GAAG;AACV,QAAG,sBAAY,gBAAgB,IAAI,WAAW,EAAE,cAAc,IAAI,SAAS,EAAE,eAAe,IAAI,UAAU,EAAE,YAAY,IAAI,OAAO,EAAE,YAAY,IAAI,OAAO,EAAE,cAAc,IAAI,SAAS,EAAE,cAAc,IAAI,SAAS;AAAA,MACxN;AAAA,IACF;AAAA,IACA,UAAU,CAAI,oCAA0B;AAAA,EAC1C,CAAC;AApBL,MAAMC,mBAAN;AAuBA,SAAOA;AACT,GAAG;AAgBH,IAAI,uBAAqC,uBAAM;AAC7C,QAAM,wBAAN,MAAM,8BAA6B,sBAAsB;AAAA,IACvD,YAAY,IAAI;AACd,YAAM,EAAE;AAAA,IACV;AAAA,EAmBF;AAjBI,wBAAK,YAAO,SAAS,6BAA6B,GAAG;AACnD,WAAO,KAAK,KAAK,uBAAyB,4BAAkB,kBAAkB,EAAE,CAAC;AAAA,EACnF;AAGA,wBAAK,YAAsB,gBAAG,4BAAkB;AAAA,IAC9C,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,IAAI,iBAAiB,EAAE,GAAG,CAAC,IAAI,iBAAiB,EAAE,GAAG,CAAC,IAAI,gBAAgB,EAAE,GAAG,CAAC,IAAI,aAAa,EAAE,GAAG,CAAC,QAAQ,GAAG,YAAY,EAAE,GAAG,CAAC,IAAI,UAAU,EAAE,CAAC;AAAA,IAClK,UAAU;AAAA,IACV,cAAc,SAAS,kCAAkC,IAAI,KAAK;AAChE,UAAI,KAAK,GAAG;AACV,QAAG,sBAAY,gBAAgB,IAAI,WAAW,EAAE,cAAc,IAAI,SAAS,EAAE,eAAe,IAAI,UAAU,EAAE,YAAY,IAAI,OAAO,EAAE,YAAY,IAAI,OAAO,EAAE,cAAc,IAAI,SAAS,EAAE,cAAc,IAAI,SAAS,EAAE,gBAAgB,IAAI,WAAW;AAAA,MACzP;AAAA,IACF;AAAA,IACA,UAAU,CAAI,oCAA0B;AAAA,EAC1C,CAAC;AApBL,MAAMC,wBAAN;AAuBA,SAAOA;AACT,GAAG;AAIH,IAAM,yBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAU/B,IAAM,uBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAY7B,IAAM,uBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAe7B,IAAM,sBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAY5B,SAAS,yBAAyB;AAChC,SAAO,IAAI,aAAc,MAA8D;AAAA;AAAA;AAAA;AAAA;AAAA,MAKnF,sBAAsB,EAAE;AAC9B;AACA,SAAS,wBAAwB;AAC/B,SAAO,IAAI,aAAc,MAAkE;AAAA;AAAA;AAAA;AAAA;AAAA,QAKrF,oBAAoB;AAAA;AAAA;AAAA;AAAA,QAIpB,mBAAmB,EAAE;AAC7B;AACA,SAAS,uBAAuB;AAC9B,SAAO,IAAI,aAAc,MAAyD;AAAA;AAAA;AAAA;AAAA,QAI5E,sBAAsB,EAAE;AAChC;AACA,SAAS,uBAAuB;AAC9B,SAAO,IAAI,aAAc,MAA4D;AAAA;AAAA;AAAA;AAAA;AAAA,MAKjF,oBAAoB,EAAE;AAC5B;AACA,SAAS,uBAAuB;AAC9B,SAAO,IAAI,aAAc,MAA4D;AAAA;AAAA;AAAA;AAAA;AAAA,QAK/E,oBAAoB,EAAE;AAC9B;AACA,IAAM,sBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgB5B,IAAM,wCAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAe9C,SAAS,eAAe,eAAe;AACrC,SAAO;AAAA,iEACwD,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAM7C,kBAAkB,gBAAgB,yBAAyB,iBAAiB;AAAA;AAE7G;AACA,SAAS,YAAY,aAAa,KAAK;AACrC,SAAO,cAAc,eAAe,GAAG,MAAM,aAAa,GAAG;AAC/D;AACA,SAAS,gBAAgB,aAAa;AACpC,SAAO;AAAA,sDAC6C,cAAc,UAAU,OAAO;AAAA;AAAA;AAGrF;AACA,SAAS,oBAAoB,aAAa,KAAK;AAC7C,SAAO,4BAA4B,YAAY,aAAa,GAAG,CAAC;AAClE;AACA,SAAS,yBAAyB,aAAa,KAAK;AAClD,SAAO,wCAAwC,YAAY,aAAa,GAAG,CAAC;AAC9E;AAOA,IAAM,QAAQ;AAMd,IAAM,UAAU;AAQhB,IAAM,UAAU;AAQhB,IAAM,WAAW;AAIjB,SAAS,eAAe,iBAAiB;AACvC,UAAQ,aAAa,eAAe,IAAI,gBAAgB,aAAa,oBAAoB;AAC3F;AAIA,SAAS,kBAAkB,WAAW;AACpC,SAAO,MAAM,QAAQ,SAAS,IAAI,kBAAkB,SAAS,IAAI,aAAa;AAChF;AAIA,SAAS,oBAAoB,gBAAgB,iBAAiB;AAC5D,MAAI,OAAO,cAAc,eAAe,WAAW;AACjD,QAAI,aAAa,eAAe,KAAK,gBAAgB;AACnD,cAAQ,KAAK,qCAAqC;AAAA,IACpD;AAAA,EACF;AACA,UAAQ,aAAa,eAAe,IAAI,gBAAgB,kBAAkB,mBAAmB;AAC/F;AAIA,SAAS,uBAAuB,gBAAgB;AAC9C,SAAO,MAAM,QAAQ,cAAc,IAAI,uBAAuB,cAAc,IAAI,kBAAkB;AACpG;AACA,SAAS,aAAa,iBAAiB;AACrC,SAAO,mBAAmB,QAAQ,CAAC,MAAM,QAAQ,eAAe,KAAK,OAAO,oBAAoB;AAClG;AACA,SAAS,qBAAqB,QAAQ,SAAS,KAAK;AAClD,QAAM,WAAW,OAAO;AACxB,QAAM,aAAa,UAAU,OAAO,KAAK,QAAQ,IAAI;AACrD,MAAI,CAAC,WAAW,QAAQ;AACtB,UAAM,IAAI,aAAc,KAAyC,OAAO,cAAc,eAAe,YAAY,gBAAgB,OAAO,IAAI,EAAE;AAAA,EAChJ;AACA,MAAI,CAAC,SAAS,GAAG,GAAG;AAClB,UAAM,IAAI,aAAc,MAA6C,OAAO,cAAc,eAAe,YAAY,oBAAoB,SAAS,GAAG,IAAI,EAAE;AAAA,EAC7J;AACF;AACA,SAAS,uBAAuB,SAAS,SAAS,OAAO;AACvD,UAAQ,cAAc,CAAC,GAAG,QAAQ;AAChC,QAAI,MAAM,GAAG,MAAM,QAAW;AAC5B,YAAM,IAAI,aAAc,MAAmD,OAAO,cAAc,eAAe,YAAY,yBAAyB,SAAS,GAAG,IAAI,EAAE;AAAA,IACxK;AAAA,EACF,CAAC;AACH;AAmBA,IAAM,kBAAN,MAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASpB,YAAY,YAAY,iBAAiB;AAEvC,SAAK,gBAAgB;AAMrB,SAAK,+BAA+B;AAEpC,SAAK,kBAAkB;AAEvB,SAAK,sBAAsB,MAAM;AAAA,IAAC;AAClC,SAAK,UAAU;AAQf,SAAK,WAAW;AAOhB,SAAK,UAAU;AAEf,SAAK,oBAAoB,CAAC;AAC1B,SAAK,kBAAkB,UAAU;AACjC,SAAK,uBAAuB,eAAe;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,YAAY;AACd,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,UAAU,aAAa;AACzB,SAAK,iBAAiB,KAAK,uBAAuB;AAAA,EACpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,iBAAiB;AACnB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,eAAe,kBAAkB;AACnC,SAAK,sBAAsB,KAAK,4BAA4B;AAAA,EAC9D;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,SAAS;AACX,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,IAAI,QAAQ;AACV,WAAO,KAAK,WAAW;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,IAAI,UAAU;AACZ,WAAO,KAAK,WAAW;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,IAAI,UAAU;AACZ,WAAO,KAAK,UAAU;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA,IAAI,WAAW;AACb,WAAO,KAAK,WAAW;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,IAAI,UAAU;AACZ,WAAO,KAAK,WAAW;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,IAAI,QAAQ;AACV,WAAO,CAAC,KAAK;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,IAAI,YAAY;AACd,WAAO,CAAC,KAAK;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,IAAI,WAAW;AACb,WAAO,KAAK,YAAY,KAAK,YAAY,KAAK,SAAS,KAAK,OAAO,WAAW;AAAA,EAChF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,cAAc,YAAY;AACxB,SAAK,kBAAkB,UAAU;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,mBAAmB,YAAY;AAC7B,SAAK,uBAAuB,UAAU;AAAA,EACxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,cAAc,YAAY;AACxB,SAAK,cAAc,cAAc,YAAY,KAAK,cAAc,CAAC;AAAA,EACnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA,mBAAmB,YAAY;AAC7B,SAAK,mBAAmB,cAAc,YAAY,KAAK,mBAAmB,CAAC;AAAA,EAC7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA8BA,iBAAiB,YAAY;AAC3B,SAAK,cAAc,iBAAiB,YAAY,KAAK,cAAc,CAAC;AAAA,EACtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA,sBAAsB,YAAY;AAChC,SAAK,mBAAmB,iBAAiB,YAAY,KAAK,mBAAmB,CAAC;AAAA,EAChF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAwBA,aAAa,WAAW;AACtB,WAAO,aAAa,KAAK,gBAAgB,SAAS;AAAA,EACpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,kBAAkB,WAAW;AAC3B,WAAO,aAAa,KAAK,qBAAqB,SAAS;AAAA,EACzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,kBAAkB;AAChB,SAAK,YAAY;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,uBAAuB;AACrB,SAAK,iBAAiB;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,cAAc,OAAO,CAAC,GAAG;AACvB,SAAK,UAAU;AACf,QAAI,KAAK,WAAW,CAAC,KAAK,UAAU;AAClC,WAAK,QAAQ,cAAc,IAAI;AAAA,IACjC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,mBAAmB;AACjB,SAAK,cAAc;AAAA,MACjB,UAAU;AAAA,IACZ,CAAC;AACD,SAAK,cAAc,aAAW,QAAQ,iBAAiB,CAAC;AAAA,EAC1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBA,gBAAgB,OAAO,CAAC,GAAG;AACzB,SAAK,UAAU;AACf,SAAK,kBAAkB;AACvB,SAAK,cAAc,aAAW;AAC5B,cAAQ,gBAAgB;AAAA,QACtB,UAAU;AAAA,MACZ,CAAC;AAAA,IACH,CAAC;AACD,QAAI,KAAK,WAAW,CAAC,KAAK,UAAU;AAClC,WAAK,QAAQ,eAAe,IAAI;AAAA,IAClC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,YAAY,OAAO,CAAC,GAAG;AACrB,SAAK,WAAW;AAChB,QAAI,KAAK,WAAW,CAAC,KAAK,UAAU;AAClC,WAAK,QAAQ,YAAY,IAAI;AAAA,IAC/B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBA,eAAe,OAAO,CAAC,GAAG;AACxB,SAAK,WAAW;AAChB,SAAK,gBAAgB;AACrB,SAAK,cAAc,aAAW;AAC5B,cAAQ,eAAe;AAAA,QACrB,UAAU;AAAA,MACZ,CAAC;AAAA,IACH,CAAC;AACD,QAAI,KAAK,WAAW,CAAC,KAAK,UAAU;AAClC,WAAK,QAAQ,gBAAgB,IAAI;AAAA,IACnC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBA,cAAc,OAAO,CAAC,GAAG;AACvB,SAAK,SAAS;AACd,QAAI,KAAK,cAAc,OAAO;AAC5B,WAAK,cAAc,KAAK,KAAK,MAAM;AAAA,IACrC;AACA,QAAI,KAAK,WAAW,CAAC,KAAK,UAAU;AAClC,WAAK,QAAQ,cAAc,IAAI;AAAA,IACjC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBA,QAAQ,OAAO,CAAC,GAAG;AAGjB,UAAM,oBAAoB,KAAK,mBAAmB,KAAK,QAAQ;AAC/D,SAAK,SAAS;AACd,SAAK,SAAS;AACd,SAAK,cAAc,aAAW;AAC5B,cAAQ,QAAQ,iCACX,OADW;AAAA,QAEd,UAAU;AAAA,MACZ,EAAC;AAAA,IACH,CAAC;AACD,SAAK,aAAa;AAClB,QAAI,KAAK,cAAc,OAAO;AAC5B,WAAK,aAAa,KAAK,KAAK,KAAK;AACjC,WAAK,cAAc,KAAK,KAAK,MAAM;AAAA,IACrC;AACA,SAAK,iBAAiB,iCACjB,OADiB;AAAA,MAEpB;AAAA,IACF,EAAC;AACD,SAAK,kBAAkB,QAAQ,cAAY,SAAS,IAAI,CAAC;AAAA,EAC3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBA,OAAO,OAAO,CAAC,GAAG;AAGhB,UAAM,oBAAoB,KAAK,mBAAmB,KAAK,QAAQ;AAC/D,SAAK,SAAS;AACd,SAAK,cAAc,aAAW;AAC5B,cAAQ,OAAO,iCACV,OADU;AAAA,QAEb,UAAU;AAAA,MACZ,EAAC;AAAA,IACH,CAAC;AACD,SAAK,uBAAuB;AAAA,MAC1B,UAAU;AAAA,MACV,WAAW,KAAK;AAAA,IAClB,CAAC;AACD,SAAK,iBAAiB,iCACjB,OADiB;AAAA,MAEpB;AAAA,IACF,EAAC;AACD,SAAK,kBAAkB,QAAQ,cAAY,SAAS,KAAK,CAAC;AAAA,EAC5D;AAAA,EACA,iBAAiB,MAAM;AACrB,QAAI,KAAK,WAAW,CAAC,KAAK,UAAU;AAClC,WAAK,QAAQ,uBAAuB,IAAI;AACxC,UAAI,CAAC,KAAK,mBAAmB;AAC3B,aAAK,QAAQ,gBAAgB;AAAA,MAC/B;AACA,WAAK,QAAQ,eAAe;AAAA,IAC9B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,UAAU,QAAQ;AAChB,SAAK,UAAU;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,cAAc;AACZ,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeA,uBAAuB,OAAO,CAAC,GAAG;AAChC,SAAK,kBAAkB;AACvB,SAAK,aAAa;AAClB,QAAI,KAAK,SAAS;AAChB,WAAK,4BAA4B;AACjC,WAAK,SAAS,KAAK,cAAc;AACjC,WAAK,SAAS,KAAK,iBAAiB;AACpC,UAAI,KAAK,WAAW,SAAS,KAAK,WAAW,SAAS;AACpD,aAAK,mBAAmB,KAAK,SAAS;AAAA,MACxC;AAAA,IACF;AACA,QAAI,KAAK,cAAc,OAAO;AAC5B,WAAK,aAAa,KAAK,KAAK,KAAK;AACjC,WAAK,cAAc,KAAK,KAAK,MAAM;AAAA,IACrC;AACA,QAAI,KAAK,WAAW,CAAC,KAAK,UAAU;AAClC,WAAK,QAAQ,uBAAuB,IAAI;AAAA,IAC1C;AAAA,EACF;AAAA;AAAA,EAEA,oBAAoB,OAAO;AAAA,IACzB,WAAW;AAAA,EACb,GAAG;AACD,SAAK,cAAc,UAAQ,KAAK,oBAAoB,IAAI,CAAC;AACzD,SAAK,uBAAuB;AAAA,MAC1B,UAAU;AAAA,MACV,WAAW,KAAK;AAAA,IAClB,CAAC;AAAA,EACH;AAAA,EACA,oBAAoB;AAClB,SAAK,SAAS,KAAK,qBAAqB,IAAI,WAAW;AAAA,EACzD;AAAA,EACA,gBAAgB;AACd,WAAO,KAAK,YAAY,KAAK,UAAU,IAAI,IAAI;AAAA,EACjD;AAAA,EACA,mBAAmB,WAAW;AAC5B,QAAI,KAAK,gBAAgB;AACvB,WAAK,SAAS;AACd,WAAK,+BAA+B;AACpC,YAAM,MAAM,aAAa,KAAK,eAAe,IAAI,CAAC;AAClD,WAAK,+BAA+B,IAAI,UAAU,YAAU;AAC1D,aAAK,+BAA+B;AAIpC,aAAK,UAAU,QAAQ;AAAA,UACrB;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA,8BAA8B;AAC5B,QAAI,KAAK,8BAA8B;AACrC,WAAK,6BAA6B,YAAY;AAC9C,WAAK,+BAA+B;AAAA,IACtC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA6BA,UAAU,QAAQ,OAAO,CAAC,GAAG;AAC3B,SAAK,SAAS;AACd,SAAK,sBAAsB,KAAK,cAAc,KAAK;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA+BA,IAAI,MAAM;AACR,QAAI,WAAW;AACf,QAAI,YAAY;AAAM,aAAO;AAC7B,QAAI,CAAC,MAAM,QAAQ,QAAQ;AAAG,iBAAW,SAAS,MAAM,GAAG;AAC3D,QAAI,SAAS,WAAW;AAAG,aAAO;AAClC,WAAO,SAAS,OAAO,CAAC,SAAS,SAAS,WAAW,QAAQ,MAAM,IAAI,GAAG,IAAI;AAAA,EAChF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA4BA,SAAS,WAAW,MAAM;AACxB,UAAM,UAAU,OAAO,KAAK,IAAI,IAAI,IAAI;AACxC,WAAO,WAAW,QAAQ,SAAS,QAAQ,OAAO,SAAS,IAAI;AAAA,EACjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA+BA,SAAS,WAAW,MAAM;AACxB,WAAO,CAAC,CAAC,KAAK,SAAS,WAAW,IAAI;AAAA,EACxC;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,OAAO;AACT,QAAI,IAAI;AACR,WAAO,EAAE,SAAS;AAChB,UAAI,EAAE;AAAA,IACR;AACA,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,sBAAsB,WAAW;AAC/B,SAAK,SAAS,KAAK,iBAAiB;AACpC,QAAI,WAAW;AACb,WAAK,cAAc,KAAK,KAAK,MAAM;AAAA,IACrC;AACA,QAAI,KAAK,SAAS;AAChB,WAAK,QAAQ,sBAAsB,SAAS;AAAA,IAC9C;AAAA,EACF;AAAA;AAAA,EAEA,mBAAmB;AACjB,SAAK,eAAe,IAAI,aAAa;AACrC,SAAK,gBAAgB,IAAI,aAAa;AAAA,EACxC;AAAA,EACA,mBAAmB;AACjB,QAAI,KAAK,qBAAqB;AAAG,aAAO;AACxC,QAAI,KAAK;AAAQ,aAAO;AACxB,QAAI,KAAK,gCAAgC,KAAK,uBAAuB,OAAO;AAAG,aAAO;AACtF,QAAI,KAAK,uBAAuB,OAAO;AAAG,aAAO;AACjD,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,uBAAuB,QAAQ;AAC7B,WAAO,KAAK,aAAa,aAAW,QAAQ,WAAW,MAAM;AAAA,EAC/D;AAAA;AAAA,EAEA,oBAAoB;AAClB,WAAO,KAAK,aAAa,aAAW,QAAQ,KAAK;AAAA,EACnD;AAAA;AAAA,EAEA,sBAAsB;AACpB,WAAO,KAAK,aAAa,aAAW,QAAQ,OAAO;AAAA,EACrD;AAAA;AAAA,EAEA,gBAAgB,OAAO,CAAC,GAAG;AACzB,SAAK,WAAW,CAAC,KAAK,kBAAkB;AACxC,QAAI,KAAK,WAAW,CAAC,KAAK,UAAU;AAClC,WAAK,QAAQ,gBAAgB,IAAI;AAAA,IACnC;AAAA,EACF;AAAA;AAAA,EAEA,eAAe,OAAO,CAAC,GAAG;AACxB,SAAK,UAAU,KAAK,oBAAoB;AACxC,QAAI,KAAK,WAAW,CAAC,KAAK,UAAU;AAClC,WAAK,QAAQ,eAAe,IAAI;AAAA,IAClC;AAAA,EACF;AAAA;AAAA,EAEA,4BAA4B,IAAI;AAC9B,SAAK,sBAAsB;AAAA,EAC7B;AAAA;AAAA,EAEA,mBAAmB,MAAM;AACvB,QAAI,aAAa,IAAI,KAAK,KAAK,YAAY,MAAM;AAC/C,WAAK,YAAY,KAAK;AAAA,IACxB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,mBAAmB,UAAU;AAC3B,UAAM,cAAc,KAAK,WAAW,KAAK,QAAQ;AACjD,WAAO,CAAC,YAAY,CAAC,CAAC,eAAe,CAAC,KAAK,QAAQ,kBAAkB;AAAA,EACvE;AAAA;AAAA,EAEA,MAAM,MAAM;AACV,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,kBAAkB,YAAY;AAC5B,SAAK,iBAAiB,MAAM,QAAQ,UAAU,IAAI,WAAW,MAAM,IAAI;AACvE,SAAK,uBAAuB,kBAAkB,KAAK,cAAc;AAAA,EACnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,uBAAuB,YAAY;AACjC,SAAK,sBAAsB,MAAM,QAAQ,UAAU,IAAI,WAAW,MAAM,IAAI;AAC5E,SAAK,4BAA4B,uBAAuB,KAAK,mBAAmB;AAAA,EAClF;AACF;AAmHA,IAAM,YAAN,cAAwB,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EActC,YAAY,UAAU,iBAAiB,gBAAgB;AACrD,UAAM,eAAe,eAAe,GAAG,oBAAoB,gBAAgB,eAAe,CAAC;AAC3F,KAAC,OAAO,cAAc,eAAe,cAAc,0BAA0B,QAAQ;AACrF,SAAK,WAAW;AAChB,SAAK,iBAAiB;AACtB,SAAK,mBAAmB,eAAe;AACvC,SAAK,eAAe;AACpB,SAAK,uBAAuB;AAAA,MAC1B,UAAU;AAAA;AAAA;AAAA;AAAA,MAIV,WAAW,CAAC,CAAC,KAAK;AAAA,IACpB,CAAC;AAAA,EACH;AAAA,EACA,gBAAgB,MAAM,SAAS;AAC7B,QAAI,KAAK,SAAS,IAAI;AAAG,aAAO,KAAK,SAAS,IAAI;AAClD,SAAK,SAAS,IAAI,IAAI;AACtB,YAAQ,UAAU,IAAI;AACtB,YAAQ,4BAA4B,KAAK,mBAAmB;AAC5D,WAAO;AAAA,EACT;AAAA,EACA,WAAW,MAAM,SAAS,UAAU,CAAC,GAAG;AACtC,SAAK,gBAAgB,MAAM,OAAO;AAClC,SAAK,uBAAuB;AAAA,MAC1B,WAAW,QAAQ;AAAA,IACrB,CAAC;AACD,SAAK,oBAAoB;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,cAAc,MAAM,UAAU,CAAC,GAAG;AAChC,QAAI,KAAK,SAAS,IAAI;AAAG,WAAK,SAAS,IAAI,EAAE,4BAA4B,MAAM;AAAA,MAAC,CAAC;AACjF,WAAO,KAAK,SAAS,IAAI;AACzB,SAAK,uBAAuB;AAAA,MAC1B,WAAW,QAAQ;AAAA,IACrB,CAAC;AACD,SAAK,oBAAoB;AAAA,EAC3B;AAAA,EACA,WAAW,MAAM,SAAS,UAAU,CAAC,GAAG;AACtC,QAAI,KAAK,SAAS,IAAI;AAAG,WAAK,SAAS,IAAI,EAAE,4BAA4B,MAAM;AAAA,MAAC,CAAC;AACjF,WAAO,KAAK,SAAS,IAAI;AACzB,QAAI;AAAS,WAAK,gBAAgB,MAAM,OAAO;AAC/C,SAAK,uBAAuB;AAAA,MAC1B,WAAW,QAAQ;AAAA,IACrB,CAAC;AACD,SAAK,oBAAoB;AAAA,EAC3B;AAAA,EACA,SAAS,aAAa;AACpB,WAAO,KAAK,SAAS,eAAe,WAAW,KAAK,KAAK,SAAS,WAAW,EAAE;AAAA,EACjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAoCA,SAAS,OAAO,UAAU,CAAC,GAAG;AAC5B,2BAAuB,MAAM,MAAM,KAAK;AACxC,WAAO,KAAK,KAAK,EAAE,QAAQ,UAAQ;AACjC,2BAAqB,MAAM,MAAM,IAAI;AACrC,WAAK,SAAS,IAAI,EAAE,SAAS,MAAM,IAAI,GAAG;AAAA,QACxC,UAAU;AAAA,QACV,WAAW,QAAQ;AAAA,MACrB,CAAC;AAAA,IACH,CAAC;AACD,SAAK,uBAAuB,OAAO;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgCA,WAAW,OAAO,UAAU,CAAC,GAAG;AAK9B,QAAI,SAAS;AAAwC;AACrD,WAAO,KAAK,KAAK,EAAE,QAAQ,UAAQ;AAGjC,YAAM,UAAU,KAAK,SAAS,IAAI;AAClC,UAAI,SAAS;AACX,gBAAQ;AAAA;AAAA,UAAqE,MAAM,IAAI;AAAA,UAAG;AAAA,YACxF,UAAU;AAAA,YACV,WAAW,QAAQ;AAAA,UACrB;AAAA,QAAC;AAAA,MACH;AAAA,IACF,CAAC;AACD,SAAK,uBAAuB,OAAO;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA0DA,MAAM,QAAQ,CAAC,GAAG,UAAU,CAAC,GAAG;AAC9B,SAAK,cAAc,CAAC,SAAS,SAAS;AACpC,cAAQ,MAAM,QAAQ,MAAM,IAAI,IAAI,MAAM;AAAA,QACxC,UAAU;AAAA,QACV,WAAW,QAAQ;AAAA,MACrB,CAAC;AAAA,IACH,CAAC;AACD,SAAK,gBAAgB,OAAO;AAC5B,SAAK,eAAe,OAAO;AAC3B,SAAK,uBAAuB,OAAO;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,cAAc;AACZ,WAAO,KAAK,gBAAgB,CAAC,GAAG,CAAC,KAAK,SAAS,SAAS;AACtD,UAAI,IAAI,IAAI,QAAQ,YAAY;AAChC,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAAA;AAAA,EAEA,uBAAuB;AACrB,QAAI,iBAAiB,KAAK,gBAAgB,OAAO,CAAC,SAAS,UAAU;AACnE,aAAO,MAAM,qBAAqB,IAAI,OAAO;AAAA,IAC/C,CAAC;AACD,QAAI;AAAgB,WAAK,uBAAuB;AAAA,QAC9C,UAAU;AAAA,MACZ,CAAC;AACD,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,cAAc,IAAI;AAChB,WAAO,KAAK,KAAK,QAAQ,EAAE,QAAQ,SAAO;AAIxC,YAAM,UAAU,KAAK,SAAS,GAAG;AACjC,iBAAW,GAAG,SAAS,GAAG;AAAA,IAC5B,CAAC;AAAA,EACH;AAAA;AAAA,EAEA,iBAAiB;AACf,SAAK,cAAc,aAAW;AAC5B,cAAQ,UAAU,IAAI;AACtB,cAAQ,4BAA4B,KAAK,mBAAmB;AAAA,IAC9D,CAAC;AAAA,EACH;AAAA;AAAA,EAEA,eAAe;AACb,SAAK,QAAQ,KAAK,aAAa;AAAA,EACjC;AAAA;AAAA,EAEA,aAAa,WAAW;AACtB,eAAW,CAAC,aAAa,OAAO,KAAK,OAAO,QAAQ,KAAK,QAAQ,GAAG;AAClE,UAAI,KAAK,SAAS,WAAW,KAAK,UAAU,OAAO,GAAG;AACpD,eAAO;AAAA,MACT;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,eAAe;AACb,QAAI,MAAM,CAAC;AACX,WAAO,KAAK,gBAAgB,KAAK,CAACC,MAAK,SAAS,SAAS;AACvD,UAAI,QAAQ,WAAW,KAAK,UAAU;AACpC,QAAAA,KAAI,IAAI,IAAI,QAAQ;AAAA,MACtB;AACA,aAAOA;AAAA,IACT,CAAC;AAAA,EACH;AAAA;AAAA,EAEA,gBAAgB,WAAW,IAAI;AAC7B,QAAI,MAAM;AACV,SAAK,cAAc,CAAC,SAAS,SAAS;AACpC,YAAM,GAAG,KAAK,SAAS,IAAI;AAAA,IAC7B,CAAC;AACD,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,uBAAuB;AACrB,eAAW,eAAe,OAAO,KAAK,KAAK,QAAQ,GAAG;AACpD,UAAI,KAAK,SAAS,WAAW,EAAE,SAAS;AACtC,eAAO;AAAA,MACT;AAAA,IACF;AACA,WAAO,OAAO,KAAK,KAAK,QAAQ,EAAE,SAAS,KAAK,KAAK;AAAA,EACvD;AAAA;AAAA,EAEA,MAAM,MAAM;AACV,WAAO,KAAK,SAAS,eAAe,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI;AAAA,EACpE;AACF;AAKA,SAAS,0BAA0B,UAAU;AAC3C,QAAM,cAAc,OAAO,KAAK,QAAQ,EAAE,OAAO,SAAO,IAAI,SAAS,GAAG,CAAC;AACzE,MAAI,YAAY,SAAS,GAAG;AAE1B,YAAQ,KAAK,qEAAqE,YAAY,KAAK,GAAG,CAAC,GAAG;AAAA,EAC5G;AACF;AA4BA,IAAM,aAAN,cAAyB,UAAU;AAAC;AAepC,IAAM,0BAAuC,oBAAI,eAAe,wBAAwB;AAAA,EACtF,YAAY;AAAA,EACZ,SAAS,MAAM;AACjB,CAAC;AAID,IAAM,0BAA0B;AAChC,SAAS,YAAY,MAAM,QAAQ;AACjC,SAAO,CAAC,GAAG,OAAO,MAAM,IAAI;AAC9B;AAQA,SAAS,aAAa,SAAS,KAAK,uBAAuB,yBAAyB;AAClF,MAAI,OAAO,cAAc,eAAe,WAAW;AACjD,QAAI,CAAC;AAAS,kBAAY,KAAK,0BAA0B;AACzD,QAAI,CAAC,IAAI;AAAe,sCAAgC,GAAG;AAAA,EAC7D;AACA,kBAAgB,SAAS,GAAG;AAC5B,MAAI,cAAc,WAAW,QAAQ,KAAK;AAI1C,MAAI,QAAQ,YAAY,yBAAyB,UAAU;AACzD,QAAI,cAAc,mBAAmB,QAAQ,QAAQ;AAAA,EACvD;AACA,0BAAwB,SAAS,GAAG;AACpC,2BAAyB,SAAS,GAAG;AACrC,oBAAkB,SAAS,GAAG;AAC9B,6BAA2B,SAAS,GAAG;AACzC;AAYA,SAAS,eAAe,SAAS,KAAK,kCAAkC,MAAM;AAC5E,QAAM,OAAO,MAAM;AACjB,QAAI,oCAAoC,OAAO,cAAc,eAAe,YAAY;AACtF,sBAAgB,GAAG;AAAA,IACrB;AAAA,EACF;AAMA,MAAI,IAAI,eAAe;AACrB,QAAI,cAAc,iBAAiB,IAAI;AACvC,QAAI,cAAc,kBAAkB,IAAI;AAAA,EAC1C;AACA,oBAAkB,SAAS,GAAG;AAC9B,MAAI,SAAS;AACX,QAAI,0BAA0B;AAC9B,YAAQ,4BAA4B,MAAM;AAAA,IAAC,CAAC;AAAA,EAC9C;AACF;AACA,SAAS,0BAA0B,YAAY,UAAU;AACvD,aAAW,QAAQ,eAAa;AAC9B,QAAI,UAAU;AAA2B,gBAAU,0BAA0B,QAAQ;AAAA,EACvF,CAAC;AACH;AAQA,SAAS,2BAA2B,SAAS,KAAK;AAChD,MAAI,IAAI,cAAc,kBAAkB;AACtC,UAAM,mBAAmB,gBAAc;AACrC,UAAI,cAAc,iBAAiB,UAAU;AAAA,IAC/C;AACA,YAAQ,yBAAyB,gBAAgB;AAGjD,QAAI,mBAAmB,MAAM;AAC3B,cAAQ,4BAA4B,gBAAgB;AAAA,IACtD,CAAC;AAAA,EACH;AACF;AAQA,SAAS,gBAAgB,SAAS,KAAK;AACrC,QAAM,aAAa,qBAAqB,OAAO;AAC/C,MAAI,IAAI,cAAc,MAAM;AAC1B,YAAQ,cAAc,gBAAgB,YAAY,IAAI,SAAS,CAAC;AAAA,EAClE,WAAW,OAAO,eAAe,YAAY;AAQ3C,YAAQ,cAAc,CAAC,UAAU,CAAC;AAAA,EACpC;AACA,QAAM,kBAAkB,0BAA0B,OAAO;AACzD,MAAI,IAAI,mBAAmB,MAAM;AAC/B,YAAQ,mBAAmB,gBAAgB,iBAAiB,IAAI,cAAc,CAAC;AAAA,EACjF,WAAW,OAAO,oBAAoB,YAAY;AAChD,YAAQ,mBAAmB,CAAC,eAAe,CAAC;AAAA,EAC9C;AAEA,QAAM,oBAAoB,MAAM,QAAQ,uBAAuB;AAC/D,4BAA0B,IAAI,gBAAgB,iBAAiB;AAC/D,4BAA0B,IAAI,qBAAqB,iBAAiB;AACtE;AAUA,SAAS,kBAAkB,SAAS,KAAK;AACvC,MAAI,mBAAmB;AACvB,MAAI,YAAY,MAAM;AACpB,QAAI,IAAI,cAAc,MAAM;AAC1B,YAAM,aAAa,qBAAqB,OAAO;AAC/C,UAAI,MAAM,QAAQ,UAAU,KAAK,WAAW,SAAS,GAAG;AAEtD,cAAM,oBAAoB,WAAW,OAAO,eAAa,cAAc,IAAI,SAAS;AACpF,YAAI,kBAAkB,WAAW,WAAW,QAAQ;AAClD,6BAAmB;AACnB,kBAAQ,cAAc,iBAAiB;AAAA,QACzC;AAAA,MACF;AAAA,IACF;AACA,QAAI,IAAI,mBAAmB,MAAM;AAC/B,YAAM,kBAAkB,0BAA0B,OAAO;AACzD,UAAI,MAAM,QAAQ,eAAe,KAAK,gBAAgB,SAAS,GAAG;AAEhE,cAAM,yBAAyB,gBAAgB,OAAO,oBAAkB,mBAAmB,IAAI,cAAc;AAC7G,YAAI,uBAAuB,WAAW,gBAAgB,QAAQ;AAC5D,6BAAmB;AACnB,kBAAQ,mBAAmB,sBAAsB;AAAA,QACnD;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,QAAM,OAAO,MAAM;AAAA,EAAC;AACpB,4BAA0B,IAAI,gBAAgB,IAAI;AAClD,4BAA0B,IAAI,qBAAqB,IAAI;AACvD,SAAO;AACT;AACA,SAAS,wBAAwB,SAAS,KAAK;AAC7C,MAAI,cAAc,iBAAiB,cAAY;AAC7C,YAAQ,gBAAgB;AACxB,YAAQ,iBAAiB;AACzB,YAAQ,gBAAgB;AACxB,QAAI,QAAQ,aAAa;AAAU,oBAAc,SAAS,GAAG;AAAA,EAC/D,CAAC;AACH;AACA,SAAS,kBAAkB,SAAS,KAAK;AACvC,MAAI,cAAc,kBAAkB,MAAM;AACxC,YAAQ,kBAAkB;AAC1B,QAAI,QAAQ,aAAa,UAAU,QAAQ;AAAgB,oBAAc,SAAS,GAAG;AACrF,QAAI,QAAQ,aAAa;AAAU,cAAQ,cAAc;AAAA,EAC3D,CAAC;AACH;AACA,SAAS,cAAc,SAAS,KAAK;AACnC,MAAI,QAAQ;AAAe,YAAQ,YAAY;AAC/C,UAAQ,SAAS,QAAQ,eAAe;AAAA,IACtC,uBAAuB;AAAA,EACzB,CAAC;AACD,MAAI,kBAAkB,QAAQ,aAAa;AAC3C,UAAQ,iBAAiB;AAC3B;AACA,SAAS,yBAAyB,SAAS,KAAK;AAC9C,QAAM,WAAW,CAAC,UAAU,mBAAmB;AAE7C,QAAI,cAAc,WAAW,QAAQ;AAErC,QAAI;AAAgB,UAAI,kBAAkB,QAAQ;AAAA,EACpD;AACA,UAAQ,iBAAiB,QAAQ;AAGjC,MAAI,mBAAmB,MAAM;AAC3B,YAAQ,oBAAoB,QAAQ;AAAA,EACtC,CAAC;AACH;AAQA,SAAS,mBAAmB,SAAS,KAAK;AACxC,MAAI,WAAW,SAAS,OAAO,cAAc,eAAe;AAAY,gBAAY,KAAK,0BAA0B;AACnH,kBAAgB,SAAS,GAAG;AAC9B;AAQA,SAAS,qBAAqB,SAAS,KAAK;AAC1C,SAAO,kBAAkB,SAAS,GAAG;AACvC;AACA,SAAS,gBAAgB,KAAK;AAC5B,SAAO,YAAY,KAAK,wEAAwE;AAClG;AACA,SAAS,YAAY,KAAK,SAAS;AACjC,QAAM,aAAa,yBAAyB,GAAG;AAC/C,QAAM,IAAI,MAAM,GAAG,OAAO,IAAI,UAAU,EAAE;AAC5C;AACA,SAAS,yBAAyB,KAAK;AACrC,QAAM,OAAO,IAAI;AACjB,MAAI,QAAQ,KAAK,SAAS;AAAG,WAAO,UAAU,KAAK,KAAK,MAAM,CAAC;AAC/D,MAAI,OAAO,CAAC;AAAG,WAAO,UAAU,IAAI;AACpC,SAAO;AACT;AACA,SAAS,gCAAgC,KAAK;AAC5C,QAAM,MAAM,yBAAyB,GAAG;AACxC,QAAM,IAAI,aAAc,OAAwD,sCAAsC,GAAG,GAAG;AAC9H;AACA,SAAS,gCAAgC,KAAK;AAC5C,QAAM,MAAM,yBAAyB,GAAG;AACxC,QAAM,IAAI,aAAc,MAA4D,qEAAqE,GAAG,2FAAgG;AAC9P;AACA,SAAS,kBAAkB,SAAS,WAAW;AAC7C,MAAI,CAAC,QAAQ,eAAe,OAAO;AAAG,WAAO;AAC7C,QAAM,SAAS,QAAQ,OAAO;AAC9B,MAAI,OAAO,cAAc;AAAG,WAAO;AACnC,SAAO,CAAC,OAAO,GAAG,WAAW,OAAO,YAAY;AAClD;AACA,SAAS,kBAAkB,eAAe;AAGxC,SAAO,OAAO,eAAe,cAAc,WAAW,MAAM;AAC9D;AACA,SAAS,oBAAoB,MAAM,YAAY;AAC7C,OAAK,qBAAqB;AAC1B,aAAW,QAAQ,SAAO;AACxB,UAAM,UAAU,IAAI;AACpB,QAAI,QAAQ,aAAa,YAAY,QAAQ,gBAAgB;AAC3D,UAAI,kBAAkB,QAAQ,aAAa;AAC3C,cAAQ,iBAAiB;AAAA,IAC3B;AAAA,EACF,CAAC;AACH;AAEA,SAAS,oBAAoB,KAAK,gBAAgB;AAChD,MAAI,CAAC;AAAgB,WAAO;AAC5B,MAAI,CAAC,MAAM,QAAQ,cAAc,MAAM,OAAO,cAAc,eAAe;AAAY,oCAAgC,GAAG;AAC1H,MAAI,kBAAkB;AACtB,MAAI,kBAAkB;AACtB,MAAI,iBAAiB;AACrB,iBAAe,QAAQ,OAAK;AAC1B,QAAI,EAAE,gBAAgB,sBAAsB;AAC1C,wBAAkB;AAAA,IACpB,WAAW,kBAAkB,CAAC,GAAG;AAC/B,UAAI,oBAAoB,OAAO,cAAc,eAAe;AAAY,oBAAY,KAAK,iEAAiE;AAC1J,wBAAkB;AAAA,IACpB,OAAO;AACL,UAAI,mBAAmB,OAAO,cAAc,eAAe;AAAY,oBAAY,KAAK,+DAA+D;AACvJ,uBAAiB;AAAA,IACnB;AAAA,EACF,CAAC;AACD,MAAI;AAAgB,WAAO;AAC3B,MAAI;AAAiB,WAAO;AAC5B,MAAI;AAAiB,WAAO;AAC5B,MAAI,OAAO,cAAc,eAAe,WAAW;AACjD,gBAAY,KAAK,+CAA+C;AAAA,EAClE;AACA,SAAO;AACT;AACA,SAAS,iBAAiB,MAAM,IAAI;AAClC,QAAM,QAAQ,KAAK,QAAQ,EAAE;AAC7B,MAAI,QAAQ;AAAI,SAAK,OAAO,OAAO,CAAC;AACtC;AAEA,SAAS,gBAAgB,MAAM,MAAM,UAAU,eAAe;AAC5D,MAAI,kBAAkB;AAAS;AAC/B,OAAK,kBAAkB,QAAQ,kBAAkB,WAAW,CAAC,KAAK,2BAA2B,kBAAkB,YAAY,CAAC,SAAS,qBAAqB;AACxJ,YAAQ,KAAK,eAAe,IAAI,CAAC;AACjC,SAAK,0BAA0B;AAC/B,aAAS,sBAAsB;AAAA,EACjC;AACF;AACA,IAAM,0BAA0B;AAAA,EAC9B,SAAS;AAAA,EACT,aAA0B,2BAAW,MAAM,MAAM;AACnD;AACA,IAAM,oBAAkC,uBAAM,QAAQ,QAAQ,GAAG;AAiEjE,IAAI,SAAuB,uBAAM;AAC/B,QAAM,UAAN,MAAM,gBAAe,iBAAiB;AAAA,IACpC,YAAY,YAAY,iBAAiB,sBAAsB;AAC7D,YAAM;AACN,WAAK,uBAAuB;AAK5B,WAAK,YAAY;AACjB,WAAK,cAAc,oBAAI,IAAI;AAK3B,WAAK,WAAW,IAAI,aAAa;AACjC,WAAK,OAAO,IAAI,UAAU,CAAC,GAAG,kBAAkB,UAAU,GAAG,uBAAuB,eAAe,CAAC;AAAA,IACtG;AAAA;AAAA,IAEA,kBAAkB;AAChB,WAAK,mBAAmB;AAAA,IAC1B;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,IAAI,gBAAgB;AAClB,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,IAAI,UAAU;AACZ,aAAO,KAAK;AAAA,IACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,IAAI,OAAO;AACT,aAAO,CAAC;AAAA,IACV;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,IAAI,WAAW;AACb,aAAO,KAAK,KAAK;AAAA,IACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,WAAW,KAAK;AACd,wBAAkB,KAAK,MAAM;AAC3B,cAAM,YAAY,KAAK,eAAe,IAAI,IAAI;AAC9C,YAAI,UAAU,UAAU,gBAAgB,IAAI,MAAM,IAAI,OAAO;AAC7D,qBAAa,IAAI,SAAS,KAAK,KAAK,oBAAoB;AACxD,YAAI,QAAQ,uBAAuB;AAAA,UACjC,WAAW;AAAA,QACb,CAAC;AACD,aAAK,YAAY,IAAI,GAAG;AAAA,MAC1B,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,WAAW,KAAK;AACd,aAAO,KAAK,KAAK,IAAI,IAAI,IAAI;AAAA,IAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,cAAc,KAAK;AACjB,wBAAkB,KAAK,MAAM;AAC3B,cAAM,YAAY,KAAK,eAAe,IAAI,IAAI;AAC9C,YAAI,WAAW;AACb,oBAAU,cAAc,IAAI,IAAI;AAAA,QAClC;AACA,aAAK,YAAY,OAAO,GAAG;AAAA,MAC7B,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,aAAa,KAAK;AAChB,wBAAkB,KAAK,MAAM;AAC3B,cAAM,YAAY,KAAK,eAAe,IAAI,IAAI;AAC9C,cAAM,QAAQ,IAAI,UAAU,CAAC,CAAC;AAC9B,2BAAmB,OAAO,GAAG;AAC7B,kBAAU,gBAAgB,IAAI,MAAM,KAAK;AACzC,cAAM,uBAAuB;AAAA,UAC3B,WAAW;AAAA,QACb,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,gBAAgB,KAAK;AACnB,wBAAkB,KAAK,MAAM;AAC3B,cAAM,YAAY,KAAK,eAAe,IAAI,IAAI;AAC9C,YAAI,WAAW;AACb,oBAAU,cAAc,IAAI,IAAI;AAAA,QAClC;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,aAAa,KAAK;AAChB,aAAO,KAAK,KAAK,IAAI,IAAI,IAAI;AAAA,IAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,YAAY,KAAK,OAAO;AACtB,wBAAkB,KAAK,MAAM;AAC3B,cAAM,OAAO,KAAK,KAAK,IAAI,IAAI,IAAI;AACnC,aAAK,SAAS,KAAK;AAAA,MACrB,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,SAAS,OAAO;AACd,WAAK,QAAQ,SAAS,KAAK;AAAA,IAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,SAAS,QAAQ;AACf,WAAK,YAAY;AACjB,0BAAoB,KAAK,MAAM,KAAK,WAAW;AAC/C,WAAK,SAAS,KAAK,MAAM;AAGzB,aAAO,QAAQ,QAAQ,WAAW;AAAA,IACpC;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,UAAU;AACR,WAAK,UAAU;AAAA,IACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,UAAU,QAAQ,QAAW;AAC3B,WAAK,KAAK,MAAM,KAAK;AACrB,WAAK,YAAY;AAAA,IACnB;AAAA,IACA,qBAAqB;AACnB,UAAI,KAAK,WAAW,KAAK,QAAQ,YAAY,MAAM;AACjD,aAAK,KAAK,YAAY,KAAK,QAAQ;AAAA,MACrC;AAAA,IACF;AAAA,IACA,eAAe,MAAM;AACnB,WAAK,IAAI;AACT,aAAO,KAAK,SAAS,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK;AAAA,IAClD;AAAA,EA6BF;AA3BI,UAAK,YAAO,SAAS,eAAe,GAAG;AACrC,WAAO,KAAK,KAAK,SAAW,4BAAkB,eAAe,EAAE,GAAM,4BAAkB,qBAAqB,EAAE,GAAM,4BAAkB,yBAAyB,CAAC,CAAC;AAAA,EACnK;AAGA,UAAK,YAAsB,gBAAG,4BAAkB;AAAA,IAC9C,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,QAAQ,GAAG,YAAY,IAAI,GAAG,aAAa,EAAE,GAAG,CAAC,SAAS,GAAG,CAAC,IAAI,UAAU,EAAE,CAAC;AAAA,IAC5F,cAAc,SAAS,oBAAoB,IAAI,KAAK;AAClD,UAAI,KAAK,GAAG;AACV,QAAG,qBAAW,UAAU,SAAS,iCAAiC,QAAQ;AACxE,iBAAO,IAAI,SAAS,MAAM;AAAA,QAC5B,CAAC,EAAE,SAAS,SAAS,kCAAkC;AACrD,iBAAO,IAAI,QAAQ;AAAA,QACrB,CAAC;AAAA,MACH;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,SAAS,CAAC,iBAAiB,SAAS;AAAA,IACtC;AAAA,IACA,SAAS;AAAA,MACP,UAAU;AAAA,IACZ;AAAA,IACA,UAAU,CAAC,QAAQ;AAAA,IACnB,UAAU,CAAI,6BAAmB,CAAC,uBAAuB,CAAC,GAAM,oCAA0B;AAAA,EAC5F,CAAC;AA5NL,MAAMC,UAAN;AA+NA,SAAOA;AACT,GAAG;AAIH,SAAS,eAAe,MAAM,IAAI;AAChC,QAAM,QAAQ,KAAK,QAAQ,EAAE;AAC7B,MAAI,QAAQ;AAAI,SAAK,OAAO,OAAO,CAAC;AACtC;AACA,SAAS,mBAAmB,WAAW;AACrC,SAAO,OAAO,cAAc,YAAY,cAAc,QAAQ,OAAO,KAAK,SAAS,EAAE,WAAW,KAAK,WAAW,aAAa,cAAc;AAC7I;AACA,IAAM,cAAc,MAAMC,qBAAoB,gBAAgB;AAAA,EAC5D,YAEA,YAAY,MAAM,iBAAiB,gBAAgB;AACjD,UAAM,eAAe,eAAe,GAAG,oBAAoB,gBAAgB,eAAe,CAAC;AAE3F,SAAK,eAAe;AAEpB,SAAK,YAAY,CAAC;AAElB,SAAK,iBAAiB;AACtB,SAAK,gBAAgB,SAAS;AAC9B,SAAK,mBAAmB,eAAe;AACvC,SAAK,iBAAiB;AACtB,SAAK,uBAAuB;AAAA,MAC1B,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,MAKV,WAAW,CAAC,CAAC,KAAK;AAAA,IACpB,CAAC;AACD,QAAI,aAAa,eAAe,MAAM,gBAAgB,eAAe,gBAAgB,wBAAwB;AAC3G,UAAI,mBAAmB,SAAS,GAAG;AACjC,aAAK,eAAe,UAAU;AAAA,MAChC,OAAO;AACL,aAAK,eAAe;AAAA,MACtB;AAAA,IACF;AAAA,EACF;AAAA,EACA,SAAS,OAAO,UAAU,CAAC,GAAG;AAC5B,SAAK,QAAQ,KAAK,gBAAgB;AAClC,QAAI,KAAK,UAAU,UAAU,QAAQ,0BAA0B,OAAO;AACpE,WAAK,UAAU,QAAQ,cAAY,SAAS,KAAK,OAAO,QAAQ,0BAA0B,KAAK,CAAC;AAAA,IAClG;AACA,SAAK,uBAAuB,OAAO;AAAA,EACrC;AAAA,EACA,WAAW,OAAO,UAAU,CAAC,GAAG;AAC9B,SAAK,SAAS,OAAO,OAAO;AAAA,EAC9B;AAAA,EACA,MAAM,YAAY,KAAK,cAAc,UAAU,CAAC,GAAG;AACjD,SAAK,gBAAgB,SAAS;AAC9B,SAAK,eAAe,OAAO;AAC3B,SAAK,gBAAgB,OAAO;AAC5B,SAAK,SAAS,KAAK,OAAO,OAAO;AACjC,SAAK,iBAAiB;AAAA,EACxB;AAAA;AAAA,EAEA,eAAe;AAAA,EAAC;AAAA;AAAA,EAEhB,aAAa,WAAW;AACtB,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,uBAAuB;AACrB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,iBAAiB,IAAI;AACnB,SAAK,UAAU,KAAK,EAAE;AAAA,EACxB;AAAA;AAAA,EAEA,oBAAoB,IAAI;AACtB,mBAAe,KAAK,WAAW,EAAE;AAAA,EACnC;AAAA,EACA,yBAAyB,IAAI;AAC3B,SAAK,kBAAkB,KAAK,EAAE;AAAA,EAChC;AAAA;AAAA,EAEA,4BAA4B,IAAI;AAC9B,mBAAe,KAAK,mBAAmB,EAAE;AAAA,EAC3C;AAAA;AAAA,EAEA,cAAc,IAAI;AAAA,EAAC;AAAA;AAAA,EAEnB,uBAAuB;AACrB,QAAI,KAAK,aAAa,UAAU;AAC9B,UAAI,KAAK;AAAe,aAAK,YAAY;AACzC,UAAI,KAAK;AAAiB,aAAK,cAAc;AAC7C,UAAI,KAAK,gBAAgB;AACvB,aAAK,SAAS,KAAK,eAAe;AAAA,UAChC,UAAU;AAAA,UACV,uBAAuB;AAAA,QACzB,CAAC;AACD,eAAO;AAAA,MACT;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,gBAAgB,WAAW;AACzB,QAAI,mBAAmB,SAAS,GAAG;AACjC,WAAK,QAAQ,KAAK,gBAAgB,UAAU;AAC5C,gBAAU,WAAW,KAAK,QAAQ;AAAA,QAChC,UAAU;AAAA,QACV,WAAW;AAAA,MACb,CAAC,IAAI,KAAK,OAAO;AAAA,QACf,UAAU;AAAA,QACV,WAAW;AAAA,MACb,CAAC;AAAA,IACH,OAAO;AACL,WAAK,QAAQ,KAAK,gBAAgB;AAAA,IACpC;AAAA,EACF;AACF;AAQA,IAAM,gBAAgB,aAAW,mBAAmB;AAQpD,IAAI,6BAA2C,uBAAM;AACnD,QAAM,8BAAN,MAAM,oCAAmC,iBAAiB;AAAA;AAAA,IAExD,WAAW;AACT,WAAK,iBAAiB;AAEtB,WAAK,cAAc,aAAa,IAAI;AAAA,IACtC;AAAA;AAAA,IAEA,cAAc;AACZ,UAAI,KAAK,eAAe;AAEtB,aAAK,cAAc,gBAAgB,IAAI;AAAA,MACzC;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,IAAI,UAAU;AACZ,aAAO,KAAK,cAAc,aAAa,IAAI;AAAA,IAC7C;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,IAAI,OAAO;AACT,aAAO,YAAY,KAAK,QAAQ,OAAO,KAAK,OAAO,KAAK,KAAK,SAAS,GAAG,KAAK,OAAO;AAAA,IACvF;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,IAAI,gBAAgB;AAClB,aAAO,KAAK,UAAU,KAAK,QAAQ,gBAAgB;AAAA,IACrD;AAAA;AAAA,IAEA,mBAAmB;AAAA,IAAC;AAAA,EAetB;AAbI,8BAAK,YAAuB,uBAAM;AAChC,QAAI;AACJ,WAAO,SAAS,mCAAmC,GAAG;AACpD,cAAQ,iDAA4C,+CAA6C,gCAAsB,2BAA0B,IAAI,KAAK,2BAA0B;AAAA,IACtL;AAAA,EACF,GAAG;AAGH,8BAAK,YAAsB,gBAAG,4BAAkB;AAAA,IAC9C,MAAM;AAAA,IACN,UAAU,CAAI,oCAA0B;AAAA,EAC1C,CAAC;AAjDL,MAAMC,8BAAN;AAoDA,SAAOA;AACT,GAAG;AAoaH,IAAI,qBAA8B,uBAAM;AACtC,QAAM,sBAAN,MAAM,oBAAc;AAAA,EAapB;AAXI,sBAAK,YAAO,SAAS,2BAAsB,GAAG;AAC5C,WAAO,KAAK,KAAK,qBAAe;AAAA,EAClC;AAGA,sBAAK,YAAsB,gBAAG,4BAAkB;AAAA,IAC9C,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,QAAQ,GAAG,YAAY,IAAI,GAAG,oBAAoB,EAAE,CAAC;AAAA,IAClE,WAAW,CAAC,cAAc,EAAE;AAAA,EAC9B,CAAC;AAXL,MAAMC,sBAAN;AAcA,SAAOA;AACT,GAAG;AAoGH,IAAI,6BAA2C,uBAAM;AACnD,QAAM,8BAAN,MAAM,4BAA2B;AAAA,EAcjC;AAZI,8BAAK,YAAO,SAAS,mCAAmC,GAAG;AACzD,WAAO,KAAK,KAAK,6BAA4B;AAAA,EAC/C;AAGA,8BAAK,YAAsB,gBAAG,2BAAiB;AAAA,IAC7C,MAAM;AAAA,EACR,CAAC;AAGD,8BAAK,YAAsB,gBAAG,2BAAiB,CAAC,CAAC;AAZrD,MAAMC,8BAAN;AAeA,SAAOA;AACT,GAAG;AA+RH,IAAM,qCAAkD,oBAAI,eAAe,+BAA+B;AAmJ1G,IAAM,wBAAwB;AAAA,EAC5B,SAAS;AAAA,EACT,aAA0B,2BAAW,MAAM,kBAAkB;AAC/D;AAyBA,IAAI,qBAAmC,uBAAM;AAC3C,QAAM,sBAAN,MAAM,4BAA2B,iBAAiB;AAAA,IAChD,YAAY,YAAY,iBAAiB,sBAAsB;AAC7D,YAAM;AACN,WAAK,uBAAuB;AAK5B,WAAK,YAAY;AAKjB,WAAK,sBAAsB,MAAM,KAAK,gBAAgB;AAKtD,WAAK,aAAa,CAAC;AAKnB,WAAK,OAAO;AAKZ,WAAK,WAAW,IAAI,aAAa;AACjC,WAAK,eAAe,UAAU;AAC9B,WAAK,oBAAoB,eAAe;AAAA,IAC1C;AAAA;AAAA,IAEA,YAAY,SAAS;AACnB,WAAK,kBAAkB;AACvB,UAAI,QAAQ,eAAe,MAAM,GAAG;AAClC,aAAK,kBAAkB;AACvB,aAAK,gBAAgB;AACrB,aAAK,qBAAqB;AAC1B,aAAK,WAAW,KAAK;AAAA,MACvB;AAAA,IACF;AAAA;AAAA,IAEA,cAAc;AACZ,UAAI,KAAK,MAAM;AACb,0BAAkB,KAAK,MAAM,IAAI;AAOjC,YAAI,KAAK,KAAK,wBAAwB,KAAK,qBAAqB;AAC9D,eAAK,KAAK,4BAA4B,MAAM;AAAA,UAAC,CAAC;AAAA,QAChD;AAAA,MACF;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,IAAI,gBAAgB;AAClB,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,IAAI,UAAU;AACZ,aAAO,KAAK;AAAA,IACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,IAAI,OAAO;AACT,aAAO,CAAC;AAAA,IACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,WAAW,KAAK;AACd,YAAM,OAAO,KAAK,KAAK,IAAI,IAAI,IAAI;AACnC,mBAAa,MAAM,KAAK,KAAK,oBAAoB;AACjD,WAAK,uBAAuB;AAAA,QAC1B,WAAW;AAAA,MACb,CAAC;AACD,WAAK,WAAW,KAAK,GAAG;AACxB,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,WAAW,KAAK;AACd,aAAO,KAAK,KAAK,IAAI,IAAI,IAAI;AAAA,IAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,cAAc,KAAK;AACjB;AAAA,QAAe,IAAI,WAAW;AAAA,QAAM;AAAA;AAAA,QAA0C;AAAA,MAAK;AACnF,uBAAiB,KAAK,YAAY,GAAG;AAAA,IACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,aAAa,KAAK;AAChB,WAAK,oBAAoB,GAAG;AAAA,IAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,gBAAgB,KAAK;AACnB,WAAK,sBAAsB,GAAG;AAAA,IAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,aAAa,KAAK;AAChB,aAAO,KAAK,KAAK,IAAI,IAAI,IAAI;AAAA,IAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,aAAa,KAAK;AAChB,WAAK,oBAAoB,GAAG;AAAA,IAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,gBAAgB,KAAK;AACnB,WAAK,sBAAsB,GAAG;AAAA,IAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,aAAa,KAAK;AAChB,aAAO,KAAK,KAAK,IAAI,IAAI,IAAI;AAAA,IAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,YAAY,KAAK,OAAO;AACtB,YAAM,OAAO,KAAK,KAAK,IAAI,IAAI,IAAI;AACnC,WAAK,SAAS,KAAK;AAAA,IACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,SAAS,QAAQ;AACf,WAAK,YAAY;AACjB,0BAAoB,KAAK,MAAM,KAAK,UAAU;AAC9C,WAAK,SAAS,KAAK,MAAM;AAIzB,aAAO,QAAQ,QAAQ,WAAW;AAAA,IACpC;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,UAAU;AACR,WAAK,UAAU;AAAA,IACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,UAAU,QAAQ,QAAW;AAC3B,WAAK,KAAK,MAAM,KAAK;AACrB,WAAK,YAAY;AAAA,IACnB;AAAA;AAAA,IAEA,kBAAkB;AAChB,WAAK,WAAW,QAAQ,SAAO;AAC7B,cAAM,UAAU,IAAI;AACpB,cAAM,UAAU,KAAK,KAAK,IAAI,IAAI,IAAI;AACtC,YAAI,YAAY,SAAS;AAGvB,yBAAe,WAAW,MAAM,GAAG;AAMnC,cAAI,cAAc,OAAO,GAAG;AAC1B,yBAAa,SAAS,KAAK,KAAK,oBAAoB;AACpD,gBAAI,UAAU;AAAA,UAChB;AAAA,QACF;AAAA,MACF,CAAC;AACD,WAAK,KAAK,oBAAoB;AAAA,QAC5B,WAAW;AAAA,MACb,CAAC;AAAA,IACH;AAAA,IACA,oBAAoB,KAAK;AACvB,YAAM,OAAO,KAAK,KAAK,IAAI,IAAI,IAAI;AACnC,yBAAmB,MAAM,GAAG;AAI5B,WAAK,uBAAuB;AAAA,QAC1B,WAAW;AAAA,MACb,CAAC;AAAA,IACH;AAAA,IACA,sBAAsB,KAAK;AACzB,UAAI,KAAK,MAAM;AACb,cAAM,OAAO,KAAK,KAAK,IAAI,IAAI,IAAI;AACnC,YAAI,MAAM;AACR,gBAAM,mBAAmB,qBAAqB,MAAM,GAAG;AACvD,cAAI,kBAAkB;AAGpB,iBAAK,uBAAuB;AAAA,cAC1B,WAAW;AAAA,YACb,CAAC;AAAA,UACH;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA,uBAAuB;AACrB,WAAK,KAAK,4BAA4B,KAAK,mBAAmB;AAC9D,UAAI,KAAK,UAAU;AACjB,aAAK,SAAS,4BAA4B,MAAM;AAAA,QAAC,CAAC;AAAA,MACpD;AAAA,IACF;AAAA,IACA,oBAAoB;AAClB,sBAAgB,KAAK,MAAM,IAAI;AAC/B,UAAI,KAAK,UAAU;AACjB,0BAAkB,KAAK,UAAU,IAAI;AAAA,MACvC;AAAA,IACF;AAAA,IACA,oBAAoB;AAClB,UAAI,CAAC,KAAK,SAAS,OAAO,cAAc,eAAe,YAAY;AACjE,cAAM,qBAAqB;AAAA,MAC7B;AAAA,IACF;AAAA,EA6BF;AA3BI,sBAAK,YAAO,SAAS,2BAA2B,GAAG;AACjD,WAAO,KAAK,KAAK,qBAAuB,4BAAkB,eAAe,EAAE,GAAM,4BAAkB,qBAAqB,EAAE,GAAM,4BAAkB,yBAAyB,CAAC,CAAC;AAAA,EAC/K;AAGA,sBAAK,YAAsB,gBAAG,4BAAkB;AAAA,IAC9C,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,IAAI,aAAa,EAAE,CAAC;AAAA,IACjC,cAAc,SAAS,gCAAgC,IAAI,KAAK;AAC9D,UAAI,KAAK,GAAG;AACV,QAAG,qBAAW,UAAU,SAAS,6CAA6C,QAAQ;AACpF,iBAAO,IAAI,SAAS,MAAM;AAAA,QAC5B,CAAC,EAAE,SAAS,SAAS,8CAA8C;AACjE,iBAAO,IAAI,QAAQ;AAAA,QACrB,CAAC;AAAA,MACH;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,MAAM,CAAC,aAAa,MAAM;AAAA,IAC5B;AAAA,IACA,SAAS;AAAA,MACP,UAAU;AAAA,IACZ;AAAA,IACA,UAAU,CAAC,QAAQ;AAAA,IACnB,UAAU,CAAI,6BAAmB,CAAC,qBAAqB,CAAC,GAAM,sCAA+B,8BAAoB;AAAA,EACnH,CAAC;AA7SL,MAAMC,sBAAN;AAgTA,SAAOA;AACT,GAAG;AAIH,IAAM,wBAAwB;AAAA,EAC5B,SAAS;AAAA,EACT,aAA0B,2BAAW,MAAM,aAAa;AAC1D;AAgDA,IAAI,gBAA8B,uBAAM;AACtC,QAAM,iBAAN,MAAM,uBAAsB,2BAA2B;AAAA,IACrD,YAAY,QAAQ,YAAY,iBAAiB;AAC/C,YAAM;AAUN,WAAK,OAAO;AACZ,WAAK,UAAU;AACf,WAAK,eAAe,UAAU;AAC9B,WAAK,oBAAoB,eAAe;AAAA,IAC1C;AAAA;AAAA,IAEA,mBAAmB;AACjB,UAAI,kBAAkB,KAAK,OAAO,MAAM,OAAO,cAAc,eAAe,YAAY;AACtF,cAAM,qBAAqB;AAAA,MAC7B;AAAA,IACF;AAAA,EAgBF;AAdI,iBAAK,YAAO,SAAS,sBAAsB,GAAG;AAC5C,WAAO,KAAK,KAAK,gBAAkB,4BAAkB,kBAAkB,EAAE,GAAM,4BAAkB,eAAe,EAAE,GAAM,4BAAkB,qBAAqB,EAAE,CAAC;AAAA,EACpK;AAGA,iBAAK,YAAsB,gBAAG,4BAAkB;AAAA,IAC9C,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,IAAI,iBAAiB,EAAE,CAAC;AAAA,IACrC,QAAQ;AAAA,MACN,MAAM,CAAC,iBAAiB,MAAM;AAAA,IAChC;AAAA,IACA,UAAU,CAAI,6BAAmB,CAAC,qBAAqB,CAAC,GAAM,oCAA0B;AAAA,EAC1F,CAAC;AApCL,MAAMC,iBAAN;AAuCA,SAAOA;AACT,GAAG;AAIH,IAAM,wBAAwB;AAAA,EAC5B,SAAS;AAAA,EACT,aAA0B,2BAAW,MAAM,aAAa;AAC1D;AAyBA,IAAI,gBAA8B,uBAAM;AACtC,QAAM,iBAAN,MAAM,uBAAsB,iBAAiB;AAAA,IAC3C,YAAY,QAAQ,YAAY,iBAAiB;AAC/C,YAAM;AAUN,WAAK,OAAO;AACZ,WAAK,UAAU;AACf,WAAK,eAAe,UAAU;AAC9B,WAAK,oBAAoB,eAAe;AAAA,IAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,WAAW;AACT,WAAK,iBAAiB;AACtB,WAAK,cAAc,aAAa,IAAI;AAAA,IACtC;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,cAAc;AACZ,UAAI,KAAK,eAAe;AACtB,aAAK,cAAc,gBAAgB,IAAI;AAAA,MACzC;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,IAAI,UAAU;AACZ,aAAO,KAAK,cAAc,aAAa,IAAI;AAAA,IAC7C;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,IAAI,gBAAgB;AAClB,aAAO,KAAK,UAAU,KAAK,QAAQ,gBAAgB;AAAA,IACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,IAAI,OAAO;AACT,aAAO,YAAY,KAAK,QAAQ,OAAO,KAAK,OAAO,KAAK,KAAK,SAAS,GAAG,KAAK,OAAO;AAAA,IACvF;AAAA,IACA,mBAAmB;AACjB,UAAI,kBAAkB,KAAK,OAAO,MAAM,OAAO,cAAc,eAAe,YAAY;AACtF,cAAM,qBAAqB;AAAA,MAC7B;AAAA,IACF;AAAA,EAgBF;AAdI,iBAAK,YAAO,SAAS,sBAAsB,GAAG;AAC5C,WAAO,KAAK,KAAK,gBAAkB,4BAAkB,kBAAkB,EAAE,GAAM,4BAAkB,eAAe,EAAE,GAAM,4BAAkB,qBAAqB,EAAE,CAAC;AAAA,EACpK;AAGA,iBAAK,YAAsB,gBAAG,4BAAkB;AAAA,IAC9C,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,IAAI,iBAAiB,EAAE,CAAC;AAAA,IACrC,QAAQ;AAAA,MACN,MAAM,CAAC,iBAAiB,MAAM;AAAA,IAChC;AAAA,IACA,UAAU,CAAI,6BAAmB,CAAC,qBAAqB,CAAC,GAAM,oCAA0B;AAAA,EAC1F,CAAC;AA3EL,MAAMC,iBAAN;AA8EA,SAAOA;AACT,GAAG;AAIH,SAAS,kBAAkB,QAAQ;AACjC,SAAO,EAAE,kBAAkB,kBAAkB,EAAE,kBAAkB,uBAAuB,EAAE,kBAAkB;AAC9G;AACA,IAAM,qBAAqB;AAAA,EACzB,SAAS;AAAA,EACT,aAA0B,2BAAW,MAAM,eAAe;AAC5D;AAmCA,IAAI,kBAAgC,uBAAM;AACxC,QAAM,mBAAN,MAAM,yBAAwB,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,IAKtC,IAAI,WAAW,YAAY;AACzB,UAAI,OAAO,cAAc,eAAe,WAAW;AACjD,gBAAQ,KAAK,mBAAmB;AAAA,MAClC;AAAA,IACF;AAAA,IAWA,YAAY,QAAQ,YAAY,iBAAiB,gBAAgB,uBAAuB;AACtF,YAAM;AACN,WAAK,wBAAwB;AAC7B,WAAK,SAAS;AAUd,WAAK,OAAO;AAEZ,WAAK,SAAS,IAAI,aAAa;AAQ/B,WAAK,sBAAsB;AAC3B,WAAK,UAAU;AACf,WAAK,eAAe,UAAU;AAC9B,WAAK,oBAAoB,eAAe;AACxC,WAAK,gBAAgB,oBAAoB,MAAM,cAAc;AAAA,IAC/D;AAAA;AAAA,IAEA,YAAY,SAAS;AACnB,UAAI,CAAC,KAAK;AAAQ,aAAK,cAAc;AACrC,UAAI,kBAAkB,SAAS,KAAK,SAAS,GAAG;AAC9C,YAAI,OAAO,cAAc,eAAe,WAAW;AACjD,0BAAgB,mBAAmB,kBAAiB,MAAM,KAAK,qBAAqB;AAAA,QACtF;AACA,aAAK,YAAY,KAAK;AACtB,aAAK,cAAc,YAAY,MAAM,KAAK,KAAK;AAAA,MACjD;AAAA,IACF;AAAA;AAAA,IAEA,cAAc;AACZ,UAAI,KAAK,eAAe;AACtB,aAAK,cAAc,cAAc,IAAI;AAAA,MACvC;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,kBAAkB,UAAU;AAC1B,WAAK,YAAY;AACjB,WAAK,OAAO,KAAK,QAAQ;AAAA,IAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,IAAI,OAAO;AACT,aAAO,YAAY,KAAK,QAAQ,OAAO,KAAK,OAAO,KAAK,KAAK,SAAS,GAAG,KAAK,OAAO;AAAA,IACvF;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,IAAI,gBAAgB;AAClB,aAAO,KAAK,UAAU,KAAK,QAAQ,gBAAgB;AAAA,IACrD;AAAA,IACA,mBAAmB;AACjB,UAAI,OAAO,cAAc,eAAe,WAAW;AACjD,YAAI,EAAE,KAAK,mBAAmB,kBAAkB,KAAK,mBAAmB,4BAA4B;AAClG,gBAAM,sBAAsB;AAAA,QAC9B,WAAW,EAAE,KAAK,mBAAmB,kBAAkB,EAAE,KAAK,mBAAmB,uBAAuB,EAAE,KAAK,mBAAmB,gBAAgB;AAChJ,gBAAM,uBAAuB;AAAA,QAC/B;AAAA,MACF;AAAA,IACF;AAAA,IACA,gBAAgB;AACd,WAAK,iBAAiB;AACtB,WAAK,UAAU,KAAK,cAAc,WAAW,IAAI;AACjD,WAAK,SAAS;AAAA,IAChB;AAAA,EAqBF;AA3GI,mBAAK,0BAA0B;AAwF/B,mBAAK,YAAO,SAAS,wBAAwB,GAAG;AAC9C,WAAO,KAAK,KAAK,kBAAoB,4BAAkB,kBAAkB,EAAE,GAAM,4BAAkB,eAAe,EAAE,GAAM,4BAAkB,qBAAqB,EAAE,GAAM,4BAAkB,mBAAmB,EAAE,GAAM,4BAAkB,oCAAoC,CAAC,CAAC;AAAA,EAChR;AAGA,mBAAK,YAAsB,gBAAG,4BAAkB;AAAA,IAC9C,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,IAAI,mBAAmB,EAAE,CAAC;AAAA,IACvC,QAAQ;AAAA,MACN,MAAM,CAAC,mBAAmB,MAAM;AAAA,MAChC,YAAY,CAAC,YAAY,YAAY;AAAA,MACrC,OAAO,CAAC,WAAW,OAAO;AAAA,IAC5B;AAAA,IACA,SAAS;AAAA,MACP,QAAQ;AAAA,IACV;AAAA,IACA,UAAU,CAAI,6BAAmB,CAAC,kBAAkB,CAAC,GAAM,sCAA+B,8BAAoB;AAAA,EAChH,CAAC;AA3HL,MAAMC,mBAAN;AA8HA,SAAOA;AACT,GAAG;AAunCH,IAAI,kCAA2C,uBAAM;AACnD,QAAM,mCAAN,MAAM,iCAA2B;AAAA,EAgBjC;AAdI,mCAAK,YAAO,SAAS,wCAAmC,GAAG;AACzD,WAAO,KAAK,KAAK,kCAA4B;AAAA,EAC/C;AAGA,mCAAK,YAAsB,gBAAG,2BAAiB;AAAA,IAC7C,MAAM;AAAA,EACR,CAAC;AAGD,mCAAK,YAAsB,gBAAG,2BAAiB;AAAA,IAC7C,SAAS,CAAC,0BAA0B;AAAA,EACtC,CAAC;AAdL,MAAMC,mCAAN;AAiBA,SAAOA;AACT,GAAG;AAwEH,IAAM,YAAN,cAAwB,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EActC,YAAY,UAAU,iBAAiB,gBAAgB;AACrD,UAAM,eAAe,eAAe,GAAG,oBAAoB,gBAAgB,eAAe,CAAC;AAC3F,SAAK,WAAW;AAChB,SAAK,iBAAiB;AACtB,SAAK,mBAAmB,eAAe;AACvC,SAAK,eAAe;AACpB,SAAK,uBAAuB;AAAA,MAC1B,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,MAKV,WAAW,CAAC,CAAC,KAAK;AAAA,IACpB,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,GAAG,OAAO;AACR,WAAO,KAAK,SAAS,KAAK,aAAa,KAAK,CAAC;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,KAAK,SAAS,UAAU,CAAC,GAAG;AAC1B,SAAK,SAAS,KAAK,OAAO;AAC1B,SAAK,iBAAiB,OAAO;AAC7B,SAAK,uBAAuB;AAAA,MAC1B,WAAW,QAAQ;AAAA,IACrB,CAAC;AACD,SAAK,oBAAoB;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,OAAO,OAAO,SAAS,UAAU,CAAC,GAAG;AACnC,SAAK,SAAS,OAAO,OAAO,GAAG,OAAO;AACtC,SAAK,iBAAiB,OAAO;AAC7B,SAAK,uBAAuB;AAAA,MAC1B,WAAW,QAAQ;AAAA,IACrB,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,SAAS,OAAO,UAAU,CAAC,GAAG;AAE5B,QAAI,gBAAgB,KAAK,aAAa,KAAK;AAC3C,QAAI,gBAAgB;AAAG,sBAAgB;AACvC,QAAI,KAAK,SAAS,aAAa;AAAG,WAAK,SAAS,aAAa,EAAE,4BAA4B,MAAM;AAAA,MAAC,CAAC;AACnG,SAAK,SAAS,OAAO,eAAe,CAAC;AACrC,SAAK,uBAAuB;AAAA,MAC1B,WAAW,QAAQ;AAAA,IACrB,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,WAAW,OAAO,SAAS,UAAU,CAAC,GAAG;AAEvC,QAAI,gBAAgB,KAAK,aAAa,KAAK;AAC3C,QAAI,gBAAgB;AAAG,sBAAgB;AACvC,QAAI,KAAK,SAAS,aAAa;AAAG,WAAK,SAAS,aAAa,EAAE,4BAA4B,MAAM;AAAA,MAAC,CAAC;AACnG,SAAK,SAAS,OAAO,eAAe,CAAC;AACrC,QAAI,SAAS;AACX,WAAK,SAAS,OAAO,eAAe,GAAG,OAAO;AAC9C,WAAK,iBAAiB,OAAO;AAAA,IAC/B;AACA,SAAK,uBAAuB;AAAA,MAC1B,WAAW,QAAQ;AAAA,IACrB,CAAC;AACD,SAAK,oBAAoB;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,SAAS;AACX,WAAO,KAAK,SAAS;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAoCA,SAAS,OAAO,UAAU,CAAC,GAAG;AAC5B,2BAAuB,MAAM,OAAO,KAAK;AACzC,UAAM,QAAQ,CAAC,UAAU,UAAU;AACjC,2BAAqB,MAAM,OAAO,KAAK;AACvC,WAAK,GAAG,KAAK,EAAE,SAAS,UAAU;AAAA,QAChC,UAAU;AAAA,QACV,WAAW,QAAQ;AAAA,MACrB,CAAC;AAAA,IACH,CAAC;AACD,SAAK,uBAAuB,OAAO;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiCA,WAAW,OAAO,UAAU,CAAC,GAAG;AAK9B,QAAI,SAAS;AAAwC;AACrD,UAAM,QAAQ,CAAC,UAAU,UAAU;AACjC,UAAI,KAAK,GAAG,KAAK,GAAG;AAClB,aAAK,GAAG,KAAK,EAAE,WAAW,UAAU;AAAA,UAClC,UAAU;AAAA,UACV,WAAW,QAAQ;AAAA,QACrB,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AACD,SAAK,uBAAuB,OAAO;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA+CA,MAAM,QAAQ,CAAC,GAAG,UAAU,CAAC,GAAG;AAC9B,SAAK,cAAc,CAAC,SAAS,UAAU;AACrC,cAAQ,MAAM,MAAM,KAAK,GAAG;AAAA,QAC1B,UAAU;AAAA,QACV,WAAW,QAAQ;AAAA,MACrB,CAAC;AAAA,IACH,CAAC;AACD,SAAK,gBAAgB,OAAO;AAC5B,SAAK,eAAe,OAAO;AAC3B,SAAK,uBAAuB,OAAO;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,cAAc;AACZ,WAAO,KAAK,SAAS,IAAI,aAAW,QAAQ,YAAY,CAAC;AAAA,EAC3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqCA,MAAM,UAAU,CAAC,GAAG;AAClB,QAAI,KAAK,SAAS,SAAS;AAAG;AAC9B,SAAK,cAAc,aAAW,QAAQ,4BAA4B,MAAM;AAAA,IAAC,CAAC,CAAC;AAC3E,SAAK,SAAS,OAAO,CAAC;AACtB,SAAK,uBAAuB;AAAA,MAC1B,WAAW,QAAQ;AAAA,IACrB,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,aAAa,OAAO;AAClB,WAAO,QAAQ,IAAI,QAAQ,KAAK,SAAS;AAAA,EAC3C;AAAA;AAAA,EAEA,uBAAuB;AACrB,QAAI,iBAAiB,KAAK,SAAS,OAAO,CAAC,SAAS,UAAU;AAC5D,aAAO,MAAM,qBAAqB,IAAI,OAAO;AAAA,IAC/C,GAAG,KAAK;AACR,QAAI;AAAgB,WAAK,uBAAuB;AAAA,QAC9C,UAAU;AAAA,MACZ,CAAC;AACD,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,cAAc,IAAI;AAChB,SAAK,SAAS,QAAQ,CAAC,SAAS,UAAU;AACxC,SAAG,SAAS,KAAK;AAAA,IACnB,CAAC;AAAA,EACH;AAAA;AAAA,EAEA,eAAe;AACb,SAAK,QAAQ,KAAK,SAAS,OAAO,aAAW,QAAQ,WAAW,KAAK,QAAQ,EAAE,IAAI,aAAW,QAAQ,KAAK;AAAA,EAC7G;AAAA;AAAA,EAEA,aAAa,WAAW;AACtB,WAAO,KAAK,SAAS,KAAK,aAAW,QAAQ,WAAW,UAAU,OAAO,CAAC;AAAA,EAC5E;AAAA;AAAA,EAEA,iBAAiB;AACf,SAAK,cAAc,aAAW,KAAK,iBAAiB,OAAO,CAAC;AAAA,EAC9D;AAAA;AAAA,EAEA,uBAAuB;AACrB,eAAW,WAAW,KAAK,UAAU;AACnC,UAAI,QAAQ;AAAS,eAAO;AAAA,IAC9B;AACA,WAAO,KAAK,SAAS,SAAS,KAAK,KAAK;AAAA,EAC1C;AAAA,EACA,iBAAiB,SAAS;AACxB,YAAQ,UAAU,IAAI;AACtB,YAAQ,4BAA4B,KAAK,mBAAmB;AAAA,EAC9D;AAAA;AAAA,EAEA,MAAM,MAAM;AACV,WAAO,KAAK,GAAG,IAAI,KAAK;AAAA,EAC1B;AACF;AASA,SAAS,yBAAyB,SAAS;AACzC,SAAO,CAAC,CAAC,YAAY,QAAQ,oBAAoB,UAAa,QAAQ,eAAe,UAAa,QAAQ,aAAa;AACzH;AAcA,IAAI,cAA4B,uBAAM;AACpC,QAAM,eAAN,MAAM,aAAY;AAAA,IAChB,cAAc;AACZ,WAAK,iBAAiB;AAAA,IACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA2CA,IAAI,cAAc;AAChB,YAAM,OAAO,IAAI,aAAY;AAC7B,WAAK,iBAAiB;AACtB,aAAO;AAAA,IACT;AAAA,IACA,MAAM,UAAU,UAAU,MAAM;AAC9B,YAAM,kBAAkB,KAAK,gBAAgB,QAAQ;AACrD,UAAI,aAAa,CAAC;AAClB,UAAI,yBAAyB,OAAO,GAAG;AAErC,qBAAa;AAAA,MACf,WAAW,YAAY,MAAM;AAE3B,mBAAW,aAAa,QAAQ;AAChC,mBAAW,kBAAkB,QAAQ;AAAA,MACvC;AACA,aAAO,IAAI,UAAU,iBAAiB,UAAU;AAAA,IAClD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAgBA,OAAO,UAAU,UAAU,MAAM;AAC/B,YAAM,kBAAkB,KAAK,gBAAgB,QAAQ;AAErD,aAAO,IAAI,WAAW,iBAAiB,OAAO;AAAA,IAChD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA2BA,QAAQ,WAAW,iBAAiB,gBAAgB;AAClD,UAAI,aAAa,CAAC;AAClB,UAAI,CAAC,KAAK,gBAAgB;AACxB,eAAO,IAAI,YAAY,WAAW,iBAAiB,cAAc;AAAA,MACnE;AACA,UAAI,yBAAyB,eAAe,GAAG;AAE7C,qBAAa;AAAA,MACf,OAAO;AAEL,mBAAW,aAAa;AACxB,mBAAW,kBAAkB;AAAA,MAC/B;AACA,aAAO,IAAI,YAAY,WAAW,iCAC7B,aAD6B;AAAA,QAEhC,aAAa;AAAA,MACf,EAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAeA,MAAM,UAAU,iBAAiB,gBAAgB;AAC/C,YAAM,kBAAkB,SAAS,IAAI,OAAK,KAAK,eAAe,CAAC,CAAC;AAEhE,aAAO,IAAI,UAAU,iBAAiB,iBAAiB,cAAc;AAAA,IACvE;AAAA;AAAA,IAEA,gBAAgB,UAAU;AACxB,YAAM,kBAAkB,CAAC;AACzB,aAAO,KAAK,QAAQ,EAAE,QAAQ,iBAAe;AAC3C,wBAAgB,WAAW,IAAI,KAAK,eAAe,SAAS,WAAW,CAAC;AAAA,MAC1E,CAAC;AACD,aAAO;AAAA,IACT;AAAA;AAAA,IAEA,eAAe,UAAU;AACvB,UAAI,oBAAoB,aAAa;AACnC,eAAO;AAAA,MACT,WAAW,oBAAoB,iBAAiB;AAE9C,eAAO;AAAA,MACT,WAAW,MAAM,QAAQ,QAAQ,GAAG;AAElC,cAAM,QAAQ,SAAS,CAAC;AACxB,cAAM,YAAY,SAAS,SAAS,IAAI,SAAS,CAAC,IAAI;AACtD,cAAM,iBAAiB,SAAS,SAAS,IAAI,SAAS,CAAC,IAAI;AAC3D,eAAO,KAAK,QAAQ,OAAO,WAAW,cAAc;AAAA,MACtD,OAAO;AAEL,eAAO,KAAK,QAAQ,QAAQ;AAAA,MAC9B;AAAA,IACF;AAAA,EAaF;AAXI,eAAK,YAAO,SAAS,oBAAoB,GAAG;AAC1C,WAAO,KAAK,KAAK,cAAa;AAAA,EAChC;AAGA,eAAK,aAAuB,gBAAG,6BAAmB;AAAA,IAChD,OAAO;AAAA,IACP,SAAS,aAAY;AAAA,IACrB,YAAY;AAAA,EACd,CAAC;AAvLL,MAAMC,eAAN;AA0LA,SAAOA;AACT,GAAG;AA+FH,IAAI,cAA4B,uBAAM;AACpC,QAAM,eAAN,MAAM,aAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAShB,OAAO,WAAW,MAAM;AACtB,aAAO;AAAA,QACL,UAAU;AAAA,QACV,WAAW,CAAC;AAAA,UACV,SAAS;AAAA,UACT,UAAU,KAAK,wBAAwB;AAAA,QACzC,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EAgBF;AAdI,eAAK,YAAO,SAAS,oBAAoB,GAAG;AAC1C,WAAO,KAAK,KAAK,cAAa;AAAA,EAChC;AAGA,eAAK,YAAsB,gBAAG,2BAAiB;AAAA,IAC7C,MAAM;AAAA,EACR,CAAC;AAGD,eAAK,YAAsB,gBAAG,2BAAiB;AAAA,IAC7C,SAAS,CAAC,+BAA0B;AAAA,EACtC,CAAC;AA/BL,MAAMC,eAAN;AAkCA,SAAOA;AACT,GAAG;AAgBH,IAAI,sBAAoC,uBAAM;AAC5C,QAAM,uBAAN,MAAM,qBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWxB,OAAO,WAAW,MAAM;AACtB,aAAO;AAAA,QACL,UAAU;AAAA,QACV,WAAW,CAAC;AAAA,UACV,SAAS;AAAA,UACT,UAAU,KAAK,gCAAgC;AAAA,QACjD,GAAG;AAAA,UACD,SAAS;AAAA,UACT,UAAU,KAAK,wBAAwB;AAAA,QACzC,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EAgBF;AAdI,uBAAK,YAAO,SAAS,4BAA4B,GAAG;AAClD,WAAO,KAAK,KAAK,sBAAqB;AAAA,EACxC;AAGA,uBAAK,YAAsB,gBAAG,2BAAiB;AAAA,IAC7C,MAAM;AAAA,EACR,CAAC;AAGD,uBAAK,YAAsB,gBAAG,2BAAiB;AAAA,IAC7C,SAAS,CAAC,+BAA0B;AAAA,EACtC,CAAC;AApCL,MAAMC,uBAAN;AAuCA,SAAOA;AACT,GAAG;;;ACx3OH,yBAAiB;;;AELV,IAAMC,cAAc;EACvBC,YAAY;EACZC,UAAU;;;;ACYd,IAAaC,cAAW,uBAAA;AAAlB,QAAOA,eAAP,MAAOA,aAAW;IAEtBC,YAAoBC,MAAgB;AAAhB,WAAAA,OAAAA;AAEpB,WAAAC,cAAa;QACXC,SAAS,IAAIC,YAAa;UACxB,gBAAgB;SACjB;;IALqC;;IASxCC,YAAYC,OAAwB;AAClC,UAAIA,MAAMA,iBAAiBC,YAAY;AACrCC,gBAAQC,IAAI,0BAAyBH,OAAMA,MAAMI,OAAO;aACnD;AACLF,gBAAQF,MACN,kBAAkBA,MAAMK,MAAM,YACpBL,MAAMA,KAAK,GAAG;;AAE5B,aAAOM,WAAY,mDAAgD;IACrE;IAEAC,MAAMC,UAAmB;AACvBN,cAAQC,IAAIK,QAAQ;AACpB,aAAO,KAAKb,KAAKc,KAAK,GAAGC,YAAYC,QAAQ,UAAUH,QAAQ,EAC5DI,KACCC,IAAMC,SAAW;AACfC,qBAAaC,QAAQ,OAAOF,IAAIG,GAAG;MACrC,CAAC,CAAC;IAER;IAEAC,SAASV,UAAa;AACpB,aAAO,KAAKb,KAAKc,KAAK,GAAGC,YAAYC,QAAQ,YAAYH,QAAQ;IACnE;IAEAW,eAAY;AACV,YAAMC,QAAQL,aAAaM,QAAQ,OAAO,KAAK;AAE/C,UAAID,UAAU,IAAG;AACf,eAAOE,GAAI,KAAK;;AAGlB,aAAO,KAAK3B,KAAK4B,IAAmB,GAAGb,YAAYC,QAAQ,gBAAgB;QACzEd,SAAS;UACP,WAAWuB;;OAEd,EAAER,KACDC,IAAKC,SAAM;AACTC,qBAAaC,QAAQ,SAASF,IAAIM,KAAK;MACzC,CAAC,GACDI,IAAMC,UAAO;AACX,eAAO;MACT,CAAC,GACDC,WAAaC,SAAM;AACjBzB,gBAAQ0B,KAAKD,GAAG;AAChB,eAAOL,GAAG,KAAK;MACjB,CAAC,CAAC;IAEN;;;qBA3DW7B,cAAWoC,mBAAAC,UAAA,CAAA;EAAA;;WAAXrC;IAAWsC,SAAXtC,aAAWuC;IAAAC,YAHV;EAAM,CAAA;AAGd,MAAOxC,eAAP;SAAOA;AAAW,GAAA;;;;;AFKVyC,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAAwDD,IAAAE,iBAAA,GAAA,2BAAA;AAAyBF,IAAAG,uBAAA;;;;;AAKjFH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAA2DD,IAAAE,iBAAA,GAAA,iCAAA;AAA4BF,IAAAG,uBAAA;;;;;ADZrG,IAAaC,iBAAc,uBAAA;AAArB,QAAOA,kBAAP,MAAOA,gBAAc;IAGzBC,YAAoBC,IAAwBC,aAAkCC,QAAc;AAAxE,WAAAF,KAAAA;AAAwB,WAAAC,cAAAA;AAAkC,WAAAC,SAAAA;AAF9E,WAAAC,WAAkB;AAMX,WAAAC,OAAO,KAAKJ,GAAGK,MAAM;QAC1BC,SAAS,CAACC,aAAaC,QAAQ,SAAS,KAAK,IAAI,CAACC,WAAWC,QAAQ,CAAC;QACtEC,iBAAY,CAAC,IAAI,CAACF,WAAWC,QAAQ,CAAC;QACtCE,UAAU,CAAWL,aAAaC,QAAQ,SAAS,CAAC;OACrD;IAR6F;IAE9FK,WAAQ;IAAI;IAQZC,QAAK;AACH,WAAKX,WAAS;AACdY,cAAQC,IAAI,KAAKb,QAAQ;AACzB,UAAG,CAAC,KAAKC,KAAKa,OAAM;AAClBF,gBAAQC,IAAI,0BAA0B;aACnC;AACH,cAAME,WAAsB,iCACvB,KAAKd,KAAKe,QADa;UAE1Bb,SAAS,KAAKF,KAAKe,MAAMb,WAAW;UACpCK,iBAAY,KAAKP,KAAKe,MAAMR,mBAAc;UAC1CC,UAAU,CAAC,CAAC,KAAKR,KAAKe,MAAMP;;AAE9BG,gBAAQC,IAAI,OAAO;AACnB,aAAKf,YAAYa,MAAMI,QAAQ,EAAEE,UAC9BC,cAAgB;AACfd,uBAAae,QAAQ,SAASD,SAASE,KAAK;AAC5C,cAAI,KAAKnB,KAAKoB,IAAI,UAAU,GAAGL,SAAS,IAAG;AACzCZ,yBAAae,QAAQ,WAAW,KAAKlB,KAAKoB,IAAI,SAAS,GAAGL,SAAS,EAAE;iBAChE;AACLZ,yBAAakB,WAAW,SAAS;;AAEnCV,kBAAQC,IAAI,2BAA2BK,QAAQ;AAC/C,cAAGA,SAASK,OAAO,SAAQ;AACzB,iBAAKxB,OAAOyB,SAAS,CAAC,iBAAiB,CAAC;;AAG1C,cAAGN,SAASK,OAAO,UAAS;AAC1B,iBAAKxB,OAAOyB,SAAS,CAAC,mBAAmB,CAAC;;AAE5C,cAAGN,SAASK,OAAO,UAAS;AAC1B,iBAAKxB,OAAOyB,SAAS,CAAC,mBAAmB,CAAC;;AAE5C,cAAGN,SAASK,OAAO,YAAW;AAC5B,iBAAKxB,OAAOyB,SAAS,CAAC,sBAAsB,CAAC;;QAEjD,GACCC,WAAS;AACRb,kBAAQa,MAAM,8BAA2BA,KAAK;AAC9CC,6BAAAA,QAAKC,KAAKF,MAAMA,MAAMG,GAAG;QAC3B,CAAC;;IAGP;IAEAC,aAAaC,OAAa;AACxB,aAAO,KAAK7B,KAAKoB,IAAIS,KAAK,GAAGhB,SAAS,CAAC,KAAKd;IAC9C;;;qBA3DWL,iBAAcoC,4BAAAC,WAAA,GAAAD,4BAAAE,WAAA,GAAAF,4BAAAG,MAAA,CAAA;EAAA;;UAAdvC;IAAcwC,WAAA,CAAA,CAAA,WAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,qBAAA,mBAAA,mBAAA,cAAA,UAAA,sBAAA,wBAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,0BAAA,OAAA,GAAA,CAAA,GAAA,OAAA,0BAAA,OAAA,GAAA,CAAA,GAAA,YAAA,YAAA,WAAA,GAAA,CAAA,GAAA,QAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,QAAA,gBAAA,GAAA,eAAA,YAAA,eAAA,WAAA,QAAA,OAAA,GAAA,CAAA,OAAA,mCAAA,SAAA,OAAA,OAAA,EAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,WAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,WAAA,MAAA,WAAA,GAAA,cAAA,GAAA,CAAA,SAAA,eAAA,GAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,iBAAA,GAAA,YAAA,GAAA,CAAA,QAAA,YAAA,mBAAA,iBAAA,MAAA,kBAAA,GAAA,cAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,2BAAA,MAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,QAAA,YAAA,SAAA,IAAA,MAAA,oBAAA,mBAAA,YAAA,GAAA,oBAAA,SAAA,GAAA,CAAA,OAAA,oBAAA,GAAA,oBAAA,WAAA,GAAA,CAAA,GAAA,gBAAA,WAAA,GAAA,YAAA,GAAA,CAAA,GAAA,OAAA,eAAA,SAAA,QAAA,QAAA,QAAA,aAAA,GAAA,OAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,wBAAA,GAAA,CAAA,GAAA,QAAA,QAAA,SAAA,GAAA,CAAA,GAAA,gBAAA,WAAA,QAAA,GAAA,YAAA,GAAA,CAAA,GAAA,aAAA,CAAA;IAAAC,UAAA,SAAAC,wBAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACX3BlD,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,KAAA,CAAA;AAS7CD,QAAAoD,oBAAA,GAAA,OAAA,CAAA;AACFpD,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,GAAA,KAAA,CAAA;AAAuBD,QAAAE,iBAAA,IAAA,qBAAA;AAAmBF,QAAAG,uBAAA;AAC1CH,QAAAC,yBAAA,IAAA,QAAA,EAAA,EAAyB,IAAA,OAAA,EAAA,EAAA,IAAA,SAAA,EAAA;AAEmBD,QAAAE,iBAAA,IAAA,iBAAA;AAAeF,QAAAG,uBAAA;AACvDH,QAAAoD,oBAAA,IAAA,SAAA,EAAA;AACFpD,QAAAG,uBAAA;AACAH,QAAAqD,qBAAA,IAAAC,8BAAA,GAAA,GAAA,KAAA,EAAA;AACAtD,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,SAAA,EAAA;AAC2BD,QAAAE,iBAAA,IAAA,gBAAA;AAAWF,QAAAG,uBAAA;AACtDH,QAAAoD,oBAAA,IAAA,SAAA,EAAA;AACFpD,QAAAG,uBAAA;AACAH,QAAAqD,qBAAA,IAAAE,8BAAA,GAAA,GAAA,KAAA,EAAA;AACAvD,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAoE,IAAA,OAAA,EAAA;AAEhED,QAAAoD,oBAAA,IAAA,SAAA,EAAA;AACApD,QAAAC,yBAAA,IAAA,SAAA,EAAA;AACED,QAAAE,iBAAA,IAAA,iBAAA;AACFF,QAAAG,uBAAA,EAAQ;AAEVH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAA6DD,QAAAE,iBAAA,IAAA,oCAAA;AAA4BF,QAAAG,uBAAA,EAAI;AAE/FH,QAAAC,yBAAA,IAAA,UAAA,EAAA;AAA+DD,QAAAwD,qBAAA,SAAA,SAAAC,mDAAA;AAAA,iBAASN,IAAA/B,MAAA;QAAO,CAAA;AAAEpB,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AACvFH,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAA8D,IAAA,KAAA,EAAA;AAC/BD,QAAAE,iBAAA,IAAA,qBAAA;AAAgBF,QAAAG,uBAAA;AAC7CH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAkED,QAAAE,iBAAA,IAAA,eAAA;AAAUF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;;;AAvB9EH,QAAA0D,oBAAA,EAAA;AAAA1D,QAAA2D,qBAAA,aAAAR,IAAAzC,IAAA;AAKoBV,QAAA0D,oBAAA,CAAA;AAAA1D,QAAA2D,qBAAA,QAAA,CAAAR,IAAAb,aAAA,SAAA,CAAA;AAKAtC,QAAA0D,oBAAA,CAAA;AAAA1D,QAAA2D,qBAAA,QAAA,CAAAR,IAAAb,aAAA,eAAA,CAAA;AAQUtC,QAAA0D,oBAAA,CAAA;AAAA1D,QAAA2D,qBAAA,cAAAC,0BAAA,GAAAC,GAAA,CAAA;AAKK7D,QAAA0D,oBAAA,CAAA;AAAA1D,QAAA2D,qBAAA,cAAAC,0BAAA,GAAAE,GAAA,CAAA;;;;;;ADzB/C,MAAO1D,kBAAP;SAAOA;AAAc,GAAA;;;AIL3B,IAAa2D,oBAAiB,uBAAA;AAAxB,QAAOA,qBAAP,MAAOA,mBAAiB;;;qBAAjBA,oBAAiB;EAAA;;UAAjBA;IAAiBC,WAAA,CAAA,CAAA,cAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,qBAAA,mBAAA,mBAAA,cAAA,UAAA,sBAAA,wBAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,0BAAA,OAAA,GAAA,CAAA,GAAA,OAAA,0BAAA,OAAA,GAAA,CAAA,GAAA,YAAA,YAAA,WAAA,GAAA,CAAA,GAAA,QAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,QAAA,gBAAA,GAAA,eAAA,YAAA,eAAA,WAAA,QAAA,OAAA,GAAA,CAAA,OAAA,mCAAA,SAAA,OAAA,OAAA,EAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,sBAAA,GAAA,YAAA,GAAA,CAAA,QAAA,SAAA,MAAA,sBAAA,oBAAA,aAAA,GAAA,cAAA,GAAA,CAAA,QAAA,gBAAA,GAAA,OAAA,eAAA,SAAA,QAAA,QAAA,QAAA,WAAA,GAAA,CAAA,QAAA,WAAA,GAAA,OAAA,iBAAA,SAAA,QAAA,QAAA,QAAA,WAAA,CAAA;IAAAC,UAAA,SAAAC,2BAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACN9BE,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,KAAA,CAAA;AAS7CD,QAAAE,oBAAA,GAAA,OAAA,CAAA;AACFF,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,GAAA,KAAA,CAAA;AAAuBD,QAAAI,iBAAA,IAAA,oCAAA;AAA4BJ,QAAAG,uBAAA;AACnDH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAAuBD,QAAAI,iBAAA,IAAA,4FAAA;AAAoFJ,QAAAG,uBAAA;AAC3GH,QAAAC,yBAAA,IAAA,MAAA,EAAM,IAAA,OAAA,EAAA,EAAA,IAAA,SAAA,EAAA;AAEiDD,QAAAI,iBAAA,IAAA,OAAA;AAAKJ,QAAAG,uBAAA;AACxDH,QAAAE,oBAAA,IAAA,SAAA,EAAA;AACFF,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAA8ED,QAAAI,iBAAA,IAAA,SAAA;AAAOJ,QAAAG,uBAAA;AACrFH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAA2ED,QAAAI,iBAAA,IAAA,QAAA;AAAMJ,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;;;;;;ADd7F,MAAOZ,qBAAP;SAAOA;AAAiB,GAAA;;;AEH9B,IAAAc,sBAAiB;;;ACeHC,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAA0DD,IAAAE,iBAAA,GAAA,0BAAA;AAAwBF,IAAAG,uBAAA;;;;;AAKlFH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAAyDD,IAAAE,iBAAA,GAAA,yBAAA;AAAuBF,IAAAG,uBAAA;;;;;AAKhFH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAA8DD,IAAAE,iBAAA,GAAA,iCAAA;AAA4BF,IAAAG,uBAAA;;;;;AAK1FH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAAyDD,IAAAE,iBAAA,GAAA,yBAAA;AAAuBF,IAAAG,uBAAA;;;;;AAKhFH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAAsDD,IAAAE,iBAAA,GAAA,oCAAA;AAA+BF,IAAAG,uBAAA;;;;;AAKrFH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAA6DD,IAAAE,iBAAA,GAAA,6BAAA;AAA2BF,IAAAG,uBAAA;;;;;AAKxFH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAA6DD,IAAAE,iBAAA,GAAA,6BAAA;AAA2BF,IAAAG,uBAAA;;;;;ADtCtG,IAAaC,oBAAiB,uBAAA;AAAxB,QAAOA,qBAAP,MAAOA,mBAAiB;IAG5BC,YAAoBC,IAAwBC,aAAkCC,QAAc;AAAxE,WAAAF,KAAAA;AAAwB,WAAAC,cAAAA;AAAkC,WAAAC,SAAAA;AAF9E,WAAAC,WAAkB;AAMX,WAAAC,OAAO,KAAKJ,GAAGK,MAAM;QAC1BC,QAAQ,CAAC,IAAI,CAACC,WAAWC,QAAQ,CAAC;QAClCC,OAAO,CAAC,IAAI,CAACF,WAAWC,UAAUD,WAAWG,KAAK,CAAC;QACnDC,iBAAY,CAAC,IAAI,CAACJ,WAAWC,QAAQ,CAAC;QACtCI,OAAO,CAAC,IAAI,CAACL,WAAWC,QAAQ,CAAC;QACjCK,IAAI,CAAC,IAAI,CAACN,WAAWC,QAAQ,CAAC;QAC9BM,WAAW,CAAC,IAAI,CAACP,WAAWC,QAAQ,CAAC;QACrCO,WAAW,CAAC,IAAI,CAACR,WAAWC,QAAQ,CAAC;OACtC;IAZ6F;IAE9FQ,WAAQ;IAAI;IAYZC,WAAQ;AACN,WAAKd,WAAS;AACd,UAAG,CAAC,KAAKC,KAAKc,OAAM;AAClBC,gBAAQC,IAAI,0BAA0B;aACnC;AACHD,gBAAQC,IAAI,UAAU;AACtB,aAAKnB,YAAYgB,SAAS,KAAKb,KAAKiB,KAAK,EAAEC,UACxCC,cAAgB;AACfJ,kBAAQC,IAAI,aAAaG,QAAQ;AACjC,eAAKrB,OAAOsB,SAAS,CAAC,SAAS,CAAC;QAClC,GACCC,WAAS;AACRN,kBAAQM,MAAM,sBAAsBA,KAAK;AACzCC,8BAAAA,QAAKC,KAAKF,MAAMA,MAAMG,OAAO;QAC/B,CAAC;;IAGP;IAEAC,gBAAgBC,OAAa;AAC3B,aAAO,KAAK1B,KAAK2B,IAAID,KAAK,GAAGZ,SAAS,CAAC,KAAKf;IAC9C;;;qBAtCWL,oBAAiBkC,4BAAAC,WAAA,GAAAD,4BAAAE,WAAA,GAAAF,4BAAAG,MAAA,CAAA;EAAA;;UAAjBrC;IAAiBsC,WAAA,CAAA,CAAA,cAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,qBAAA,mBAAA,mBAAA,cAAA,UAAA,sBAAA,wBAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,0BAAA,OAAA,GAAA,CAAA,GAAA,OAAA,0BAAA,OAAA,GAAA,CAAA,GAAA,YAAA,YAAA,WAAA,GAAA,CAAA,GAAA,QAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,QAAA,gBAAA,GAAA,eAAA,YAAA,eAAA,WAAA,QAAA,OAAA,GAAA,CAAA,OAAA,mCAAA,SAAA,OAAA,OAAA,EAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,UAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,UAAA,MAAA,UAAA,GAAA,cAAA,GAAA,CAAA,SAAA,eAAA,GAAA,MAAA,GAAA,CAAA,OAAA,SAAA,GAAA,YAAA,GAAA,CAAA,QAAA,SAAA,mBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,iBAAA,GAAA,YAAA,GAAA,CAAA,QAAA,YAAA,mBAAA,iBAAA,MAAA,iBAAA,GAAA,cAAA,GAAA,CAAA,OAAA,SAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,SAAA,MAAA,SAAA,GAAA,cAAA,GAAA,CAAA,OAAA,MAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,MAAA,MAAA,MAAA,GAAA,cAAA,GAAA,CAAA,OAAA,aAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,aAAA,MAAA,aAAA,GAAA,cAAA,GAAA,CAAA,OAAA,aAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,aAAA,MAAA,aAAA,GAAA,cAAA,GAAA,CAAA,GAAA,OAAA,eAAA,SAAA,QAAA,QAAA,QAAA,aAAA,GAAA,OAAA,GAAA,CAAA,GAAA,OAAA,iBAAA,SAAA,QAAA,QAAA,QAAA,aAAA,GAAA,YAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,wBAAA,GAAA,CAAA,GAAA,QAAA,QAAA,SAAA,GAAA,CAAA,GAAA,gBAAA,WAAA,QAAA,GAAA,YAAA,GAAA,CAAA,GAAA,aAAA,CAAA;IAAAC,UAAA,SAAAC,2BAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACV9BhD,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,KAAA,CAAA;AAS7CD,QAAAkD,oBAAA,GAAA,OAAA,CAAA;AACFlD,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,GAAA,KAAA,CAAA;AAAuBD,QAAAE,iBAAA,IAAA,uBAAA;AAAqBF,QAAAG,uBAAA;AAC5CH,QAAAC,yBAAA,IAAA,QAAA,EAAA,EAAyB,IAAA,OAAA,EAAA,EAAA,IAAA,SAAA,EAAA;AAEkBD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAC7CH,QAAAkD,oBAAA,IAAA,SAAA,EAAA;AACFlD,QAAAG,uBAAA;AACAH,QAAAmD,qBAAA,IAAAC,iCAAA,GAAA,GAAA,KAAA,EAAA;AACApD,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,SAAA,EAAA;AACsBD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AAC3CH,QAAAkD,oBAAA,IAAA,SAAA,EAAA;AACFlD,QAAAG,uBAAA;AACAH,QAAAmD,qBAAA,IAAAE,iCAAA,GAAA,GAAA,KAAA,EAAA;AACArD,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,SAAA,EAAA;AAC2BD,QAAAE,iBAAA,IAAA,eAAA;AAAUF,QAAAG,uBAAA;AACrDH,QAAAkD,oBAAA,IAAA,SAAA,EAAA;AACFlD,QAAAG,uBAAA;AACAH,QAAAmD,qBAAA,IAAAG,iCAAA,GAAA,GAAA,KAAA,EAAA;AACAtD,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,SAAA,EAAA;AACsBD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AAC3CH,QAAAkD,oBAAA,IAAA,SAAA,EAAA;AACFlD,QAAAG,uBAAA;AACAH,QAAAmD,qBAAA,IAAAI,iCAAA,GAAA,GAAA,KAAA,EAAA;AACAvD,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,SAAA,EAAA;AACmBD,QAAAE,iBAAA,IAAA,iBAAA;AAAYF,QAAAG,uBAAA;AAC/CH,QAAAkD,oBAAA,IAAA,SAAA,EAAA;AACFlD,QAAAG,uBAAA;AACAH,QAAAmD,qBAAA,IAAAK,iCAAA,GAAA,GAAA,KAAA,EAAA;AACAxD,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,SAAA,EAAA;AAC0BD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACnDH,QAAAkD,oBAAA,IAAA,SAAA,EAAA;AACFlD,QAAAG,uBAAA;AACAH,QAAAmD,qBAAA,IAAAM,iCAAA,GAAA,GAAA,KAAA,EAAA;AACAzD,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,SAAA,EAAA;AAC0BD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACnDH,QAAAkD,oBAAA,IAAA,SAAA,EAAA;AACFlD,QAAAG,uBAAA;AACAH,QAAAmD,qBAAA,IAAAO,iCAAA,GAAA,GAAA,KAAA,EAAA;AACA1D,QAAAC,yBAAA,IAAA,UAAA,EAAA;AAA+DD,QAAA2D,qBAAA,SAAA,SAAAC,sDAAA;AAAA,iBAASX,IAAA1B,SAAA;QAAU,CAAA;AAAEvB,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAC1FH,QAAAC,yBAAA,IAAA,UAAA,EAAA;AAA4FD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAClGH,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAA8D,IAAA,KAAA,EAAA;AAC/BD,QAAAE,iBAAA,IAAA,2BAAA;AAAsBF,QAAAG,uBAAA;AACnDH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAA+DD,QAAAE,iBAAA,IAAA,kBAAA;AAAaF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;;;AAxC9EH,QAAA6D,oBAAA,EAAA;AAAA7D,QAAA8D,qBAAA,aAAAb,IAAAvC,IAAA;AAKoBV,QAAA6D,oBAAA,CAAA;AAAA7D,QAAA8D,qBAAA,QAAA,CAAAb,IAAAd,gBAAA,QAAA,CAAA;AAKAnC,QAAA6D,oBAAA,CAAA;AAAA7D,QAAA8D,qBAAA,QAAA,CAAAb,IAAAd,gBAAA,OAAA,CAAA;AAKAnC,QAAA6D,oBAAA,CAAA;AAAA7D,QAAA8D,qBAAA,QAAA,CAAAb,IAAAd,gBAAA,eAAA,CAAA;AAKAnC,QAAA6D,oBAAA,CAAA;AAAA7D,QAAA8D,qBAAA,QAAA,CAAAb,IAAAd,gBAAA,OAAA,CAAA;AAKAnC,QAAA6D,oBAAA,CAAA;AAAA7D,QAAA8D,qBAAA,QAAA,CAAAb,IAAAd,gBAAA,IAAA,CAAA;AAKAnC,QAAA6D,oBAAA,CAAA;AAAA7D,QAAA8D,qBAAA,QAAA,CAAAb,IAAAd,gBAAA,WAAA,CAAA;AAKAnC,QAAA6D,oBAAA,CAAA;AAAA7D,QAAA8D,qBAAA,QAAA,CAAAb,IAAAd,gBAAA,WAAA,CAAA;AAEhBnC,QAAA6D,oBAAA,CAAA;AAAA7D,QAAA8D,qBAAA,cAAAC,0BAAA,IAAAC,IAAA,CAAA;AAG+BhE,QAAA6D,oBAAA,CAAA;AAAA7D,QAAA8D,qBAAA,cAAAC,0BAAA,IAAAE,IAAA,CAAA;;;;;;AD3C/C,MAAO7D,qBAAP;SAAOA;AAAiB,GAAA;;;AEJ9B,IAAa8D,kBAAe,uBAAA;AAAtB,QAAOA,mBAAP,MAAOA,iBAAe;;;qBAAfA,kBAAe;EAAA;;UAAfA;IAAeC,WAAA,CAAA,CAAA,YAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,qBAAA,mBAAA,mBAAA,cAAA,UAAA,sBAAA,wBAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,0BAAA,OAAA,GAAA,CAAA,GAAA,OAAA,0BAAA,OAAA,GAAA,CAAA,GAAA,YAAA,YAAA,WAAA,GAAA,CAAA,GAAA,QAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,QAAA,gBAAA,GAAA,eAAA,YAAA,eAAA,WAAA,QAAA,OAAA,GAAA,CAAA,OAAA,mCAAA,SAAA,OAAA,OAAA,EAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,QAAA,WAAA,GAAA,OAAA,eAAA,SAAA,QAAA,QAAA,QAAA,WAAA,GAAA,CAAA,QAAA,cAAA,GAAA,OAAA,eAAA,SAAA,QAAA,QAAA,QAAA,WAAA,CAAA;IAAAC,UAAA,SAAAC,yBAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACN5BE,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,KAAA,CAAA;AAS7CD,QAAAE,oBAAA,GAAA,OAAA,CAAA;AACFF,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,GAAA,KAAA,CAAA;AAAuBD,QAAAI,iBAAA,IAAA,qBAAA;AAAmBJ,QAAAG,uBAAA;AAC1CH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAyED,QAAAI,iBAAA,IAAA,kBAAA;AAAaJ,QAAAG,uBAAA;AACtFH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAAuBD,QAAAI,iBAAA,IAAA,qEAAA;AAA6DJ,QAAAG,uBAAA;AACpFH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAA4ED,QAAAI,iBAAA,IAAA,eAAA;AAAUJ,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;;;;;ADThG,MAAOZ,mBAAP;SAAOA;AAAe,GAAA;;;AEE5B,IAAMc,SAAiB,CACrB;EAAEC,MAAM;EAASC,WAAWC;EAC1BC,UAAU,CACR;IAAEH,MAAM;IAAIC,WAAWG;EAAc,GACrC;IAAEJ,MAAM;IAAMK,YAAY;EAAE,CAAC;GAGjC;EAAEL,MAAM;EAAYC,WAAWC;EAC7BC,UAAU,CACR;IAAEH,MAAM;IAAIC,WAAWK;EAAiB,GACxC;IAAEN,MAAM;IAAMK,YAAY;EAAE,CAAC;GAGjC;EAAEL,MAAM;EAAYC,WAAWC;EAC7BC,UAAU,CACR;IAAEH,MAAM;IAAIC,WAAWM;EAAiB,GACxC;IAAEP,MAAM;IAAMK,YAAY;EAAE,CAAC;GAGjC;EAAEL,MAAM;EAAUC,WAAWC;EAC3BC,UAAU,CACR;IAAEH,MAAM;IAAIC,WAAWO;EAAe,GACtC;IAAER,MAAM;IAAMK,YAAY;EAAE,CAAC;CAEhC;AAOH,IAAaI,oBAAiB,uBAAA;AAAxB,QAAOA,qBAAP,MAAOA,mBAAiB;;;qBAAjBA,oBAAiB;EAAA;;UAAjBA;EAAiB,CAAA;;cAHlBC,aAAaC,SAASZ,MAAM,GAC5BW,YAAY;EAAA,CAAA;AAElB,MAAOD,qBAAP;SAAOA;AAAiB,GAAA;;;AC/B9B,IAAaG,YAAS,uBAAA;AAAhB,QAAOA,aAAP,MAAOA,WAAS;IAEpBC,YAAoBC,aACAC,QAAc;AADd,WAAAD,cAAAA;AACA,WAAAC,SAAAA;IAAiB;IAErCC,YACEC,MACAC,OAA0B;AAC1B,aAAO,KAAKJ,YAAYK,aAAY,EACjCC,KACCC,IAAKC,UAAO;AACV,YAAI,CAACA,MAAM;AACT,eAAKP,OAAOQ,cAAc,QAAQ;;MAEtC,CAAC,CAAC;IAER;;;qBAhBWX,YAASY,mBAAAC,WAAA,GAAAD,mBAAAE,MAAA,CAAA;EAAA;;WAATd;IAASe,SAATf,WAASgB;IAAAC,YAFR;EAAM,CAAA;AAEd,MAAOjB,aAAP;SAAOA;AAAS,GAAA;;;ACCtB,IAAakB,mBAAgB,uBAAA;AAAvB,QAAOA,oBAAP,MAAOA,kBAAgB;;;qBAAhBA,mBAAgB;EAAA;;UAAhBA;IAAgBC,WAAA,CAAA,CAAA,aAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,aAAA,aAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,aAAA,UAAA,eAAA,wBAAA,GAAA,CAAA,QAAA,2BAAA,GAAA,OAAA,yBAAA,YAAA,GAAA,CAAA,QAAA,wBAAA,GAAA,OAAA,yBAAA,YAAA,GAAA,CAAA,QAAA,uBAAA,GAAA,OAAA,yBAAA,YAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,CAAA;IAAAC,UAAA,SAAAC,0BAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACT7BE,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAWPD,QAAAE,iBAAA,GAAA,qBAAA;AAAmBF,QAAAG,uBAAA;AAC3DH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,IAAA,OAAA,CAAA,EAAA,IAAA,KAAA,CAAA;AAEmED,QAAAE,iBAAA,IAAA,YAAA;AAAUF,QAAAG,uBAAA;AACzFH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA4ED,QAAAE,iBAAA,IAAA,SAAA;AAAOF,QAAAG,uBAAA;AACnFH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA2ED,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA,EAAA,EAAA;AAQnGH,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACZD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;;;ADjBjG,MAAOZ,oBAAP;SAAOA;AAAgB,GAAA;;;AEJ7B,IAAaa,iBAAc,uBAAA;AAArB,QAAOA,kBAAP,MAAOA,gBAAc;IAoBzBC,cAAA;AAlBA,WAAAC,YAA2B,CACzB;QAAEC,QAAQ;QAAWC,OAAO;QAAcC,KAAK;MAAoB,GACnE;QAAEF,QAAQ;QAAcC,OAAO;QAAeC,KAAK;MAAuB,GAC1E;QAAEF,QAAQ;QAAWC,OAAO;QAAiBC,KAAK;MAAoB,GACtE;QAAEF,QAAQ;QAAUC,OAAO;QAAgBC,KAAK;MAAmB,CAAC;AAEtE,WAAAC,aAA4B,CAAA;AAC5B,WAAAC,eAA8B,CAC5B;QAAEJ,QAAQ;QAAWC,OAAO;QAAiBC,KAAK;MAAyB,GAC3E;QAAEF,QAAQ;QAAUC,OAAO;QAAgBC,KAAK;MAAwB,CAAC;AAE3E,WAAAG,aAA4B,CAC1B;QAAEL,QAAQ;QAAcC,OAAO;QAAeC,KAAK;MAAyB,GAC5E;QAAEF,QAAQ;QAAWC,OAAO;QAAiBC,KAAK;MAAsB,GACxE;QAAEF,QAAQ;QAAUC,OAAO;QAAgBC,KAAK;MAAqB,CAAC;IAIxD;IAEhBI,UAAO;AACL,YAAMC,MAAMC,aAAaC,QAAQ,KAAK;AAEtC,cAAOF,KAAG;QACR,KAAK;AACH,iBAAO,KAAKR;QACd,KAAK;AACH,iBAAO,KAAKK;QACd,KAAK;AACH,iBAAO,KAAKD;QACd,KAAK;AACH,iBAAO,KAAKE;;AAEhB,aAAO,CAAA;IACT;;;qBApCWR,iBAAc;EAAA;;WAAdA;IAAca,SAAdb,gBAAcc;IAAAC,YAFb;EAAM,CAAA;AAEd,MAAOf,kBAAP;SAAOA;AAAc,GAAA;;;;;AEcjBgB,IAAAC,yBAAA,GAAA,MAAA,EAAA,EAAmD,GAAA,KAAA,EAAA,EAAA,GAAA,MAAA;AAG7CD,IAAAE,oBAAA,GAAA,GAAA;AACFF,IAAAG,uBAAA;AACAH,IAAAC,yBAAA,GAAA,QAAA,EAAA;AAAwBD,IAAAI,iBAAA,CAAA;AAAeJ,IAAAG,uBAAA,EAAO,EAAA;;;;AAJxBH,IAAAK,oBAAA,CAAA;AAAAL,IAAAM,qBAAA,cAAAC,QAAAC,GAAA;AAEjBR,IAAAK,oBAAA,CAAA;AAAAL,IAAAS,qBAAAF,QAAAG,KAAA;AAEmBV,IAAAK,oBAAA,CAAA;AAAAL,IAAAW,4BAAAJ,QAAAK,MAAA;;;ADjBtC,IAAaC,mBAAgB,uBAAA;AAAvB,QAAOA,oBAAP,MAAOA,kBAAgB;IAE3BC,YAAqBC,SAAuB;AAAvB,WAAAA,UAAAA;AADrB,WAAAC,OAAsB,CAAA;IAC0B;IAEhDC,WAAQ;AACN,WAAKD,OAAO,KAAKD,QAAQG,QAAO;AAChCC,cAAQC,IAAI,KAAKJ,IAAI;IACvB;;;qBAPWH,mBAAgBQ,4BAAAC,cAAA,CAAA;EAAA;;UAAhBT;IAAgBU,WAAA,CAAA,CAAA,aAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,cAAA,UAAA,sBAAA,yBAAA,GAAA,CAAA,QAAA,0BAAA,GAAA,eAAA,UAAA,GAAA,CAAA,OAAA,mCAAA,SAAA,OAAA,OAAA,EAAA,GAAA,CAAA,MAAA,mBAAA,GAAA,aAAA,aAAA,WAAA,kBAAA,gBAAA,GAAA,CAAA,GAAA,MAAA,QAAA,MAAA,GAAA,CAAA,kBAAA,IAAA,GAAA,eAAA,gBAAA,GAAA,CAAA,MAAA,YAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,MAAA,WAAA,sBAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,SAAA,gBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,iBAAA,SAAA,GAAA,gBAAA,GAAA,YAAA,CAAA;IAAAC,UAAA,SAAAC,0BAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACR7B7B,QAAAC,yBAAA,GAAA,SAAA,CAAA,EAA4B,GAAA,KAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,KAAA,CAAA;AAKlBD,QAAAE,oBAAA,GAAA,IAAA,EAAI,GAAA,OAAA,CAAA;AAENF,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,GAAA,OAAA,CAAA;AACED,QAAAE,oBAAA,GAAA,KAAA,CAAA;AACFF,QAAAG,uBAAA,EAAM;AAGRH,QAAAC,yBAAA,GAAA,OAAA,CAAA;AACID,QAAAE,oBAAA,GAAA,IAAA;AACFF,QAAAC,yBAAA,IAAA,MAAA,CAAA,EAAoB,IAAA,MAAA,CAAA;AAEhBD,QAAAE,oBAAA,IAAA,KAAA,CAAA;AACAF,QAAAC,yBAAA,IAAA,QAAA,EAAA;AAAwBD,QAAAI,iBAAA,IAAA,MAAA;AAAIJ,QAAAG,uBAAA,EAAO;AAErCH,QAAA+B,qBAAA,IAAAC,iCAAA,GAAA,GAAA,MAAA,EAAA;AA6CFhC,QAAAG,uBAAA,EAAK,EAAA,EAAA;;;AA7CuCH,QAAAK,oBAAA,EAAA;AAAAL,QAAAM,qBAAA,WAAAwB,IAAAd,IAAA;;;;;;ADZ9C,MAAOH,oBAAP;SAAOA;AAAgB,GAAA;;;AED7B,IAAaoB,kBAAe,uBAAA;AAAtB,QAAOA,mBAAP,MAAOA,iBAAe;;;qBAAfA,kBAAe;EAAA;;UAAfA;IAAeC,WAAA,CAAA,CAAA,YAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,UAAA,oBAAA,cAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,YAAA,WAAA,WAAA,GAAA,CAAA,MAAA,kBAAA,QAAA,sBAAA,GAAA,YAAA,kBAAA,gBAAA,GAAA,CAAA,GAAA,MAAA,WAAA,GAAA,CAAA,MAAA,aAAA,GAAA,mBAAA,uBAAA,MAAA,GAAA,CAAA,GAAA,cAAA,YAAA,WAAA,sBAAA,qBAAA,GAAA,CAAA,GAAA,YAAA,UAAA,GAAA,CAAA,QAAA,sBAAA,MAAA,SAAA,kBAAA,YAAA,iBAAA,SAAA,GAAA,YAAA,gBAAA,GAAA,CAAA,OAAA,uCAAA,OAAA,IAAA,SAAA,MAAA,UAAA,MAAA,GAAA,gBAAA,GAAA,CAAA,mBAAA,SAAA,GAAA,iBAAA,qBAAA,0BAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,QAAA,sBAAA,GAAA,UAAA,sBAAA,SAAA,eAAA,GAAA,CAAA,GAAA,MAAA,WAAA,MAAA,GAAA,CAAA,GAAA,QAAA,MAAA,GAAA,CAAA,GAAA,MAAA,WAAA,MAAA,GAAA,CAAA,GAAA,MAAA,iBAAA,MAAA,GAAA,CAAA,QAAA,+BAAA,GAAA,OAAA,uBAAA,QAAA,QAAA,SAAA,CAAA;IAAAC,UAAA,SAAAC,yBAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACL5BE,QAAAC,yBAAA,GAAA,UAAA,CAAA,EAA2B,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA,EAAA,GAAA,MAAA,CAAA,EAAA,GAAA,KAAA,CAAA;AAKfD,QAAAE,oBAAA,GAAA,KAAA,CAAA;AACFF,QAAAG,uBAAA,EAAI,EAAA;AAGRH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAqE,GAAA,MAAA,CAAA,EAAA,GAAA,MAAA,CAAA,EAAA,GAAA,KAAA,CAAA;AAK7DD,QAAAE,oBAAA,IAAA,OAAA,EAAA;AACFF,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAA8F,IAAA,OAAA,EAAA,EAAA,IAAA,KAAA,EAAA;AAGxFD,QAAAE,oBAAA,IAAA,KAAA,EAAA;AACAF,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAqBD,QAAAI,iBAAA,IAAA,YAAA;AAAUJ,QAAAG,uBAAA,EAAI;AAErCH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AACED,QAAAE,oBAAA,IAAA,KAAA,EAAA;AACAF,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAqBD,QAAAI,iBAAA,IAAA,YAAA;AAAUJ,QAAAG,uBAAA,EAAI;AAErCH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AACED,QAAAE,oBAAA,IAAA,KAAA,EAAA;AACAF,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAqBD,QAAAI,iBAAA,IAAA,SAAA;AAAOJ,QAAAG,uBAAA,EAAI;AAElCH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAwFD,QAAAI,iBAAA,IAAA,QAAA;AAAMJ,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;;;;;ADzB5G,MAAOZ,mBAAP;SAAOA;AAAe,GAAA;;;AEE5B,IAAac,uBAAoB,uBAAA;AAA3B,QAAOA,wBAAP,MAAOA,sBAAoB;;;qBAApBA,uBAAoB;EAAA;;UAApBA;IAAoBC,WAAA,CAAA,CAAA,kBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,cAAA,CAAA;IAAAC,UAAA,SAAAC,8BAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACTjCE,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,KAAA;AAEnDD,QAAAE,oBAAA,GAAA,aAAA;AACJF,QAAAG,uBAAA;AAEAH,QAAAC,yBAAA,GAAA,OAAA,CAAA;AACID,QAAAE,oBAAA,GAAA,YAAA,EAAyB,GAAA,eAAA;AAE7BF,QAAAG,uBAAA,EAAM;;;;;;ADAJ,MAAOZ,wBAAP;SAAOA;AAAoB,GAAA;;;AELjC,IAAAa,sBAAiB;;;AEGjB,IAAaC,gBAAa,uBAAA;AAApB,QAAOA,iBAAP,MAAOA,eAAa;IAIxBC,YAAoBC,MAAgB;AAAhB,WAAAA,OAAAA;AAFZ,WAAAC,WAAS,GAAGC,YAAYC,QAAQ;IAGxC;;IAGQC,YAAS;AACf,WAAKC,cAAc;QACjBC,SAAS,KAAKC,SAAQ;;IAE1B;IAEUC,WAAQ;AACd,UAAIC;AACJ,UAAI,OAAOC,iBAAiB,aAAa;AACvCD,gBAAQC,aAAaC,QAAQ,OAAO;;AAEtC,aAAOF;IACT;IAEQF,WAAQ;AACd,YAAME,QAAQ,KAAKD,SAAQ;AAC3B,aAAO,IAAII,YAAY;QACrB,gBAAgB;QAChB,WAAW,GAAGH,KAAK;OACpB;IACH;;IAGFI,aAAU;AACR,WAAKT,UAAS;AACd,aAAO,KAAKJ,KAAKc,IAAI,KAAKb,UAAU,KAAKI,WAAW;IACtD;IAEAU,aAAaC,IAAS;AACpB,WAAKZ,UAAS;AACd,aAAO,KAAKJ,KAAKiB,OAAO,KAAKhB,WAASe,IAAI,KAAKX,WAAW;IAC5D;IAEAa,WAAWC,UAAa;AACtB,WAAKf,UAAS;AACd,aAAO,KAAKJ,KAAKoB,KAAK,KAAKnB,UAAUkB,UAAU,KAAKd,WAAW;IACjE;IAEAgB,UAAUF,UAAa;AACrB,WAAKf,UAAS;AACd,aAAO,KAAKJ,KAAKsB,IAAI,KAAKrB,WAASkB,SAASI,WAAWJ,UAAU,KAAKd,WAAW;IACnF;;;qBAjDWP,gBAAa0B,mBAAAC,UAAA,CAAA;EAAA;;WAAb3B;IAAa4B,SAAb5B,eAAa6B;IAAAC,YAFZ;EAAM,CAAA;AAEd,MAAO9B,iBAAP;SAAOA;AAAa,GAAA;;;;;ADgBN+B,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAAsDD,IAAAE,iBAAA,GAAA,0BAAA;AAAwBF,IAAAG,uBAAA;;;;;AAK9EH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAAyDD,IAAAE,iBAAA,GAAA,0BAAA;AAAwBF,IAAAG,uBAAA;;;;;AAKjFH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAA0DD,IAAAE,iBAAA,GAAA,0BAAA;AAAwBF,IAAAG,uBAAA;;;;;AAKlFH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAA+DD,IAAAE,iBAAA,GAAA,0BAAA;AAAwBF,IAAAG,uBAAA;;;;;AAKvFH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAAwDD,IAAAE,iBAAA,GAAA,0BAAA;AAAwBF,IAAAG,uBAAA;;;ADhCpG,IAAaC,wBAAqB,uBAAA;AAA5B,QAAOA,yBAAP,MAAOA,uBAAqB;IAIhCC,YAAoBC,IAAwBC,eAAsCC,QAAc;AAA5E,WAAAF,KAAAA;AAAwB,WAAAC,gBAAAA;AAAsC,WAAAC,SAAAA;AAFlF,WAAAC,WAAkB;AAIX,WAAAC,OAAO,KAAKJ,GAAGK,MAAM;QAC1BC,QAAQ,CAAC,IAAI,CAACC,WAAWC,QAAQ,CAAC;QAClCC,WAAW,CAAC,IAAI,CAACF,WAAWC,QAAQ,CAAC;QACrCE,iBAAY,CAAC,IAAI,CAACH,WAAWC,QAAQ,CAAC;QACtCG,iBAAiB,CAAC,IAAI,CAACJ,WAAWC,QAAQ,CAAC;QAC3CI,UAAU,CAAC,IAAI,CAACL,WAAWC,QAAQ,CAAC;OACrC;IARiG;IAUlGK,cAAW;AACT,WAAKV,WAAS;AACd,UAAG,CAAC,KAAKC,KAAKU,OAAM;AAClBC,gBAAQC,IAAI,0BAA0B;aACnC;AACH,aAAKf,cAAcgB,WAAW,KAAKb,KAAKc,KAAK,EAAEC,UAC5CC,cAAgB;AACf,eAAKlB,OAAOmB,SAAS,CAAC,mBAAmB,CAAC;QAC5C,GACCC,WAAS;AACRP,kBAAQO,MAAM,yBAAsBA,KAAK;AACzCC,8BAAAA,QAAKC,KAAKF,MAAMA,MAAMG,OAAO;QAC/B,CAAC;;IAGP;IAEAC,YAAYC,OAAa;AACvB,aAAO,KAAKvB,KAAKwB,IAAID,KAAK,GAAGb,SAAS,CAAC,KAAKX;IAC9C;;;qBAjCWL,wBAAqB+B,4BAAAC,WAAA,GAAAD,4BAAAE,aAAA,GAAAF,4BAAAG,MAAA,CAAA;EAAA;;UAArBlC;IAAqBmC,WAAA,CAAA,CAAA,mBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,UAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,UAAA,MAAA,UAAA,GAAA,cAAA,GAAA,CAAA,SAAA,eAAA,GAAA,MAAA,GAAA,CAAA,OAAA,aAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,aAAA,MAAA,aAAA,GAAA,cAAA,GAAA,CAAA,OAAA,iBAAA,GAAA,YAAA,GAAA,CAAA,QAAA,YAAA,mBAAA,iBAAA,MAAA,iBAAA,GAAA,cAAA,GAAA,CAAA,OAAA,mBAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,mBAAA,MAAA,mBAAA,GAAA,cAAA,GAAA,CAAA,OAAA,YAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,YAAA,MAAA,YAAA,GAAA,cAAA,GAAA,CAAA,GAAA,OAAA,cAAA,GAAA,OAAA,GAAA,CAAA,cAAA,sBAAA,GAAA,OAAA,YAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,aAAA,CAAA;IAAAC,UAAA,SAAAC,+BAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACVlC7C,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAaLD,QAAAE,iBAAA,GAAA,cAAA;AAAYF,QAAAG,uBAAA;AACpDH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,IAAA,OAAA,CAAA,EAAA,IAAA,QAAA,CAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA;AAI6BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAC7CH,QAAA+C,oBAAA,IAAA,SAAA,CAAA;AACF/C,QAAAG,uBAAA;AACAH,QAAAgD,qBAAA,IAAAC,qCAAA,GAAA,GAAA,KAAA,EAAA;AACAjD,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AAC0BD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACnDH,QAAA+C,oBAAA,IAAA,SAAA,EAAA;AACF/C,QAAAG,uBAAA;AACAH,QAAAgD,qBAAA,IAAAE,qCAAA,GAAA,GAAA,KAAA,EAAA;AACAlD,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AAC2BD,QAAAE,iBAAA,IAAA,eAAA;AAAUF,QAAAG,uBAAA;AACrDH,QAAA+C,oBAAA,IAAA,SAAA,EAAA;AACF/C,QAAAG,uBAAA;AACAH,QAAAgD,qBAAA,IAAAG,qCAAA,GAAA,GAAA,KAAA,EAAA;AACAnD,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AACgCD,QAAAE,iBAAA,IAAA,qBAAA;AAAmBF,QAAAG,uBAAA;AACnEH,QAAA+C,oBAAA,IAAA,SAAA,EAAA;AACF/C,QAAAG,uBAAA;AACAH,QAAAgD,qBAAA,IAAAI,qCAAA,GAAA,GAAA,KAAA,EAAA;AACApD,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AACyBD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AAC9CH,QAAA+C,oBAAA,IAAA,SAAA,EAAA;AACF/C,QAAAG,uBAAA;AACAH,QAAAgD,qBAAA,IAAAK,qCAAA,GAAA,GAAA,KAAA,EAAA;AAMArD,QAAAC,yBAAA,IAAA,UAAA,EAAA;AAA+BD,QAAAsD,qBAAA,SAAA,SAAAC,0DAAA;AAAA,iBAAST,IAAA3B,YAAA;QAAa,CAAA;AAAEnB,QAAAE,iBAAA,IAAA,SAAA;AAAOF,QAAAG,uBAAA;AAC9DH,QAAAC,yBAAA,IAAA,UAAA,EAAA;AAA+DD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAS,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAS9FH,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACVD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;AA1CjFH,QAAAwD,oBAAA,EAAA;AAAAxD,QAAAyD,qBAAA,aAAAX,IAAApC,IAAA;AAKoBV,QAAAwD,oBAAA,CAAA;AAAAxD,QAAAyD,qBAAA,QAAA,CAAAX,IAAAd,YAAA,QAAA,CAAA;AAKAhC,QAAAwD,oBAAA,CAAA;AAAAxD,QAAAyD,qBAAA,QAAA,CAAAX,IAAAd,YAAA,WAAA,CAAA;AAKAhC,QAAAwD,oBAAA,CAAA;AAAAxD,QAAAyD,qBAAA,QAAA,CAAAX,IAAAd,YAAA,eAAA,CAAA;AAKAhC,QAAAwD,oBAAA,CAAA;AAAAxD,QAAAyD,qBAAA,QAAA,CAAAX,IAAAd,YAAA,iBAAA,CAAA;AAKAhC,QAAAwD,oBAAA,CAAA;AAAAxD,QAAAyD,qBAAA,QAAA,CAAAX,IAAAd,YAAA,UAAA,CAAA;;;;;;ADhCtC,MAAO5B,yBAAP;SAAOA;AAAqB,GAAA;;;AGPlC,IAAAsD,sBAAiB;;;AEGjB,IAAaC,gBAAa,uBAAA;AAApB,QAAOA,iBAAP,MAAOA,eAAa;IAIxBC,YAAoBC,MAAgB;AAAhB,WAAAA,OAAAA;AAFZ,WAAAC,WAAS,GAAGC,YAAYC,QAAQ;IAGxC;;IAGQC,YAAS;AACf,WAAKC,cAAc;QACjBC,SAAS,KAAKC,SAAQ;;IAE1B;IAEUC,WAAQ;AACd,UAAIC;AACJ,UAAI,OAAOC,iBAAiB,aAAa;AACvCD,gBAAQC,aAAaC,QAAQ,OAAO;;AAEtC,aAAOF;IACT;IAEQF,WAAQ;AACd,YAAME,QAAQ,KAAKD,SAAQ;AAC3B,aAAO,IAAII,YAAY;QACrB,gBAAgB;QAChB,WAAW,GAAGH,KAAK;OACpB;IACH;;IAGFI,aAAU;AACR,WAAKT,UAAS;AACd,aAAO,KAAKJ,KAAKc,IAAI,KAAKb,UAAU,KAAKI,WAAW;IACtD;IAEAU,aAAaC,IAAS;AACpB,WAAKZ,UAAS;AACd,aAAO,KAAKJ,KAAKiB,OAAO,KAAKhB,WAASe,IAAI,KAAKX,WAAW;IAC5D;IAEAa,WAAWC,UAAa;AACtB,aAAO,KAAKnB,KAAKoB,KAAK,KAAKnB,UAAUkB,QAAQ;IAC/C;IAEAE,UAAUF,UAAa;AACrB,WAAKf,UAAS;AACd,aAAO,KAAKJ,KAAKsB,IAAI,KAAKrB,WAASkB,SAASI,WAAWJ,UAAU,KAAKd,WAAW;IACnF;;;qBAhDWP,gBAAa0B,mBAAAC,UAAA,CAAA;EAAA;;WAAb3B;IAAa4B,SAAb5B,eAAa6B;IAAAC,YAFZ;EAAM,CAAA;AAEd,MAAO9B,iBAAP;SAAOA;AAAa,GAAA;;;;;ADeN+B,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAAsDD,IAAAE,iBAAA,GAAA,0BAAA;AAAwBF,IAAAG,uBAAA;;;;;AAK9EH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAAqDD,IAAAE,iBAAA,GAAA,yBAAA;AAAuBF,IAAAG,uBAAA;;;;;AAK5EH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAA0DD,IAAAE,iBAAA,GAAA,iCAAA;AAA4BF,IAAAG,uBAAA;;;;;AAKtFH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAAqDD,IAAAE,iBAAA,GAAA,yBAAA;AAAuBF,IAAAG,uBAAA;;;;;AAK5EH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAAkDD,IAAAE,iBAAA,GAAA,oCAAA;AAA+BF,IAAAG,uBAAA;;;;;AAKjFH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAAyDD,IAAAE,iBAAA,GAAA,6BAAA;AAA2BF,IAAAG,uBAAA;;;;;AAKpFH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAAyDD,IAAAE,iBAAA,GAAA,6BAAA;AAA2BF,IAAAG,uBAAA;;;ADzCxG,IAAaC,wBAAqB,uBAAA;AAA5B,QAAOA,yBAAP,MAAOA,uBAAqB;IAGhCC,YAAoBC,IAAwBC,eAAsCC,QAAc;AAA5E,WAAAF,KAAAA;AAAwB,WAAAC,gBAAAA;AAAsC,WAAAC,SAAAA;AAFlF,WAAAC,WAAkB;AAIX,WAAAC,OAAO,KAAKJ,GAAGK,MAAM;QAC1BC,QAAQ,CAAC,IAAI,CAACC,WAAWC,QAAQ,CAAC;QAClCC,OAAO,CAAC,IAAI,CAACF,WAAWC,UAAUD,WAAWG,KAAK,CAAC;QACnDC,iBAAY,CAAC,IAAI,CAACJ,WAAWC,QAAQ,CAAC;QACtCI,OAAO,CAAC,IAAI,CAACL,WAAWC,QAAQ,CAAC;QACjCK,IAAI,CAAC,IAAI,CAACN,WAAWC,QAAQ,CAAC;QAC9BM,WAAW,CAAC,IAAI,CAACP,WAAWC,QAAQ,CAAC;QACrCO,WAAW,CAAC,IAAI,CAACR,WAAWC,QAAQ,CAAC;OACtC;IAViG;IAYlGQ,cAAW;AACT,WAAKb,WAAS;AACd,UAAG,CAAC,KAAKC,KAAKa,OAAM;AAClBC,gBAAQC,IAAI,0BAA0B;aACnC;AACH,aAAKlB,cAAcmB,WAAW,KAAKhB,KAAKiB,KAAK,EAAEC,UAC5CC,cAAgB;AACf,eAAKrB,OAAOsB,SAAS,CAAC,mBAAmB,CAAC;QAC5C,GACCC,WAAS;AACRP,kBAAQO,MAAM,yBAAsBA,KAAK;AACzCC,8BAAAA,QAAKC,KAAKF,MAAMA,MAAMG,OAAO;QAC/B,CAAC;;IAGP;IAEAC,YAAYC,OAAa;AACvB,aAAO,KAAK1B,KAAK2B,IAAID,KAAK,GAAGb,SAAS,CAAC,KAAKd;IAC9C;;;qBAlCWL,wBAAqBkC,4BAAAC,WAAA,GAAAD,4BAAAE,aAAA,GAAAF,4BAAAG,MAAA,CAAA;EAAA;;UAArBrC;IAAqBsC,WAAA,CAAA,CAAA,mBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,UAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,UAAA,MAAA,UAAA,GAAA,cAAA,GAAA,CAAA,SAAA,eAAA,GAAA,MAAA,GAAA,CAAA,OAAA,SAAA,GAAA,YAAA,GAAA,CAAA,QAAA,SAAA,mBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,iBAAA,GAAA,YAAA,GAAA,CAAA,QAAA,YAAA,mBAAA,iBAAA,MAAA,iBAAA,GAAA,cAAA,GAAA,CAAA,OAAA,SAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,SAAA,MAAA,SAAA,GAAA,cAAA,GAAA,CAAA,OAAA,MAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,MAAA,MAAA,MAAA,GAAA,cAAA,GAAA,CAAA,OAAA,aAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,aAAA,MAAA,aAAA,GAAA,cAAA,GAAA,CAAA,OAAA,aAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,aAAA,MAAA,aAAA,GAAA,gBAAA,gBAAA,GAAA,CAAA,GAAA,OAAA,cAAA,GAAA,OAAA,GAAA,CAAA,cAAA,sBAAA,GAAA,OAAA,YAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,aAAA,CAAA;IAAAC,UAAA,SAAAC,+BAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACVlChD,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAYLD,QAAAE,iBAAA,GAAA,cAAA;AAAYF,QAAAG,uBAAA;AACpDH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,IAAA,OAAA,CAAA,EAAA,IAAA,QAAA,CAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA;AAI6BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAC7CH,QAAAkD,oBAAA,IAAA,SAAA,CAAA;AACFlD,QAAAG,uBAAA;AACAH,QAAAmD,qBAAA,IAAAC,qCAAA,GAAA,GAAA,KAAA,EAAA;AACApD,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AACsBD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AAC3CH,QAAAkD,oBAAA,IAAA,SAAA,EAAA;AACFlD,QAAAG,uBAAA;AACAH,QAAAmD,qBAAA,IAAAE,qCAAA,GAAA,GAAA,KAAA,EAAA;AACArD,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,SAAA,EAAA;AAC2BD,QAAAE,iBAAA,IAAA,eAAA;AAAUF,QAAAG,uBAAA;AACrDH,QAAAkD,oBAAA,IAAA,SAAA,EAAA;AACFlD,QAAAG,uBAAA;AACAH,QAAAmD,qBAAA,IAAAG,qCAAA,GAAA,GAAA,KAAA,EAAA;AACAtD,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,SAAA,EAAA;AACsBD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AAC3CH,QAAAkD,oBAAA,IAAA,SAAA,EAAA;AACFlD,QAAAG,uBAAA;AACAH,QAAAmD,qBAAA,IAAAI,qCAAA,GAAA,GAAA,KAAA,EAAA;AACAvD,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,SAAA,EAAA;AACmBD,QAAAE,iBAAA,IAAA,iBAAA;AAAYF,QAAAG,uBAAA;AAC/CH,QAAAkD,oBAAA,IAAA,SAAA,EAAA;AACFlD,QAAAG,uBAAA;AACAH,QAAAmD,qBAAA,IAAAK,qCAAA,GAAA,GAAA,KAAA,EAAA;AACAxD,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,SAAA,EAAA;AAC0BD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACnDH,QAAAkD,oBAAA,IAAA,SAAA,EAAA;AACFlD,QAAAG,uBAAA;AACAH,QAAAmD,qBAAA,IAAAM,qCAAA,GAAA,GAAA,KAAA,EAAA;AACAzD,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,SAAA,EAAA;AAC0BD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACnDH,QAAAkD,oBAAA,IAAA,SAAA,EAAA;AACFlD,QAAAG,uBAAA;AACAH,QAAAmD,qBAAA,IAAAO,qCAAA,GAAA,GAAA,KAAA,EAAA;AACA1D,QAAAC,yBAAA,IAAA,UAAA,EAAA;AAA+BD,QAAA2D,qBAAA,SAAA,SAAAC,0DAAA;AAAA,iBAASX,IAAA3B,YAAA;QAAa,CAAA;AAAEtB,QAAAE,iBAAA,IAAA,SAAA;AAAOF,QAAAG,uBAAA;AAC9DH,QAAAC,yBAAA,IAAA,UAAA,EAAA;AAAgED,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAS,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAW/FH,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACVD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;AAjDjFH,QAAA6D,oBAAA,EAAA;AAAA7D,QAAA8D,qBAAA,aAAAb,IAAAvC,IAAA;AAKoBV,QAAA6D,oBAAA,CAAA;AAAA7D,QAAA8D,qBAAA,QAAA,CAAAb,IAAAd,YAAA,QAAA,CAAA;AAKAnC,QAAA6D,oBAAA,CAAA;AAAA7D,QAAA8D,qBAAA,QAAA,CAAAb,IAAAd,YAAA,OAAA,CAAA;AAKAnC,QAAA6D,oBAAA,CAAA;AAAA7D,QAAA8D,qBAAA,QAAA,CAAAb,IAAAd,YAAA,eAAA,CAAA;AAKAnC,QAAA6D,oBAAA,CAAA;AAAA7D,QAAA8D,qBAAA,QAAA,CAAAb,IAAAd,YAAA,OAAA,CAAA;AAKAnC,QAAA6D,oBAAA,CAAA;AAAA7D,QAAA8D,qBAAA,QAAA,CAAAb,IAAAd,YAAA,IAAA,CAAA;AAKAnC,QAAA6D,oBAAA,CAAA;AAAA7D,QAAA8D,qBAAA,QAAA,CAAAb,IAAAd,YAAA,WAAA,CAAA;AAKAnC,QAAA6D,oBAAA,CAAA;AAAA7D,QAAA8D,qBAAA,QAAA,CAAAb,IAAAd,YAAA,WAAA,CAAA;;;;;;ADzCtC,MAAO/B,yBAAP;SAAOA;AAAqB,GAAA;;;AGPlC,IAAA2D,sBAAiB;;;AEKjB,IAAaC,eAAY,uBAAA;AAAnB,QAAOA,gBAAP,MAAOA,cAAY;IAIrBC,YAAoBC,MAAgB;AAAhB,WAAAA,OAAAA;AAFZ,WAAAC,WAAS,GAAGC,YAAYC,QAAQ;IAGxC;;IAGQC,YAAS;AACf,WAAKC,cAAc;QACjBC,SAAS,KAAKC,SAAQ;;IAE1B;IAEUC,WAAQ;AACd,UAAIC;AACJ,UAAI,OAAOC,iBAAiB,aAAa;AACvCD,gBAAQC,aAAaC,QAAQ,OAAO;;AAEtC,aAAOF;IACT;IAEQF,WAAQ;AACd,YAAME,QAAQ,KAAKD,SAAQ;AAC3B,aAAO,IAAII,YAAY;QACrB,gBAAgB;QAChB,WAAW,GAAGH,KAAK;OACpB;IACH;;IAGFI,YAAS;AACP,WAAKT,UAAS;AACd,aAAO,KAAKJ,KAAKc,IAAI,KAAKb,UAAU,KAAKI,WAAW;IACtD;IAEAU,YAAYC,IAAS;AACnB,WAAKZ,UAAS;AACd,aAAO,KAAKJ,KAAKiB,OAAO,KAAKhB,WAASe,IAAI,KAAKX,WAAW;IAC5D;IAEAa,UAAUC,UAAa;AACrB,WAAKf,UAAS;AACd,aAAO,KAAKJ,KAAKoB,KAAK,KAAKnB,UAAUkB,UAAU,KAAKd,WAAW;IACjE;IAEAgB,SAASF,UAAa;AACpB,WAAKf,UAAS;AACd,aAAO,KAAKJ,KAAKsB,IAAI,KAAKrB,WAASkB,SAASI,UAAUJ,UAAU,KAAKd,WAAW;IAClF;;;qBAjDSP,eAAY0B,mBAAAC,UAAA,CAAA;EAAA;;WAAZ3B;IAAY4B,SAAZ5B,cAAY6B;IAAAC,YAHX;EAAM,CAAA;AAGd,MAAO9B,gBAAP;SAAOA;AAAY,GAAA;;;;;ADaP+B,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAAsDD,IAAAE,iBAAA,GAAA,0BAAA;AAAwBF,IAAAG,uBAAA;;;;;AAK9EH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAAyDD,IAAAE,iBAAA,GAAA,0BAAA;AAAwBF,IAAAG,uBAAA;;;;;AAKjFH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAA0DD,IAAAE,iBAAA,GAAA,wCAAA;AAAmCF,IAAAG,uBAAA;;;ADrB/G,IAAaC,uBAAoB,uBAAA;AAA3B,QAAOA,wBAAP,MAAOA,sBAAoB;IAG/BC,YAAoBC,IAAwBC,cAAoCC,QAAc;AAA1E,WAAAF,KAAAA;AAAwB,WAAAC,eAAAA;AAAoC,WAAAC,SAAAA;AAFhF,WAAAC,WAAkB;AAIX,WAAAC,OAAO,KAAKJ,GAAGK,MAAM;QAC1BC,QAAQ,CAAC,IAAI,CAACC,WAAWC,QAAQ,CAAC;QAClCC,WAAW,CAAC,IAAI,CAACF,WAAWC,QAAQ,CAAC;QACrCE,YAAY,CAAC,IAAI,CAACH,WAAWC,QAAQ,CAAC;OACvC;IAN+F;IAQhGG,aAAU;AACR,WAAKR,WAAS;AACd,UAAG,CAAC,KAAKC,KAAKQ,OAAM;AAClBC,gBAAQC,IAAI,0BAA0B;aACnC;AACH,aAAKb,aAAac,UAAU,KAAKX,KAAKY,KAAK,EAAEC,UAC1CC,cAAgB;AACf,eAAKhB,OAAOiB,SAAS,CAAC,kBAAkB,CAAC;QAC3C,GACCC,WAAS;AACRP,kBAAQO,MAAM,yBAAsBA,KAAK;AACzCC,8BAAAA,QAAKC,KAAKF,MAAMA,MAAMG,OAAO;QAC/B,CAAC;;IAGP;IAEAC,YAAYC,OAAa;AACvB,aAAO,KAAKrB,KAAKsB,IAAID,KAAK,GAAGb,SAAS,CAAC,KAAKT;IAC9C;;;qBA9BWL,uBAAoB6B,4BAAAC,WAAA,GAAAD,4BAAAE,YAAA,GAAAF,4BAAAG,MAAA,CAAA;EAAA;;UAApBhC;IAAoBiC,WAAA,CAAA,CAAA,kBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,UAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,UAAA,MAAA,UAAA,GAAA,cAAA,GAAA,CAAA,SAAA,eAAA,GAAA,MAAA,GAAA,CAAA,OAAA,aAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,aAAA,MAAA,aAAA,GAAA,cAAA,GAAA,CAAA,OAAA,cAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,cAAA,MAAA,cAAA,GAAA,cAAA,GAAA,CAAA,GAAA,OAAA,cAAA,GAAA,OAAA,GAAA,CAAA,cAAA,qBAAA,GAAA,OAAA,YAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,aAAA,CAAA;IAAAC,UAAA,SAAAC,8BAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACVjC3C,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAYPD,QAAAE,iBAAA,GAAA,aAAA;AAAWF,QAAAG,uBAAA;AACnDH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,IAAA,OAAA,CAAA,EAAA,IAAA,QAAA,CAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA;AAI6BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAC7CH,QAAA6C,oBAAA,IAAA,SAAA,CAAA;AACF7C,QAAAG,uBAAA;AACAH,QAAA8C,qBAAA,IAAAC,oCAAA,GAAA,GAAA,KAAA,EAAA;AACA/C,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AAC0BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAChDH,QAAA6C,oBAAA,IAAA,SAAA,EAAA;AACF7C,QAAAG,uBAAA;AACAH,QAAA8C,qBAAA,IAAAE,oCAAA,GAAA,GAAA,KAAA,EAAA;AACAhD,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AAC2BD,QAAAE,iBAAA,IAAA,eAAA;AAAUF,QAAAG,uBAAA;AACrDH,QAAA6C,oBAAA,IAAA,SAAA,EAAA;AACF7C,QAAAG,uBAAA;AACAH,QAAA8C,qBAAA,IAAAG,oCAAA,GAAA,GAAA,KAAA,EAAA;AACAjD,QAAAC,yBAAA,IAAA,UAAA,EAAA;AAA+BD,QAAAkD,qBAAA,SAAA,SAAAC,yDAAA;AAAA,iBAASP,IAAA3B,WAAA;QAAY,CAAA;AAAEjB,QAAAE,iBAAA,IAAA,SAAA;AAAOF,QAAAG,uBAAA;AAC7DH,QAAAC,yBAAA,IAAA,UAAA,EAAA;AAA8DD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAS,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAS3FH,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACVD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;AA3BnFH,QAAAoD,oBAAA,EAAA;AAAApD,QAAAqD,qBAAA,aAAAT,IAAAlC,IAAA;AAKoBV,QAAAoD,oBAAA,CAAA;AAAApD,QAAAqD,qBAAA,QAAA,CAAAT,IAAAd,YAAA,QAAA,CAAA;AAKA9B,QAAAoD,oBAAA,CAAA;AAAApD,QAAAqD,qBAAA,QAAA,CAAAT,IAAAd,YAAA,WAAA,CAAA;AAKA9B,QAAAoD,oBAAA,CAAA;AAAApD,QAAAqD,qBAAA,QAAA,CAAAT,IAAAd,YAAA,YAAA,CAAA;;;;;;ADrBpC,MAAO1B,wBAAP;SAAOA;AAAoB,GAAA;;;AGPjC,IAAAkD,sBAAiB;;;AEIjB,IAAaC,kBAAe,uBAAA;AAAtB,QAAOA,mBAAP,MAAOA,iBAAe;IAI1BC,YAAoBC,MAAgB;AAAhB,WAAAA,OAAAA;AAFZ,WAAAC,WAAS,GAAGC,YAAYC,QAAQ;IAGxC;;IAGQC,YAAS;AACf,WAAKC,cAAc;QACjBC,SAAS,KAAKC,SAAQ;;IAE1B;IAEUC,WAAQ;AACd,UAAIC;AACJ,UAAI,OAAOC,iBAAiB,aAAa;AACvCD,gBAAQC,aAAaC,QAAQ,OAAO;;AAEtC,aAAOF;IACT;IAEQF,WAAQ;AACd,YAAME,QAAQ,KAAKD,SAAQ;AAC3B,aAAO,IAAII,YAAY;QACrB,gBAAgB;QAChB,WAAW,GAAGH,KAAK;OACpB;IACH;;IAGFI,gBAAa;AACX,WAAKT,UAAS;AACd,aAAO,KAAKJ,KAAKc,IAAI,KAAKb,UAAU,KAAKI,WAAW;IACtD;IAEAU,eAAeC,IAAS;AACtB,WAAKZ,UAAS;AACd,aAAO,KAAKJ,KAAKiB,OAAO,KAAKhB,WAASe,IAAI,KAAKX,WAAW;IAC5D;IAEAa,aAAaC,UAAa;AACxB,WAAKf,UAAS;AACd,aAAO,KAAKJ,KAAKoB,KAAK,KAAKnB,UAAUkB,UAAU,KAAKd,WAAW;IACjE;IAEAgB,YAAYF,UAAa;AACvB,WAAKf,UAAS;AACd,aAAO,KAAKJ,KAAKsB,IAAI,KAAKrB,WAASkB,SAASI,aAAaJ,UAAU,KAAKd,WAAW;IACrF;;;qBAjDWP,kBAAe0B,mBAAAC,UAAA,CAAA;EAAA;;WAAf3B;IAAe4B,SAAf5B,iBAAe6B;IAAAC,YAFd;EAAM,CAAA;AAEd,MAAO9B,mBAAP;SAAOA;AAAe,GAAA;;;;;ADcV+B,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAAsDD,IAAAE,iBAAA,GAAA,0BAAA;AAAwBF,IAAAG,uBAAA;;;;;AAK9EH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAAyDD,IAAAE,iBAAA,GAAA,0BAAA;AAAwBF,IAAAG,uBAAA;;;;;AAKjFH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAAqDD,IAAAE,iBAAA,GAAA,0BAAA;AAAwBF,IAAAG,uBAAA;;;;;AAK7EH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAA0DD,IAAAE,iBAAA,GAAA,0BAAA;AAAwBF,IAAAG,uBAAA;;;;;AAKlFH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAAyDD,IAAAE,iBAAA,GAAA,0BAAA;AAAwBF,IAAAG,uBAAA;;;;;AAKjFH,IAAAC,yBAAA,GAAA,KAAA,EAAA;AAAwDD,IAAAE,iBAAA,GAAA,0BAAA;AAAwBF,IAAAG,uBAAA;;;ADpClG,IAAaC,2BAAwB,uBAAA;AAA/B,QAAOA,4BAAP,MAAOA,0BAAwB;IAInCC,YAAoBC,IAAwBC,iBAA0CC,QAAc;AAAhF,WAAAF,KAAAA;AAAwB,WAAAC,kBAAAA;AAA0C,WAAAC,SAAAA;AAFtF,WAAAC,WAAkB;AAIX,WAAAC,OAAO,KAAKJ,GAAGK,MAAM;QAC1BC,QAAQ,CAAC,IAAI,CAACC,WAAWC,QAAQ,CAAC;QAClCC,WAAW,CAAC,IAAI,CAACF,WAAWC,QAAQ,CAAC;QACrCE,OAAO,CAAC,IAAI,CAACH,WAAWC,UAAUD,WAAWI,KAAK,CAAC;QACnDC,iBAAY,CAAC,IAAI,CAACL,WAAWC,QAAQ,CAAC;QACtCK,WAAW,CAAC,IAAI,CAACN,WAAWC,QAAQ,CAAC;QACrCM,UAAU,CAAC,IAAI,CAACP,WAAWC,QAAQ,CAAC;OACrC;IATqG;IAWtGO,gBAAa;AACX,WAAKZ,WAAS;AACd,UAAG,CAAC,KAAKC,KAAKY,OAAM;AAClBC,gBAAQC,IAAI,0BAA0B;aACnC;AACH,aAAKjB,gBAAgBkB,aAAa,KAAKf,KAAKgB,KAAK,EAAEC,UAChDC,cAAgB;AACf,eAAKpB,OAAOqB,SAAS,CAAC,sBAAsB,CAAC;QAC/C,GACCC,WAAS;AACRP,kBAAQO,MAAM,yBAAsBA,KAAK;AACzCC,8BAAAA,QAAKC,KAAKF,MAAMA,MAAMG,OAAO;QAC/B,CAAC;;IAGP;IAEAC,YAAYC,OAAa;AACvB,aAAO,KAAKzB,KAAK0B,IAAID,KAAK,GAAGb,SAAS,CAAC,KAAKb;IAC9C;;;qBAlCWL,2BAAwBiC,4BAAAC,WAAA,GAAAD,4BAAAE,eAAA,GAAAF,4BAAAG,MAAA,CAAA;EAAA;;UAAxBpC;IAAwBqC,WAAA,CAAA,CAAA,sBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,UAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,UAAA,MAAA,UAAA,GAAA,cAAA,GAAA,CAAA,SAAA,eAAA,GAAA,MAAA,GAAA,CAAA,OAAA,aAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,aAAA,MAAA,aAAA,GAAA,cAAA,GAAA,CAAA,OAAA,SAAA,GAAA,YAAA,GAAA,CAAA,QAAA,SAAA,mBAAA,SAAA,MAAA,SAAA,GAAA,cAAA,GAAA,CAAA,OAAA,iBAAA,GAAA,YAAA,GAAA,CAAA,QAAA,YAAA,mBAAA,iBAAA,MAAA,iBAAA,GAAA,cAAA,GAAA,CAAA,OAAA,aAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,aAAA,MAAA,aAAA,GAAA,cAAA,GAAA,CAAA,OAAA,YAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,YAAA,MAAA,YAAA,GAAA,cAAA,GAAA,CAAA,GAAA,OAAA,cAAA,GAAA,OAAA,GAAA,CAAA,cAAA,yBAAA,GAAA,OAAA,YAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,aAAA,CAAA;IAAAC,UAAA,SAAAC,kCAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACVrC/C,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAYPD,QAAAE,iBAAA,GAAA,gBAAA;AAAcF,QAAAG,uBAAA;AACtDH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,IAAA,OAAA,CAAA,EAAA,IAAA,QAAA,CAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA;AAI6BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAC7CH,QAAAiD,oBAAA,IAAA,SAAA,CAAA;AACFjD,QAAAG,uBAAA;AACAH,QAAAkD,qBAAA,IAAAC,wCAAA,GAAA,GAAA,KAAA,EAAA;AACAnD,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AAC0BD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACnDH,QAAAiD,oBAAA,IAAA,SAAA,EAAA;AACFjD,QAAAG,uBAAA;AACAH,QAAAkD,qBAAA,IAAAE,wCAAA,GAAA,GAAA,KAAA,EAAA;AACApD,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AACsBD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AAC3CH,QAAAiD,oBAAA,IAAA,SAAA,EAAA;AACFjD,QAAAG,uBAAA;AACAH,QAAAkD,qBAAA,IAAAG,wCAAA,GAAA,GAAA,KAAA,EAAA;AACArD,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AAC2BD,QAAAE,iBAAA,IAAA,eAAA;AAAUF,QAAAG,uBAAA;AACrDH,QAAAiD,oBAAA,IAAA,SAAA,EAAA;AACFjD,QAAAG,uBAAA;AACAH,QAAAkD,qBAAA,IAAAI,wCAAA,GAAA,GAAA,KAAA,EAAA;AACAtD,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AAC0BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAChDH,QAAAiD,oBAAA,IAAA,SAAA,EAAA;AACFjD,QAAAG,uBAAA;AACAH,QAAAkD,qBAAA,IAAAK,wCAAA,GAAA,GAAA,KAAA,EAAA;AACAvD,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AACyBD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AAC9CH,QAAAiD,oBAAA,IAAA,SAAA,EAAA;AACFjD,QAAAG,uBAAA;AACAH,QAAAkD,qBAAA,IAAAM,wCAAA,GAAA,GAAA,KAAA,EAAA;AACAxD,QAAAC,yBAAA,IAAA,UAAA,EAAA;AAA+BD,QAAAyD,qBAAA,SAAA,SAAAC,6DAAA;AAAA,iBAASV,IAAA3B,cAAA;QAAe,CAAA;AAAErB,QAAAE,iBAAA,IAAA,SAAA;AAAOF,QAAAG,uBAAA;AAChEH,QAAAC,yBAAA,IAAA,UAAA,EAAA;AAAmED,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAS,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAShGH,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACVD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;AA1CnFH,QAAA2D,oBAAA,EAAA;AAAA3D,QAAA4D,qBAAA,aAAAZ,IAAAtC,IAAA;AAKoBV,QAAA2D,oBAAA,CAAA;AAAA3D,QAAA4D,qBAAA,QAAA,CAAAZ,IAAAd,YAAA,QAAA,CAAA;AAKAlC,QAAA2D,oBAAA,CAAA;AAAA3D,QAAA4D,qBAAA,QAAA,CAAAZ,IAAAd,YAAA,WAAA,CAAA;AAKAlC,QAAA2D,oBAAA,CAAA;AAAA3D,QAAA4D,qBAAA,QAAA,CAAAZ,IAAAd,YAAA,OAAA,CAAA;AAKAlC,QAAA2D,oBAAA,CAAA;AAAA3D,QAAA4D,qBAAA,QAAA,CAAAZ,IAAAd,YAAA,eAAA,CAAA;AAKAlC,QAAA2D,oBAAA,CAAA;AAAA3D,QAAA4D,qBAAA,QAAA,CAAAZ,IAAAd,YAAA,WAAA,CAAA;AAKAlC,QAAA2D,oBAAA,CAAA;AAAA3D,QAAA4D,qBAAA,QAAA,CAAAZ,IAAAd,YAAA,UAAA,CAAA;;;;;;ADpCpC,MAAO9B,4BAAP;SAAOA;AAAwB,GAAA;;;AGNrC,IAAAyD,sBAAiB;;;;ACwBeC,IAAAC,yBAAA,GAAA,OAAA,EAAkD,GAAA,IAAA,EAAA,GAAA,MAAA,CAAA;AAEdD,IAAAE,iBAAA,CAAA;AAAiBF,IAAAG,uBAAA;AAC7CH,IAAAC,yBAAA,GAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,CAAA;AAAoBF,IAAAG,uBAAA;AAChDH,IAAAC,yBAAA,GAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,CAAA;AAAkBF,IAAAG,uBAAA;AAC9CH,IAAAC,yBAAA,GAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,CAAA;AAA0BF,IAAAG,uBAAA;AACtDH,IAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,EAAA;AAAmBF,IAAAG,uBAAA;AAC/CH,IAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,EAAA;AAAoBF,IAAAG,uBAAA;AAChDH,IAAAC,yBAAA,IAAA,MAAA,CAAA,EAA4B,IAAA,UAAA,EAAA;AACQD,IAAAI,qBAAA,SAAA,SAAAC,iEAAA;AAAA,YAAAC,cAAAC,wBAAAC,GAAA;AAAA,YAAAC,YAAAH,YAAAI;AAAA,YAAAC,SAAAC,wBAAA;AAAA,aAASC,sBAAAF,OAAAG,aAAAL,SAAA,CAAoB;IAAA,CAAA;AAAET,IAAAE,iBAAA,IAAA,GAAA;AAACF,IAAAG,uBAAA;AAClEH,IAAAC,yBAAA,IAAA,UAAA,EAAA;AAA+BD,IAAAI,qBAAA,SAAA,SAAAW,iEAAA;AAAA,YAAAT,cAAAC,wBAAAC,GAAA;AAAA,YAAAC,YAAAH,YAAAI;AAAA,YAAAM,SAAAJ,wBAAA;AAAA,aAASC,sBAAAG,OAAAC,eAAAR,UAAAS,SAAA,CAAgC;IAAA,CAAA;AAAElB,IAAAE,iBAAA,IAAA,GAAA;AAACF,IAAAG,uBAAA,EAAS,EAAA,EAAA;;;;AAR1DH,IAAAmB,oBAAA,CAAA;AAAAnB,IAAAoB,4BAAAX,UAAAY,MAAA;AACArB,IAAAmB,oBAAA,CAAA;AAAAnB,IAAAoB,4BAAAX,UAAAa,SAAA;AACAtB,IAAAmB,oBAAA,CAAA;AAAAnB,IAAAoB,4BAAAX,UAAAc,OAAA;AACAvB,IAAAmB,oBAAA,CAAA;AAAAnB,IAAAoB,4BAAAX,UAAAe,eAAA;AACAxB,IAAAmB,oBAAA,CAAA;AAAAnB,IAAAoB,4BAAAX,UAAAgB,QAAA;AACAzB,IAAAmB,oBAAA,CAAA;AAAAnB,IAAAoB,4BAAAX,UAAAiB,SAAA;;;ADvBpE,IAAaC,sBAAmB,uBAAA;AAA1B,QAAOA,uBAAP,MAAOA,qBAAmB;IAI9BC,YAAoBC,eAAsCC,QAAc;AAApD,WAAAD,gBAAAA;AAAsC,WAAAC,SAAAA;AACxD,WAAKC,cAAc,CAAA;IACrB;IAEAC,kBAAe;AACb,WAAKC,gBAAe;IACtB;IAEAA,kBAAe;AACb,WAAKC,WAAU;IACjB;IAEAA,aAAU;AACR,WAAKL,cAAcK,WAAU,EAAGC,UAAUC,SAAM;AAC9CC,gBAAQC,IAAIF,GAAG;AACf,aAAKL,cAAcK;MACrB,CAAC;IACH;IAEAnB,eAAesB,IAAU;AACvBC,0BAAAA,QAAKC,KAAK;QACRC,OAAO;QACPC,MAAM;QACNC,MAAM;QACNC,kBAAkB;QAClBC,oBAAoB;QACpBC,mBAAmB;QACnBC,mBAAmB;OACpB,EAAEC,KAAMC,YAAU;AACjB,YAAIA,OAAOC,aAAa;AACtB,eAAKtB,cAAcuB,aAAab,EAAE,EAAEJ,UAAUC,SAAM;AAClD,iBAAKF,WAAU;UACjB,CAAC;AACDM,8BAAAA,QAAKC,KAAK;YACRC,OAAO;YACPE,MAAM;WACP;;MAEL,CAAC;IACH;IAEA9B,aAAauC,QAAW;AACtB,WAAKvB,OAAOwB,SAAS,CAAC,sBAAsB,GAAG;QAACC,OAAO;UAACF;QAAM;MAAC,CAAC;IAClE;;;qBA/CW1B,sBAAmB6B,4BAAAC,aAAA,GAAAD,4BAAAE,MAAA,CAAA;EAAA;;UAAnB/B;IAAmBgC,WAAA,CAAA,CAAA,aAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,SAAA,eAAA,QAAA,gBAAA,GAAA,oBAAA,SAAA,iBAAA,KAAA,GAAA,CAAA,GAAA,aAAA,MAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,QAAA,wBAAA,GAAA,OAAA,YAAA,GAAA,CAAA,QAAA,oBAAA,GAAA,OAAA,YAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,OAAA,eAAA,GAAA,OAAA,GAAA,CAAA,GAAA,OAAA,cAAA,GAAA,OAAA,CAAA;IAAAC,UAAA,SAAAC,6BAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACZhCjE,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAYCD,QAAAE,iBAAA,GAAA,SAAA;AAAOF,QAAAG,uBAAA;AAC/CH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,IAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA,EAAA,IAAA,SAAA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,MAAA,CAAA;AAK8BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAClCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACrCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,SAAA;AAAOF,QAAAG,uBAAA;AACnCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,qBAAA;AAAmBF,QAAAG,uBAAA;AAC/CH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AACjCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAClCH,QAAAmE,oBAAA,IAAA,MAAA,CAAA;AACJnE,QAAAG,uBAAA,EAAK;AAETH,QAAAoE,qBAAA,IAAAC,uCAAA,IAAA,GAAA,SAAA,CAAA;AAcJrE,QAAAG,uBAAA,EAAQ,EAAA;AAGhBH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAsDD,QAAAE,iBAAA,IAAA,cAAA;AAAYF,QAAAG,uBAAA;AAClEH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAkDD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;AAK5EH,QAAAmE,oBAAA,IAAA,IAAA,EAAI,IAAA,IAAA;AAGJnE,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACZD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;AA3B7CH,QAAAmB,oBAAA,EAAA;AAAAnB,QAAAsE,qBAAA,WAAAJ,IAAAnC,YAAAwC,OAAA;;;;;;ADhBpD,MAAO5C,uBAAP;SAAOA;AAAmB,GAAA;;;AERhC,IAAA6C,sBAAiB;;;;ACiBeC,IAAAC,yBAAA,GAAA,OAAA,EAAkD,GAAA,IAAA,EAAA,GAAA,MAAA,CAAA;AAElBD,IAAAE,iBAAA,CAAA;AAAiBF,IAAAG,uBAAA;AAC7CH,IAAAC,yBAAA,GAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,CAAA;AAAgBF,IAAAG,uBAAA;AAC5CH,IAAAC,yBAAA,GAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,CAAA;AAAoBF,IAAAG,uBAAA;AAChDH,IAAAC,yBAAA,GAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,CAAA;AAAoBF,IAAAG,uBAAA;AAChDH,IAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,EAAA;AAAgBF,IAAAG,uBAAA;AAC5CH,IAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,EAAA;AAAaF,IAAAG,uBAAA;AACzCH,IAAAC,yBAAA,IAAA,MAAA,CAAA,EAA4B,IAAA,UAAA,EAAA;AACMD,IAAAI,qBAAA,SAAA,SAAAC,iEAAA;AAAA,YAAAC,cAAAC,wBAAAC,GAAA;AAAA,YAAAC,YAAAH,YAAAI;AAAA,YAAAC,SAAAC,wBAAA;AAAA,aAASC,sBAAAF,OAAAG,aAAAL,SAAA,CAAoB;IAAA,CAAA;AAAET,IAAAE,iBAAA,IAAA,GAAA;AAACF,IAAAG,uBAAA;AAChEH,IAAAC,yBAAA,IAAA,UAAA,EAAA;AAA+BD,IAAAI,qBAAA,SAAA,SAAAW,iEAAA;AAAA,YAAAT,cAAAC,wBAAAC,GAAA;AAAA,YAAAC,YAAAH,YAAAI;AAAA,YAAAM,SAAAJ,wBAAA;AAAA,aAASC,sBAAAG,OAAAC,eAAAR,UAAAS,SAAA,CAAgC;IAAA,CAAA;AAAElB,IAAAE,iBAAA,IAAA,GAAA;AAACF,IAAAG,uBAAA,EAAS,EAAA,EAAA;;;;AAR1DH,IAAAmB,oBAAA,CAAA;AAAAnB,IAAAoB,4BAAAX,UAAAY,MAAA;AACArB,IAAAmB,oBAAA,CAAA;AAAAnB,IAAAoB,4BAAAX,UAAAa,KAAA;AACAtB,IAAAmB,oBAAA,CAAA;AAAAnB,IAAAoB,4BAAAX,UAAAc,SAAA;AACAvB,IAAAmB,oBAAA,CAAA;AAAAnB,IAAAoB,4BAAAX,UAAAe,SAAA;AACAxB,IAAAmB,oBAAA,CAAA;AAAAnB,IAAAoB,4BAAAX,UAAAgB,KAAA;AACAzB,IAAAmB,oBAAA,CAAA;AAAAnB,IAAAoB,4BAAAX,UAAAiB,EAAA;;;ADjBhE,IAAaC,sBAAmB,uBAAA;AAA1B,QAAOA,uBAAP,MAAOA,qBAAmB;IAI9BC,YAAoBC,eAAsCC,QAAc;AAApD,WAAAD,gBAAAA;AAAsC,WAAAC,SAAAA;AACxD,WAAKC,cAAc,CAAA;IACrB;IAEAC,kBAAe;AACb,WAAKC,gBAAe;IACtB;IAEAA,kBAAe;AACb,WAAKC,WAAU;IACjB;IAEAA,aAAU;AACR,WAAKL,cAAcK,WAAU,EAAGC,UAAUC,SAAM;AAC9C,aAAKL,cAAcK;MACrB,CAAC;IACH;IAEAnB,eAAeoB,IAAU;AACvBC,0BAAAA,QAAKC,KAAK;QACRC,OAAO;QACPC,MAAM;QACNC,MAAM;QACNC,kBAAkB;QAClBC,oBAAoB;QACpBC,mBAAmB;QACnBC,mBAAmB;OACpB,EAAEC,KAAMC,YAAU;AACjB,YAAIA,OAAOC,aAAa;AACtB,eAAKpB,cAAcqB,aAAab,EAAE,EAAEF,UAAUC,SAAM;AAClD,iBAAKF,WAAU;UACjB,CAAC;AACDI,8BAAAA,QAAKC,KAAK;YACRC,OAAO;YACPE,MAAM;WACP;;MAEL,CAAC;IACH;IAEA5B,aAAaqC,QAAW;AACtB,WAAKrB,OAAOsB,SAAS,CAAC,sBAAsB,GAAG;QAACC,OAAO;UAACF;QAAM;MAAC,CAAC;IAClE;;;qBA9CWxB,sBAAmB2B,4BAAAC,aAAA,GAAAD,4BAAAE,MAAA,CAAA;EAAA;;UAAnB7B;IAAmB8B,WAAA,CAAA,CAAA,aAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,SAAA,eAAA,QAAA,gBAAA,GAAA,oBAAA,SAAA,iBAAA,KAAA,GAAA,CAAA,GAAA,aAAA,MAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,cAAA,wBAAA,GAAA,OAAA,YAAA,GAAA,CAAA,QAAA,oBAAA,GAAA,OAAA,YAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,OAAA,eAAA,GAAA,OAAA,GAAA,CAAA,GAAA,OAAA,cAAA,GAAA,OAAA,CAAA;IAAAC,UAAA,SAAAC,6BAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACZhC/D,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkD,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAOUD,QAAAE,iBAAA,GAAA,SAAA;AAAOF,QAAAG,uBAAA;AAC/CH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,GAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA,EAAA,IAAA,SAAA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,MAAA,CAAA;AAK8BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAClCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AACjCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACrCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACrCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AACjCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,IAAA;AAAEF,QAAAG,uBAAA;AAC9BH,QAAAiE,oBAAA,IAAA,MAAA,CAAA;AACJjE,QAAAG,uBAAA,EAAK;AAETH,QAAAkE,qBAAA,IAAAC,uCAAA,IAAA,GAAA,SAAA,CAAA;AAcJnE,QAAAG,uBAAA,EAAQ,EAAA;AAGhBH,QAAAC,yBAAA,IAAA,UAAA,CAAA;AAAiED,QAAAE,iBAAA,IAAA,cAAA;AAAYF,QAAAG,uBAAA;AAC7EH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAkDD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;AAK5EH,QAAAiE,oBAAA,IAAA,IAAA,EAAI,IAAA,IAAA;AAEJjE,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACZD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA;;;AA1B7CH,QAAAmB,oBAAA,EAAA;AAAAnB,QAAAoE,qBAAA,WAAAJ,IAAAjC,YAAAsC,OAAA;;;;;;ADVpD,MAAO1C,uBAAP;SAAOA;AAAmB,GAAA;;;AEPhC,IAAA2C,sBAAiB;;;;ACqBeC,IAAAC,yBAAA,GAAA,OAAA,EAA+C,GAAA,IAAA,EAAA,GAAA,MAAA,CAAA;AAEXD,IAAAE,iBAAA,CAAA;AAAgBF,IAAAG,uBAAA;AAC5CH,IAAAC,yBAAA,GAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,CAAA;AAAoBF,IAAAG,uBAAA;AAChDH,IAAAC,yBAAA,GAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,CAAA;AAAmBF,IAAAG,uBAAA;AAC/CH,IAAAC,yBAAA,GAAA,MAAA,CAAA,EAA4B,GAAA,UAAA,EAAA;AACQD,IAAAI,qBAAA,SAAA,SAAAC,+DAAA;AAAA,YAAAC,cAAAC,wBAAAC,GAAA;AAAA,YAAAC,WAAAH,YAAAI;AAAA,YAAAC,SAAAC,wBAAA;AAAA,aAASC,sBAAAF,OAAAG,YAAAL,QAAA,CAAkB;IAAA,CAAA;AAAET,IAAAE,iBAAA,IAAA,GAAA;AAACF,IAAAG,uBAAA;AAChEH,IAAAC,yBAAA,IAAA,UAAA,EAAA;AAA+BD,IAAAI,qBAAA,SAAA,SAAAW,gEAAA;AAAA,YAAAT,cAAAC,wBAAAC,GAAA;AAAA,YAAAC,WAAAH,YAAAI;AAAA,YAAAM,SAAAJ,wBAAA;AAAA,aAASC,sBAAAG,OAAAC,cAAAR,SAAAS,QAAA,CAA6B;IAAA,CAAA;AAAElB,IAAAE,iBAAA,IAAA,GAAA;AAACF,IAAAG,uBAAA,EAAS,EAAA,EAAA;;;;AALvDH,IAAAmB,oBAAA,CAAA;AAAAnB,IAAAoB,4BAAAX,SAAAY,MAAA;AACArB,IAAAmB,oBAAA,CAAA;AAAAnB,IAAAoB,4BAAAX,SAAAa,UAAA;AACAtB,IAAAmB,oBAAA,CAAA;AAAAnB,IAAAoB,4BAAAX,SAAAc,SAAA;;;ADlBpE,IAAaC,qBAAkB,uBAAA;AAAzB,QAAOA,sBAAP,MAAOA,oBAAkB;IAI7BC,YAAoBC,cAAoCC,QAAc;AAAlD,WAAAD,eAAAA;AAAoC,WAAAC,SAAAA;AACtD,WAAKC,aAAa,CAAA;IACpB;IAEAC,kBAAe;AACb,WAAKC,gBAAe;IACtB;IAEAA,kBAAe;AACb,WAAKC,UAAS;IAChB;IAEAA,YAAS;AACP,WAAKL,aAAaK,UAAS,EAAGC,UAAUC,SAAM;AAC5C,aAAKL,aAAaK;MACpB,CAAC;IACH;IAEAhB,cAAciB,IAAU;AACtBC,0BAAAA,QAAKC,KAAK;QACRC,OAAO;QACPC,MAAM;QACNC,MAAM;QACNC,kBAAkB;QAClBC,oBAAoB;QACpBC,mBAAmB;QACnBC,mBAAmB;OACpB,EAAEC,KAAMC,YAAU;AACjB,YAAIA,OAAOC,aAAa;AACtB,eAAKpB,aAAaqB,YAAYb,EAAE,EAAEF,UAAUC,SAAM;AAChD,iBAAKF,UAAS;UAChB,CAAC;AACDI,8BAAAA,QAAKC,KAAK;YACRC,OAAO;YACPE,MAAM;WACP;;MAEL,CAAC;IACH;IAEAzB,YAAYkC,OAAU;AACpB,WAAKrB,OAAOsB,SAAS,CAAC,qBAAqB,GAAG;QAACC,OAAO;UAACF;QAAK;MAAC,CAAC;IAChE;;;qBA9CWxB,qBAAkB2B,4BAAAC,YAAA,GAAAD,4BAAAE,MAAA,CAAA;EAAA;;UAAlB7B;IAAkB8B,WAAA,CAAA,CAAA,YAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,SAAA,eAAA,QAAA,gBAAA,GAAA,oBAAA,SAAA,iBAAA,KAAA,GAAA,CAAA,GAAA,aAAA,MAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,QAAA,uBAAA,GAAA,OAAA,YAAA,GAAA,CAAA,QAAA,oBAAA,GAAA,OAAA,YAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,OAAA,eAAA,GAAA,OAAA,GAAA,CAAA,GAAA,OAAA,cAAA,GAAA,OAAA,CAAA;IAAAC,UAAA,SAAAC,4BAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACX/B5D,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAYCD,QAAAE,iBAAA,GAAA,QAAA;AAAMF,QAAAG,uBAAA;AAC9CH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,IAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA,EAAA,IAAA,SAAA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,MAAA,CAAA;AAK8BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAClCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,cAAA;AAASF,QAAAG,uBAAA;AACrCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAClCH,QAAA8D,oBAAA,IAAA,MAAA,CAAA;AACJ9D,QAAAG,uBAAA,EAAK;AAETH,QAAA+D,qBAAA,IAAAC,sCAAA,IAAA,GAAA,SAAA,CAAA;AAWJhE,QAAAG,uBAAA,EAAQ,EAAA;AAGhBH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAqDD,QAAAE,iBAAA,IAAA,aAAA;AAAWF,QAAAG,uBAAA;AAChEH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAkDD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;AAK5EH,QAAA8D,oBAAA,IAAA,IAAA,EAAI,IAAA,IAAA;AAGJ9D,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACZD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;AAxB9CH,QAAAmB,oBAAA,EAAA;AAAAnB,QAAAiE,qBAAA,WAAAJ,IAAAjC,WAAAsC,MAAA;;;;;;ADdnD,MAAO1C,sBAAP;SAAOA;AAAkB,GAAA;;;AEP/B,IAAA2C,uBAAiB;;;;ACwBWC,IAAAC,yBAAA,GAAA,OAAA,EAA0D,GAAA,IAAA,EAAA,GAAA,MAAA,CAAA;AAEtBD,IAAAE,iBAAA,CAAA;AAAmBF,IAAAG,uBAAA;AAC/CH,IAAAC,yBAAA,GAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,CAAA;AAAsBF,IAAAG,uBAAA;AAClDH,IAAAC,yBAAA,GAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,CAAA;AAAkBF,IAAAG,uBAAA;AAC9CH,IAAAC,yBAAA,GAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,CAAA;AAAsBF,IAAAG,uBAAA;AAClDH,IAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,EAAA;AAAqBF,IAAAG,uBAAA;AACjDH,IAAAC,yBAAA,IAAA,MAAA,CAAA,EAA4B,IAAA,UAAA,EAAA;AACMD,IAAAI,qBAAA,SAAA,SAAAC,oEAAA;AAAA,YAAAC,cAAAC,wBAAAC,GAAA;AAAA,YAAAC,cAAAH,YAAAI;AAAA,YAAAC,SAAAC,wBAAA;AAAA,aAASC,sBAAAF,OAAAG,eAAAL,WAAA,CAAwB;IAAA,CAAA;AAAET,IAAAE,iBAAA,IAAA,GAAA;AAACF,IAAAG,uBAAA;AACpEH,IAAAC,yBAAA,IAAA,UAAA,EAAA;AAA+BD,IAAAI,qBAAA,SAAA,SAAAW,oEAAA;AAAA,YAAAT,cAAAC,wBAAAC,GAAA;AAAA,YAAAC,cAAAH,YAAAI;AAAA,YAAAM,SAAAJ,wBAAA;AAAA,aAASC,sBAAAG,OAAAC,iBAAAR,YAAAS,WAAA,CAAsC;IAAA,CAAA;AAAElB,IAAAE,iBAAA,IAAA,GAAA;AAACF,IAAAG,uBAAA,EAAS,EAAA,EAAA;;;;AAPhEH,IAAAmB,oBAAA,CAAA;AAAAnB,IAAAoB,4BAAAX,YAAAY,MAAA;AACArB,IAAAmB,oBAAA,CAAA;AAAAnB,IAAAoB,4BAAAX,YAAAa,SAAA;AACAtB,IAAAmB,oBAAA,CAAA;AAAAnB,IAAAoB,4BAAAX,YAAAc,KAAA;AACAvB,IAAAmB,oBAAA,CAAA;AAAAnB,IAAAoB,4BAAAX,YAAAe,SAAA;AACAxB,IAAAmB,oBAAA,CAAA;AAAAnB,IAAAoB,4BAAAX,YAAAgB,QAAA;;;ADtBhE,IAAaC,yBAAsB,uBAAA;AAA7B,QAAOA,0BAAP,MAAOA,wBAAsB;IAIjCC,YAAoBC,iBAA0CC,QAAc;AAAxD,WAAAD,kBAAAA;AAA0C,WAAAC,SAAAA;AAC5D,WAAKC,iBAAiB,CAAA;IACxB;IAEAC,kBAAe;AACb,WAAKC,gBAAe;IACtB;IAEAA,kBAAe;AACb,WAAKC,cAAa;IACpB;IAEAA,gBAAa;AACX,WAAKL,gBAAgBK,cAAa,EAAGC,UAAUC,SAAM;AACnD,aAAKL,iBAAiBK;MACxB,CAAC;IACH;IAEAlB,iBAAiBmB,IAAU;AACzBC,2BAAAA,QAAKC,KAAK;QACRC,OAAO;QACPC,MAAM;QACNC,MAAM;QACNC,kBAAkB;QAClBC,oBAAoB;QACpBC,mBAAmB;QACnBC,mBAAmB;OACpB,EAAEC,KAAMC,YAAU;AACjB,YAAIA,OAAOC,aAAa;AACtB,eAAKpB,gBAAgBqB,eAAeb,EAAE,EAAEF,UAAUC,SAAM;AACtD,iBAAKF,cAAa;UACpB,CAAC;AACDI,+BAAAA,QAAKC,KAAK;YACRC,OAAO;YACPE,MAAM;WACP;;MAEL,CAAC;IACH;IAEA3B,eAAeoC,UAAa;AAC1B,WAAKrB,OAAOsB,SAAS,CAAC,yBAAyB,GAAG;QAACC,OAAO;UAACF;QAAQ;MAAC,CAAC;IACvE;;;qBA9CWxB,yBAAsB2B,4BAAAC,eAAA,GAAAD,4BAAAE,MAAA,CAAA;EAAA;;UAAtB7B;IAAsB8B,WAAA,CAAA,CAAA,gBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,SAAA,eAAA,QAAA,gBAAA,GAAA,oBAAA,SAAA,iBAAA,KAAA,GAAA,CAAA,GAAA,aAAA,MAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,QAAA,2BAAA,GAAA,OAAA,YAAA,GAAA,CAAA,QAAA,oBAAA,GAAA,OAAA,YAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,OAAA,eAAA,GAAA,OAAA,GAAA,CAAA,GAAA,OAAA,cAAA,GAAA,OAAA,CAAA;IAAAC,UAAA,SAAAC,gCAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACZnC9D,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAaCD,QAAAE,iBAAA,GAAA,YAAA;AAAUF,QAAAG,uBAAA;AAClDH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,IAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA,EAAA,IAAA,SAAA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,MAAA,CAAA;AAK0BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAClCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACrCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AACjCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAClCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AACjCH,QAAAgE,oBAAA,IAAA,MAAA,CAAA;AACJhE,QAAAG,uBAAA,EAAK;AAETH,QAAAiE,qBAAA,IAAAC,0CAAA,IAAA,GAAA,SAAA,CAAA;AAaFlE,QAAAG,uBAAA,EAAQ,EAAA;AAGdH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAyDD,QAAAE,iBAAA,IAAA,gBAAA;AAAcF,QAAAG,uBAAA;AACvEH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAkDD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;AAK5EH,QAAAgE,oBAAA,IAAA,IAAA,EAAI,IAAA,IAAA;AAGJhE,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACZD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;AA1B/CH,QAAAmB,oBAAA,EAAA;AAAAnB,QAAAmE,qBAAA,WAAAJ,IAAAjC,eAAAsC,UAAA;;;;;;ADhBlD,MAAO1C,0BAAP;SAAOA;AAAsB,GAAA;;;AENnC,IAAa2C,0BAAuB,uBAAA;AAA9B,QAAOA,2BAAP,MAAOA,yBAAuB;;;qBAAvBA,0BAAuB;EAAA;;UAAvBA;IAAuBC,WAAA,CAAA,CAAA,oBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,aAAA,aAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,aAAA,UAAA,eAAA,wBAAA,GAAA,CAAA,QAAA,uBAAA,GAAA,OAAA,sBAAA,cAAA,SAAA,GAAA,CAAA,QAAA,yBAAA,GAAA,OAAA,sBAAA,YAAA,GAAA,CAAA,QAAA,0BAAA,GAAA,OAAA,sBAAA,YAAA,GAAA,CAAA,QAAA,4BAAA,GAAA,OAAA,sBAAA,YAAA,GAAA,CAAA,QAAA,uBAAA,GAAA,OAAA,sBAAA,YAAA,GAAA,CAAA,QAAA,yBAAA,GAAA,OAAA,sBAAA,YAAA,GAAA,CAAA,QAAA,sBAAA,GAAA,OAAA,sBAAA,YAAA,GAAA,CAAA,QAAA,wBAAA,GAAA,OAAA,sBAAA,YAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,CAAA;IAAAC,UAAA,SAAAC,iCAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACNpCE,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkD,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAOED,QAAAE,iBAAA,GAAA,qBAAA;AAAmBF,QAAAG,uBAAA;AAC3DH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,GAAA,OAAA,CAAA,EAAA,IAAA,KAAA,CAAA;AAEoED,QAAAE,iBAAA,IAAA,aAAA;AAAWF,QAAAG,uBAAA;AAC3FH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA0ED,QAAAE,iBAAA,IAAA,cAAA;AAAYF,QAAAG,uBAAA;AACtFH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA2ED,QAAAE,iBAAA,IAAA,gBAAA;AAAcF,QAAAG,uBAAA;AACzFH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA6ED,QAAAE,iBAAA,IAAA,gBAAA;AAAcF,QAAAG,uBAAA;AAC3FH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAwED,QAAAE,iBAAA,IAAA,aAAA;AAAWF,QAAAG,uBAAA;AACnFH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAA0ED,QAAAE,iBAAA,IAAA,cAAA;AAAYF,QAAAG,uBAAA;AACtFH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAuED,QAAAE,iBAAA,IAAA,YAAA;AAAUF,QAAAG,uBAAA;AACjFH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAyED,QAAAE,iBAAA,IAAA,aAAA;AAAWF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA,EAAA,EAAA;AAOtGH,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACZD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA;;;;;ADnBjG,MAAOZ,2BAAP;SAAOA;AAAuB,GAAA;;;AELpC,IAAAa,uBAAiB;;;;AC2BeC,IAAAC,yBAAA,GAAA,OAAA,EAAkD,GAAA,IAAA,EAAA,GAAA,MAAA,CAAA;AAEdD,IAAAE,iBAAA,CAAA;AAAiBF,IAAAG,uBAAA;AAC7CH,IAAAC,yBAAA,GAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,CAAA;AAAoBF,IAAAG,uBAAA;AAChDH,IAAAC,yBAAA,GAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,CAAA;AAAkBF,IAAAG,uBAAA;AAC9CH,IAAAC,yBAAA,GAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,CAAA;AAA0BF,IAAAG,uBAAA;AACtDH,IAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,EAAA;AAAmBF,IAAAG,uBAAA;AAC/CH,IAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,EAAA;AAAoBF,IAAAG,uBAAA;AAChDH,IAAAC,yBAAA,IAAA,MAAA,CAAA,EAA4B,IAAA,KAAA,EAAA;AACmCD,IAAAE,iBAAA,IAAA,GAAA;AAACF,IAAAG,uBAAA;AAC9DH,IAAAC,yBAAA,IAAA,UAAA,EAAA;AAA+BD,IAAAI,qBAAA,SAAA,SAAAC,kEAAA;AAAA,YAAAC,cAAAC,wBAAAC,GAAA;AAAA,YAAAC,YAAAH,YAAAI;AAAA,YAAAC,SAAAC,wBAAA;AAAA,aAASC,sBAAAF,OAAAG,eAAAL,UAAAM,SAAA,CAAgC;IAAA,CAAA;AAAEf,IAAAE,iBAAA,IAAA,GAAA;AAACF,IAAAG,uBAAA,EAAS,EAAA,EAAA;;;;AAR1DH,IAAAgB,oBAAA,CAAA;AAAAhB,IAAAiB,4BAAAR,UAAAS,MAAA;AACAlB,IAAAgB,oBAAA,CAAA;AAAAhB,IAAAiB,4BAAAR,UAAAU,SAAA;AACAnB,IAAAgB,oBAAA,CAAA;AAAAhB,IAAAiB,4BAAAR,UAAAW,OAAA;AACApB,IAAAgB,oBAAA,CAAA;AAAAhB,IAAAiB,4BAAAR,UAAAY,eAAA;AACArB,IAAAgB,oBAAA,CAAA;AAAAhB,IAAAiB,4BAAAR,UAAAa,QAAA;AACAtB,IAAAgB,oBAAA,CAAA;AAAAhB,IAAAiB,4BAAAR,UAAAc,SAAA;;;AD3BpE,IAAaC,uBAAoB,uBAAA;AAA3B,QAAOA,wBAAP,MAAOA,sBAAoB;IAI/BC,YAAoBC,eAA4B;AAA5B,WAAAA,gBAAAA;AAClB,WAAKC,cAAc,CAAA;IACrB;IAEAC,kBAAe;AACb,WAAKC,gBAAe;IACtB;IAEAA,kBAAe;AACb,WAAKC,WAAU;IACjB;IAEAA,aAAU;AACR,WAAKJ,cAAcI,WAAU,EAAGC,UAAUC,SAAM;AAC9CC,gBAAQC,IAAIF,GAAG;AACf,aAAKL,cAAcK;MACrB,CAAC;IACH;IAEAlB,eAAeqB,IAAU;AACvBC,2BAAAA,QAAKC,KAAK;QACRC,OAAO;QACPC,MAAM;QACNC,MAAM;QACNC,kBAAkB;QAClBC,oBAAoB;QACpBC,mBAAmB;QACnBC,mBAAmB;OACpB,EAAEC,KAAMC,YAAU;AACjB,YAAIA,OAAOC,aAAa;AACtB,eAAKrB,cAAcsB,aAAab,EAAE,EAAEJ,UAAUC,SAAM;AAClD,iBAAKF,WAAU;UACjB,CAAC;AACDM,+BAAAA,QAAKC,KAAK;YACRC,OAAO;YACPE,MAAM;WACP;;MAEL,CAAC;IACH;;;qBA3CWhB,uBAAoByB,4BAAAC,aAAA,CAAA;EAAA;;UAApB1B;IAAoB2B,WAAA,CAAA,CAAA,mBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,SAAA,eAAA,QAAA,gBAAA,GAAA,oBAAA,SAAA,iBAAA,KAAA,GAAA,CAAA,GAAA,aAAA,MAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,QAAA,0BAAA,GAAA,OAAA,eAAA,GAAA,CAAA,QAAA,sBAAA,GAAA,OAAA,eAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,QAAA,4BAAA,GAAA,OAAA,eAAA,GAAA,CAAA,GAAA,OAAA,cAAA,GAAA,OAAA,CAAA;IAAAC,UAAA,SAAAC,8BAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACRjCzD,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAYCD,QAAAE,iBAAA,GAAA,SAAA;AAAOF,QAAAG,uBAAA;AAC/CH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,IAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA,EAAA,IAAA,SAAA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,MAAA,CAAA;AAK8BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAClCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACrCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,SAAA;AAAOF,QAAAG,uBAAA;AACnCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,qBAAA;AAAmBF,QAAAG,uBAAA;AAC/CH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AACjCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAClCH,QAAA2D,oBAAA,IAAA,MAAA,CAAA;AACJ3D,QAAAG,uBAAA,EAAK;AAETH,QAAA4D,qBAAA,IAAAC,wCAAA,IAAA,GAAA,SAAA,CAAA;AAcJ7D,QAAAG,uBAAA,EAAQ,EAAA;AAGhBH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAA2DD,QAAAE,iBAAA,IAAA,cAAA;AAAYF,QAAAG,uBAAA;AACvEH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAuDD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;AAKjFH,QAAA2D,oBAAA,IAAA,IAAA,EAAI,IAAA,IAAA;AAGJ3D,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACZD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;AA3B7CH,QAAAgB,oBAAA,EAAA;AAAAhB,QAAA8D,qBAAA,WAAAJ,IAAA/B,YAAAoC,OAAA;;;;;;ADpBpD,MAAOvC,wBAAP;SAAOA;AAAoB,GAAA;;;AEPjC,IAAAwC,uBAAiB;;;;AC2BeC,IAAAC,yBAAA,GAAA,OAAA,EAA0D,GAAA,IAAA,EAAA,GAAA,MAAA,CAAA;AAEtBD,IAAAE,iBAAA,CAAA;AAAmBF,IAAAG,uBAAA;AAC/CH,IAAAC,yBAAA,GAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,CAAA;AAAsBF,IAAAG,uBAAA;AAClDH,IAAAC,yBAAA,GAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,CAAA;AAAkBF,IAAAG,uBAAA;AAC9CH,IAAAC,yBAAA,GAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,CAAA;AAAsBF,IAAAG,uBAAA;AAClDH,IAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,EAAA;AAAqBF,IAAAG,uBAAA;AACjDH,IAAAC,yBAAA,IAAA,MAAA,CAAA,EAA4B,IAAA,KAAA,EAAA;AACsCD,IAAAE,iBAAA,IAAA,GAAA;AAACF,IAAAG,uBAAA;AACjEH,IAAAC,yBAAA,IAAA,UAAA,EAAA;AAA+BD,IAAAI,qBAAA,SAAA,SAAAC,qEAAA;AAAA,YAAAC,cAAAC,wBAAAC,GAAA;AAAA,YAAAC,cAAAH,YAAAI;AAAA,YAAAC,SAAAC,wBAAA;AAAA,aAASC,sBAAAF,OAAAG,iBAAAL,YAAAM,WAAA,CAAsC;IAAA,CAAA;AAAEf,IAAAE,iBAAA,IAAA,GAAA;AAACF,IAAAG,uBAAA,EAAS,EAAA,EAAA;;;;AAPhEH,IAAAgB,oBAAA,CAAA;AAAAhB,IAAAiB,4BAAAR,YAAAS,MAAA;AACAlB,IAAAgB,oBAAA,CAAA;AAAAhB,IAAAiB,4BAAAR,YAAAU,SAAA;AACAnB,IAAAgB,oBAAA,CAAA;AAAAhB,IAAAiB,4BAAAR,YAAAW,KAAA;AACApB,IAAAgB,oBAAA,CAAA;AAAAhB,IAAAiB,4BAAAR,YAAAY,SAAA;AACArB,IAAAgB,oBAAA,CAAA;AAAAhB,IAAAiB,4BAAAR,YAAAa,QAAA;;;AD1BpE,IAAaC,0BAAuB,uBAAA;AAA9B,QAAOA,2BAAP,MAAOA,yBAAuB;IAIlCC,YAAoBC,iBAAgC;AAAhC,WAAAA,kBAAAA;AAClB,WAAKC,iBAAiB,CAAA;IACxB;IAEAC,kBAAe;AACb,WAAKC,gBAAe;IACtB;IAEAA,kBAAe;AACb,WAAKC,cAAa;IACpB;IAEAA,gBAAa;AACX,WAAKJ,gBAAgBI,cAAa,EAAGC,UAAUC,SAAM;AACnD,aAAKL,iBAAiBK;MACxB,CAAC;IACH;IAEAjB,iBAAiBkB,IAAU;AACzBC,2BAAAA,QAAKC,KAAK;QACRC,OAAO;QACPC,MAAM;QACNC,MAAM;QACNC,kBAAkB;QAClBC,oBAAoB;QACpBC,mBAAmB;QACnBC,mBAAmB;OACpB,EAAEC,KAAMC,YAAU;AACjB,YAAIA,OAAOC,aAAa;AACtB,eAAKnB,gBAAgBoB,eAAeb,EAAE,EAAEF,UAAUC,SAAM;AACtDe,oBAAQC,IAAIhB,GAAG;AACf,iBAAKF,cAAa;UACpB,CAAC;AACDI,+BAAAA,QAAKC,KAAK;YACRC,OAAO;YACPE,MAAM;WACP;;MAEL,CAAC;IACH;;;qBA3CWd,0BAAuByB,4BAAAC,eAAA,CAAA;EAAA;;UAAvB1B;IAAuB2B,WAAA,CAAA,CAAA,sBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,SAAA,eAAA,QAAA,gBAAA,GAAA,oBAAA,SAAA,iBAAA,KAAA,GAAA,CAAA,GAAA,aAAA,MAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,QAAA,6BAAA,GAAA,OAAA,eAAA,GAAA,CAAA,QAAA,sBAAA,GAAA,OAAA,eAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,QAAA,+BAAA,GAAA,OAAA,eAAA,GAAA,CAAA,GAAA,OAAA,cAAA,GAAA,OAAA,CAAA;IAAAC,UAAA,SAAAC,iCAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACRpCxD,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAaCD,QAAAE,iBAAA,GAAA,YAAA;AAAUF,QAAAG,uBAAA;AAClDH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,IAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA,EAAA,IAAA,SAAA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,MAAA,CAAA;AAK8BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAClCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACrCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AACjCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAClCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AACjCH,QAAA0D,oBAAA,IAAA,MAAA,CAAA;AACJ1D,QAAAG,uBAAA,EAAK;AAETH,QAAA2D,qBAAA,IAAAC,2CAAA,IAAA,GAAA,SAAA,CAAA;AAaJ5D,QAAAG,uBAAA,EAAQ,EAAA;AAGhBH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAA8DD,QAAAE,iBAAA,IAAA,gBAAA;AAAcF,QAAAG,uBAAA;AAC5EH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAuDD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;AAKjFH,QAAA0D,oBAAA,IAAA,IAAA,EAAI,IAAA,IAAA;AAGJ1D,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACZD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;AA1B3CH,QAAAgB,oBAAA,EAAA;AAAAhB,QAAA6D,qBAAA,WAAAJ,IAAA/B,eAAAoC,UAAA;;;;;;ADpBtD,MAAOvC,2BAAP;SAAOA;AAAuB,GAAA;;;AEPpC,IAAAwC,uBAAiB;;;;ACwBeC,IAAAC,yBAAA,GAAA,OAAA,EAA+C,GAAA,IAAA,EAAA,GAAA,MAAA,CAAA;AAEXD,IAAAE,iBAAA,CAAA;AAAgBF,IAAAG,uBAAA;AAC5CH,IAAAC,yBAAA,GAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,CAAA;AAAoBF,IAAAG,uBAAA;AAChDH,IAAAC,yBAAA,GAAA,MAAA,CAAA;AAA4BD,IAAAE,iBAAA,CAAA;AAAmBF,IAAAG,uBAAA;AAC/CH,IAAAC,yBAAA,GAAA,MAAA,CAAA,EAA4B,GAAA,KAAA,EAAA;AACkCD,IAAAE,iBAAA,IAAA,GAAA;AAACF,IAAAG,uBAAA;AAC7DH,IAAAC,yBAAA,IAAA,UAAA,EAAA;AAA+BD,IAAAI,qBAAA,SAAA,SAAAC,iEAAA;AAAA,YAAAC,cAAAC,wBAAAC,GAAA;AAAA,YAAAC,WAAAH,YAAAI;AAAA,YAAAC,SAAAC,wBAAA;AAAA,aAASC,sBAAAF,OAAAG,cAAAL,SAAAM,QAAA,CAA6B;IAAA,CAAA;AAAEf,IAAAE,iBAAA,IAAA,GAAA;AAACF,IAAAG,uBAAA,EAAS,EAAA,EAAA;;;;AALvDH,IAAAgB,oBAAA,CAAA;AAAAhB,IAAAiB,4BAAAR,SAAAS,MAAA;AACAlB,IAAAgB,oBAAA,CAAA;AAAAhB,IAAAiB,4BAAAR,SAAAU,UAAA;AACAnB,IAAAgB,oBAAA,CAAA;AAAAhB,IAAAiB,4BAAAR,SAAAW,SAAA;;;ADrBpE,IAAaC,sBAAmB,uBAAA;AAA1B,QAAOA,uBAAP,MAAOA,qBAAmB;IAI9BC,YAAoBC,cAA0B;AAA1B,WAAAA,eAAAA;AAClB,WAAKC,aAAa,CAAA;IACpB;IAEAC,kBAAe;AACb,WAAKC,gBAAe;IACtB;IAEAA,kBAAe;AACb,WAAKC,UAAS;IAChB;IAEAA,YAAS;AACP,WAAKJ,aAAaI,UAAS,EAAGC,UAAUC,SAAM;AAC5C,aAAKL,aAAaK;MACpB,CAAC;IACH;IAEAf,cAAcgB,IAAU;AACtBC,2BAAAA,QAAKC,KAAK;QACRC,OAAO;QACPC,MAAM;QACNC,MAAM;QACNC,kBAAkB;QAClBC,oBAAoB;QACpBC,mBAAmB;QACnBC,mBAAmB;OACpB,EAAEC,KAAMC,YAAU;AACjB,YAAIA,OAAOC,aAAa;AACtB,eAAKnB,aAAaoB,YAAYb,EAAE,EAAEF,UAAUC,SAAM;AAChD,iBAAKF,UAAS;UAChB,CAAC;AACDI,+BAAAA,QAAKC,KAAK;YACRC,OAAO;YACPE,MAAM;WACP;;MAEL,CAAC;IACH;;;qBA1CWd,sBAAmBuB,4BAAAC,YAAA,CAAA;EAAA;;UAAnBxB;IAAmByB,WAAA,CAAA,CAAA,kBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,SAAA,eAAA,QAAA,gBAAA,GAAA,oBAAA,SAAA,iBAAA,KAAA,GAAA,CAAA,GAAA,aAAA,MAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,QAAA,yBAAA,GAAA,OAAA,eAAA,GAAA,CAAA,QAAA,sBAAA,GAAA,OAAA,eAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,QAAA,2BAAA,GAAA,OAAA,eAAA,GAAA,CAAA,GAAA,OAAA,cAAA,GAAA,OAAA,CAAA;IAAAC,UAAA,SAAAC,6BAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACRhCpD,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAYCD,QAAAE,iBAAA,GAAA,QAAA;AAAMF,QAAAG,uBAAA;AAC9CH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,IAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA,EAAA,IAAA,SAAA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,MAAA,CAAA;AAK8BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAClCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,cAAA;AAASF,QAAAG,uBAAA;AACrCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAClCH,QAAAsD,oBAAA,IAAA,MAAA,CAAA;AACJtD,QAAAG,uBAAA,EAAK;AAETH,QAAAuD,qBAAA,IAAAC,uCAAA,IAAA,GAAA,SAAA,CAAA;AAWJxD,QAAAG,uBAAA,EAAQ,EAAA;AAGhBH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAA0DD,QAAAE,iBAAA,IAAA,aAAA;AAAWF,QAAAG,uBAAA;AACrEH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAuDD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;AAKjFH,QAAAsD,oBAAA,IAAA,IAAA,EAAI,IAAA,IAAA;AAGJtD,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACZD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;AAxB9CH,QAAAgB,oBAAA,EAAA;AAAAhB,QAAAyD,qBAAA,WAAAJ,IAAA7B,WAAAkC,MAAA;;;;;;ADjBnD,MAAOrC,uBAAP;SAAOA;AAAmB,GAAA;;;AEFhC,IAAasC,yBAAsB,uBAAA;AAA7B,QAAOA,0BAAP,MAAOA,wBAAsB;;;qBAAtBA,yBAAsB;EAAA;;UAAtBA;IAAsBC,WAAA,CAAA,CAAA,qBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,sBAAA,GAAA,YAAA,GAAA,CAAA,QAAA,SAAA,MAAA,sBAAA,oBAAA,aAAA,GAAA,cAAA,GAAA,CAAA,OAAA,yBAAA,GAAA,YAAA,GAAA,CAAA,QAAA,YAAA,MAAA,yBAAA,GAAA,cAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,eAAA,GAAA,CAAA,QAAA,wBAAA,GAAA,OAAA,eAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,CAAA;IAAAC,UAAA,SAAAC,gCAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACNnCE,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAcLD,QAAAE,iBAAA,GAAA,cAAA;AAAYF,QAAAG,uBAAA;AACpDH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,IAAA,OAAA,CAAA,EAAA,IAAA,MAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA;AAIyCD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AACzDH,QAAAI,oBAAA,IAAA,SAAA,CAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,CAAA;AACqCD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AAC5DH,QAAAI,oBAAA,IAAA,SAAA,CAAA;AACFJ,QAAAG,uBAAA;AACFH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,CAAA;AACsCD,QAAAE,iBAAA,IAAA,SAAA;AAAOF,QAAAG,uBAAA;AAC7DH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,CAAA;AACwCD,QAAAE,iBAAA,IAAA,qBAAA;AAAmBF,QAAAG,uBAAA;AACzEH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACJJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,CAAA;AACwCD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AAC3DH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACJJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,CAAA;AACwCD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAC5DH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACJJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,UAAA,EAAA;AAAgDD,QAAAE,iBAAA,IAAA,SAAA;AAAOF,QAAAG,uBAAA;AACvDH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAyDD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAUnFH,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACVD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;;;;ADjDnG,MAAOZ,0BAAP;SAAOA;AAAsB,GAAA;;;AEAnC,IAAac,4BAAyB,uBAAA;AAAhC,QAAOA,6BAAP,MAAOA,2BAAyB;;;qBAAzBA,4BAAyB;EAAA;;UAAzBA;IAAyBC,WAAA,CAAA,CAAA,wBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,sBAAA,GAAA,YAAA,GAAA,CAAA,QAAA,SAAA,MAAA,sBAAA,oBAAA,aAAA,GAAA,cAAA,GAAA,CAAA,OAAA,yBAAA,GAAA,YAAA,GAAA,CAAA,QAAA,YAAA,MAAA,yBAAA,GAAA,cAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,eAAA,GAAA,CAAA,QAAA,2BAAA,GAAA,OAAA,eAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,CAAA;IAAAC,UAAA,SAAAC,mCAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACNtCE,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAYLD,QAAAE,iBAAA,GAAA,gBAAA;AAAcF,QAAAG,uBAAA;AACtDH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,IAAA,OAAA,CAAA,EAAA,IAAA,MAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA;AAIyCD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AACzDH,QAAAI,oBAAA,IAAA,SAAA,CAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,CAAA;AACqCD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AACxDH,QAAAI,oBAAA,IAAA,SAAA,CAAA;AACFJ,QAAAG,uBAAA;AACFH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,CAAA;AACsCD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAC5DH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,CAAA;AACwCD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AAC3DH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACFJ,QAAAG,uBAAA;AACFH,QAAAC,yBAAA,IAAA,UAAA,EAAA;AAAgDD,QAAAE,iBAAA,IAAA,SAAA;AAAOF,QAAAG,uBAAA;AACvDH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAA4DD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAUtFH,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACVD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;;;;ADvCnG,MAAOZ,6BAAP;SAAOA;AAAyB,GAAA;;;AEAtC,IAAac,wBAAqB,uBAAA;AAA5B,QAAOA,yBAAP,MAAOA,uBAAqB;;;qBAArBA,wBAAqB;EAAA;;UAArBA;IAAqBC,WAAA,CAAA,CAAA,oBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,sBAAA,GAAA,YAAA,GAAA,CAAA,QAAA,SAAA,MAAA,sBAAA,oBAAA,aAAA,GAAA,cAAA,GAAA,CAAA,OAAA,yBAAA,GAAA,YAAA,GAAA,CAAA,QAAA,YAAA,MAAA,yBAAA,GAAA,cAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,eAAA,GAAA,CAAA,QAAA,uBAAA,GAAA,OAAA,eAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,CAAA;IAAAC,UAAA,SAAAC,+BAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACNlCE,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAYLD,QAAAE,iBAAA,GAAA,aAAA;AAAWF,QAAAG,uBAAA;AACnDH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,IAAA,OAAA,CAAA,EAAA,IAAA,MAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA;AAIyCD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AACzDH,QAAAI,oBAAA,IAAA,SAAA,CAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,CAAA;AACqCD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AACzDH,QAAAI,oBAAA,IAAA,SAAA,CAAA;AACFJ,QAAAG,uBAAA;AACFH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,CAAA;AACsCD,QAAAE,iBAAA,IAAA,eAAA;AAAUF,QAAAG,uBAAA;AAChEH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,UAAA,EAAA;AAAgDD,QAAAE,iBAAA,IAAA,SAAA;AAAOF,QAAAG,uBAAA;AACvDH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAwDD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAUlFH,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACVD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;;;;ADnCnG,MAAOZ,yBAAP;SAAOA;AAAqB,GAAA;;;AEIlC,IAAac,yBAAsB,uBAAA;AAA7B,QAAOA,0BAAP,MAAOA,wBAAsB;IAIjCC,YAAoBC,IAAwBC,eAAsCC,QAAwBC,gBAA8B;AAApH,WAAAH,KAAAA;AAAwB,WAAAC,gBAAAA;AAAsC,WAAAC,SAAAA;AAAwB,WAAAC,iBAAAA;AAF1G,WAAAC,cAAmB,CAAA;AAIZ,WAAAC,OAAO,KAAKL,GAAGM,MAAM;QAC1BC,WAAW,CAAC,EAAE;QACdC,QAAQ,CAAC,EAAE;QACXC,WAAW,CAAC,EAAE;QACdC,SAAS,CAAC,EAAE;QACZC,iBAAiB,CAAC,EAAE;QACpBC,UAAU,CAAC,EAAE;OACd;IATyI;IAW1IC,WAAQ;AACN,WAAKV,eAAeW,SAASC,UAAUC,YAAS;AAC9C,aAAKZ,cAAca,QAAQC,MAAMC;AACjC,aAAKd,KAAKe,WAAW;UACnBb,WAAW,KAAKH,YAAYG;UAC5BC,QAAQ,KAAKJ,YAAYI;UACzBC,WAAW,KAAKL,YAAYK;UAC5BC,SAAS,KAAKN,YAAYM;UAC1BC,iBAAiB,KAAKP,YAAYO;UAClCC,UAAU,KAAKR,YAAYQ;SAC5B;MACH,CAAC;IACH;IAEAS,mBAAgB;AACd,UAAG,CAAC,KAAKhB,KAAKiB,OAAM;AAClBC,gBAAQC,IAAI,0BAA0B;aACnC;AACH,aAAKvB,cAAcwB,UAAU,KAAKpB,KAAKqB,KAAK,EAAEX,UAC3CY,cAAgB;AACf,eAAKzB,OAAO0B,SAAS,CAAC,mBAAmB,CAAC;QAC5C,CAAC;;IAGP;;;qBAvCW9B,yBAAsB+B,4BAAAC,WAAA,GAAAD,4BAAAE,aAAA,GAAAF,4BAAAG,MAAA,GAAAH,4BAAAI,cAAA,CAAA;EAAA;;UAAtBnC;IAAsBoC,WAAA,CAAA,CAAA,oBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,UAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,UAAA,MAAA,UAAA,GAAA,cAAA,GAAA,CAAA,OAAA,aAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,aAAA,MAAA,aAAA,GAAA,cAAA,GAAA,CAAA,OAAA,WAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,WAAA,MAAA,WAAA,GAAA,cAAA,GAAA,CAAA,OAAA,mBAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,mBAAA,MAAA,mBAAA,GAAA,cAAA,GAAA,CAAA,OAAA,YAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,YAAA,MAAA,YAAA,GAAA,cAAA,GAAA,CAAA,GAAA,OAAA,cAAA,GAAA,OAAA,GAAA,CAAA,cAAA,sBAAA,GAAA,OAAA,YAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,CAAA;IAAAC,UAAA,SAAAC,gCAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACVnCE,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAcLD,QAAAE,iBAAA,GAAA,eAAA;AAAaF,QAAAG,uBAAA;AACrDH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,IAAA,OAAA,CAAA,EAAA,IAAA,QAAA,CAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA;AAI6BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAC7CH,QAAAI,oBAAA,IAAA,SAAA,CAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AAC0BD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACnDH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACAJ,QAAAG,uBAAA;AACFH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AACwBD,QAAAE,iBAAA,IAAA,SAAA;AAAOF,QAAAG,uBAAA;AAC/CH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AACgCD,QAAAE,iBAAA,IAAA,qBAAA;AAAmBF,QAAAG,uBAAA;AACnEH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AACyBD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AAC9CH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACFJ,QAAAG,uBAAA;AAKAH,QAAAC,yBAAA,IAAA,UAAA,EAAA;AAA+BD,QAAAK,qBAAA,SAAA,SAAAC,2DAAA;AAAA,iBAASP,IAAApB,iBAAA;QAAkB,CAAA;AAAEqB,QAAAE,iBAAA,IAAA,SAAA;AAAOF,QAAAG,uBAAA;AACnEH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAA0DD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAUpFH,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACVD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;AArCjFH,QAAAO,oBAAA,EAAA;AAAAP,QAAAQ,qBAAA,aAAAT,IAAApC,IAAA;;;;;;ADRlB,MAAOP,0BAAP;SAAOA;AAAsB,GAAA;;;AEAnC,IAAaqD,yBAAsB,uBAAA;AAA7B,QAAOA,0BAAP,MAAOA,wBAAsB;IAIjCC,YAAoBC,IAAwBC,eAAsCC,QAAwBC,gBAA8B;AAApH,WAAAH,KAAAA;AAAwB,WAAAC,gBAAAA;AAAsC,WAAAC,SAAAA;AAAwB,WAAAC,iBAAAA;AAF1G,WAAAC,cAAmB,CAAA;AAIZ,WAAAC,OAAO,KAAKL,GAAGM,MAAM;QAC1BC,WAAW,CAAC,EAAE;QACdC,QAAQ,CAAC,EAAE;QACXC,OAAO,CAAC,IAAI,CAACC,WAAWC,KAAK,CAAC;QAC9BC,OAAO,CAAC,EAAE;QACVC,IAAI,CAAC,EAAE;QACPC,WAAW,CAAC,EAAE;QACdC,WAAW,CAAC,EAAE;OACf;IAVyI;IAY1IC,WAAQ;AACN,WAAKb,eAAec,SAASC,UAAUC,YAAS;AAC9C,aAAKf,cAAcgB,QAAQC,MAAMC;AACjC,aAAKjB,KAAKkB,WAAW;UACnBhB,WAAW,KAAKH,YAAYG;UAC5BC,QAAQ,KAAKJ,YAAYI;UACzBC,OAAO,KAAKL,YAAYK;UACxBG,OAAO,KAAKR,YAAYQ;UACxBC,IAAI,KAAKT,YAAYS;UACrBC,WAAW,KAAKV,YAAYU;UAC5BC,WAAW,KAAKX,YAAYW;SAC7B;MACH,CAAC;IACH;IAEAS,mBAAgB;AACd,UAAG,CAAC,KAAKnB,KAAKoB,OAAM;AAClBC,gBAAQC,IAAI,0BAA0B;aACnC;AACH,aAAK1B,cAAc2B,UAAU,KAAKvB,KAAKwB,KAAK,EAAEX,UAC3CY,cAAgB;AACf,eAAK5B,OAAO6B,SAAS,CAAC,mBAAmB,CAAC;QAC5C,CAAC;;IAGP;;;qBAzCWjC,yBAAsBkC,4BAAAC,WAAA,GAAAD,4BAAAE,aAAA,GAAAF,4BAAAG,MAAA,GAAAH,4BAAAI,cAAA,CAAA;EAAA;;UAAtBtC;IAAsBuC,WAAA,CAAA,CAAA,oBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,UAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,UAAA,MAAA,UAAA,GAAA,cAAA,GAAA,CAAA,OAAA,SAAA,GAAA,YAAA,GAAA,CAAA,QAAA,SAAA,mBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,OAAA,SAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,SAAA,MAAA,SAAA,GAAA,cAAA,GAAA,CAAA,OAAA,MAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,MAAA,MAAA,MAAA,GAAA,cAAA,GAAA,CAAA,OAAA,aAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,aAAA,MAAA,aAAA,GAAA,cAAA,GAAA,CAAA,OAAA,aAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,aAAA,MAAA,aAAA,GAAA,gBAAA,gBAAA,GAAA,CAAA,GAAA,OAAA,cAAA,GAAA,OAAA,GAAA,CAAA,cAAA,sBAAA,GAAA,OAAA,YAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,CAAA;IAAAC,UAAA,SAAAC,gCAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACVnCE,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAYLD,QAAAE,iBAAA,GAAA,eAAA;AAAaF,QAAAG,uBAAA;AACrDH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,IAAA,OAAA,CAAA,EAAA,IAAA,QAAA,CAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA;AAI6BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAC7CH,QAAAI,oBAAA,IAAA,SAAA,CAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AACsBD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AAC3CH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AACsBD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AAC3CH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AACmBD,QAAAE,iBAAA,IAAA,iBAAA;AAAYF,QAAAG,uBAAA;AAC/CH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AAC0BD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACnDH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AAC0BD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACnDH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,UAAA,EAAA;AAA+BD,QAAAK,qBAAA,SAAA,SAAAC,2DAAA;AAAA,iBAASP,IAAApB,iBAAA;QAAkB,CAAA;AAAEqB,QAAAE,iBAAA,IAAA,SAAA;AAAOF,QAAAG,uBAAA;AACnEH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAA0DD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAWpFH,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACVD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;AAtCjFH,QAAAO,oBAAA,EAAA;AAAAP,QAAAQ,qBAAA,aAAAT,IAAAvC,IAAA;;;;;;ADNlB,MAAOP,0BAAP;SAAOA;AAAsB,GAAA;;;AEAnC,IAAawD,wBAAqB,uBAAA;AAA5B,QAAOA,yBAAP,MAAOA,uBAAqB;IAIhCC,YAAoBC,IAAwBC,cAAoCC,QAAwBC,gBAA8B;AAAlH,WAAAH,KAAAA;AAAwB,WAAAC,eAAAA;AAAoC,WAAAC,SAAAA;AAAwB,WAAAC,iBAAAA;AAFxG,WAAAC,aAAkB,CAAA;AAIX,WAAAC,OAAO,KAAKL,GAAGM,MAAM;QAC1BC,UAAU,CAAC,EAAE;QACbC,QAAQ,CAAC,EAAE;QACXC,WAAW,CAAC,EAAE;QACdC,YAAY,CAAC,EAAE;OAChB;IAPuI;IASxIC,WAAQ;AACN,WAAKR,eAAeS,SAASC,UAAUC,YAAS;AAC9C,aAAKV,aAAaW,QAAQC,MAAMC;AAChC,aAAKZ,KAAKa,WAAW;UACnBX,UAAU,KAAKH,WAAWG;UAC1BC,QAAQ,KAAKJ,WAAWI;UACxBC,WAAW,KAAKL,WAAWK;UAC3BC,YAAY,KAAKN,WAAWM;SAC7B;MACH,CAAC;IACH;IAEAS,kBAAe;AACb,UAAG,CAAC,KAAKd,KAAKe,OAAM;AAClBC,gBAAQC,IAAI,0BAA0B;aACnC;AACH,aAAKrB,aAAasB,SAAS,KAAKlB,KAAKmB,KAAK,EAAEX,UACzCY,cAAgB;AACf,eAAKvB,OAAOwB,SAAS,CAAC,kBAAkB,CAAC;QAC3C,CAAC;;IAGP;;;qBAnCW5B,wBAAqB6B,4BAAAC,WAAA,GAAAD,4BAAAE,YAAA,GAAAF,4BAAAG,MAAA,GAAAH,4BAAAI,cAAA,CAAA;EAAA;;UAArBjC;IAAqBkC,WAAA,CAAA,CAAA,mBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,UAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,UAAA,MAAA,UAAA,GAAA,cAAA,GAAA,CAAA,OAAA,aAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,aAAA,MAAA,aAAA,GAAA,cAAA,GAAA,CAAA,OAAA,cAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,cAAA,MAAA,cAAA,GAAA,cAAA,GAAA,CAAA,GAAA,OAAA,cAAA,GAAA,OAAA,GAAA,CAAA,cAAA,qBAAA,GAAA,OAAA,YAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,CAAA;IAAAC,UAAA,SAAAC,+BAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACVlCE,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAYLD,QAAAE,iBAAA,GAAA,cAAA;AAAYF,QAAAG,uBAAA;AACpDH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,IAAA,OAAA,CAAA,EAAA,IAAA,QAAA,CAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA;AAI6BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAC/CH,QAAAI,oBAAA,IAAA,SAAA,CAAA;AACAJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AAC0BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAChDH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACAJ,QAAAG,uBAAA;AACFH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AAC2BD,QAAAE,iBAAA,IAAA,eAAA;AAAUF,QAAAG,uBAAA;AACrDH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,UAAA,EAAA;AAA+BD,QAAAK,qBAAA,SAAA,SAAAC,0DAAA;AAAA,iBAASP,IAAApB,gBAAA;QAAiB,CAAA;AAAEqB,QAAAE,iBAAA,IAAA,SAAA;AAAOF,QAAAG,uBAAA;AAClEH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAyDD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAUnFH,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACVD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;AAzBjFH,QAAAO,oBAAA,EAAA;AAAAP,QAAAQ,qBAAA,aAAAT,IAAAlC,IAAA;;;;;;ADNlB,MAAOP,yBAAP;SAAOA;AAAqB,GAAA;;;AEAlC,IAAamD,4BAAyB,uBAAA;AAAhC,QAAOA,6BAAP,MAAOA,2BAAyB;IAIpCC,YAAoBC,IAAwBC,iBAA0CC,QAAwBC,gBAA8B;AAAxH,WAAAH,KAAAA;AAAwB,WAAAC,kBAAAA;AAA0C,WAAAC,SAAAA;AAAwB,WAAAC,iBAAAA;AAF9G,WAAAC,iBAAsB,CAAA;AAIf,WAAAC,OAAO,KAAKL,GAAGM,MAAM;QAC1BC,aAAa,CAAC,EAAE;QAChBC,QAAQ,CAAC,EAAE;QACXC,WAAW,CAAC,EAAE;QACdC,OAAO,CAAC,IAAI,CAACC,WAAWC,KAAK,CAAC;QAC9BC,WAAW,CAAC,EAAE;QACdC,UAAU,CAAC,EAAE;OACd;IAT6I;IAW9IC,WAAQ;AACN,WAAKZ,eAAea,SAASC,UAAUC,YAAS;AAC9C,aAAKd,iBAAiBe,QAAQC,MAAMC;AACpC,aAAKhB,KAAKiB,WAAW;UACnBf,aAAa,KAAKH,eAAeG;UACjCC,QAAQ,KAAKJ,eAAeI;UAC5BC,WAAW,KAAKL,eAAeK;UAC/BC,OAAO,KAAKN,eAAeM;UAC3BG,WAAW,KAAKT,eAAeS;UAC/BC,UAAU,KAAKV,eAAeU;SAC/B;MACH,CAAC;IACH;IAEAS,qBAAkB;AAChB,UAAG,CAAC,KAAKlB,KAAKmB,OAAM;AAClBC,gBAAQC,IAAI,0BAA0B;aACnC;AACH,aAAKzB,gBAAgB0B,YAAY,KAAKtB,KAAKuB,KAAK,EAAEX,UAC/CY,cAAgB;AACf,eAAK3B,OAAO4B,SAAS,CAAC,sBAAsB,CAAC;QAC/C,CAAC;;IAGP;;;qBAvCWhC,4BAAyBiC,4BAAAC,WAAA,GAAAD,4BAAAE,eAAA,GAAAF,4BAAAG,MAAA,GAAAH,4BAAAI,cAAA,CAAA;EAAA;;UAAzBrC;IAAyBsC,WAAA,CAAA,CAAA,uBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,UAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,UAAA,MAAA,UAAA,GAAA,cAAA,GAAA,CAAA,OAAA,aAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,aAAA,MAAA,aAAA,GAAA,cAAA,GAAA,CAAA,OAAA,SAAA,GAAA,YAAA,GAAA,CAAA,QAAA,SAAA,mBAAA,SAAA,MAAA,SAAA,GAAA,cAAA,GAAA,CAAA,OAAA,aAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,aAAA,MAAA,aAAA,GAAA,cAAA,GAAA,CAAA,OAAA,YAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,YAAA,MAAA,YAAA,GAAA,cAAA,GAAA,CAAA,GAAA,OAAA,cAAA,GAAA,OAAA,GAAA,CAAA,cAAA,yBAAA,GAAA,OAAA,YAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,CAAA;IAAAC,UAAA,SAAAC,mCAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACVtCE,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAYLD,QAAAE,iBAAA,GAAA,iBAAA;AAAeF,QAAAG,uBAAA;AACvDH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,IAAA,OAAA,CAAA,EAAA,IAAA,QAAA,CAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA;AAI6BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAC/CH,QAAAI,oBAAA,IAAA,SAAA,CAAA;AACAJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AAC0BD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACnDH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AACsBD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AAC3CH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACAJ,QAAAG,uBAAA;AACFH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AAC0BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAChDH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,EAAA;AACyBD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AAC9CH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACAJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,UAAA,EAAA;AAA+BD,QAAAK,qBAAA,SAAA,SAAAC,8DAAA;AAAA,iBAASP,IAAApB,mBAAA;QAAoB,CAAA;AAAEqB,QAAAE,iBAAA,IAAA,SAAA;AAAOF,QAAAG,uBAAA;AACvEH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAA4DD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAUtFH,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACVD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;AAjCjFH,QAAAO,oBAAA,EAAA;AAAAP,QAAAQ,qBAAA,aAAAT,IAAAtC,IAAA;;;;;;ADNlB,MAAOP,6BAAP;SAAOA;AAAyB,GAAA;;;AETtC,IAAAuD,uBAAiB;AAOjB,IAAaC,sBAAmB,uBAAA;AAA1B,QAAOA,uBAAP,MAAOA,qBAAmB;IAI9BC,YAAoBC,iBAAgC;AAAhC,WAAAA,kBAAAA;AAClB,WAAKC,iBAAiB,CAAA;IACxB;IAEAC,kBAAe;AACb,WAAKC,gBAAe;IACtB;IAEAA,kBAAe;AACb,WAAKC,cAAa;IACpB;IAEAA,gBAAa;AACX,WAAKJ,gBAAgBI,cAAa,EAAGC,UAAUC,SAAM;AACnD,aAAKL,iBAAiBK;MACxB,CAAC;IACH;IAEAC,iBAAiBC,IAAU;AACzBC,2BAAAA,QAAKC,KAAK;QACRC,OAAO;QACPC,MAAM;QACNC,MAAM;QACNC,kBAAkB;QAClBC,oBAAoB;QACpBC,mBAAmB;QACnBC,mBAAmB;OACpB,EAAEC,KAAMC,YAAU;AACjB,YAAIA,OAAOC,aAAa;AACtB,eAAKpB,gBAAgBqB,eAAeb,EAAE,EAAEH,UAAUC,SAAM;AACtD,iBAAKF,cAAa;UACpB,CAAC;AACDK,+BAAAA,QAAKC,KAAK;YACRC,OAAO;YACPE,MAAM;WACP;;MAEL,CAAC;IACH;;;qBA1CWf,sBAAmBwB,4BAAAC,eAAA,CAAA;EAAA;;UAAnBzB;IAAmB0B,WAAA,CAAA,CAAA,gBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,QAAA,2BAAA,GAAA,WAAA,GAAA,CAAA,QAAA,KAAA,GAAA,WAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,CAAA;IAAAC,UAAA,SAAAC,6BAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACThCE,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,IAAA,MAAA,CAAA;AAcRD,QAAAE,iBAAA,IAAA,QAAA;AAAGF,QAAAG,uBAAA;AAC1BH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAAoDD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AAC7DH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA8BD,QAAAE,iBAAA,IAAA,gBAAA;AAAcF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAWpEH,QAAAI,oBAAA,IAAA,IAAA,EAAI,IAAA,IAAA;AAGJJ,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACZD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;;;ADvBrG,MAAOrC,uBAAP;SAAOA;AAAmB,GAAA;;;AEFhC,IAAauC,sBAAmB,uBAAA;AAA1B,QAAOA,uBAAP,MAAOA,qBAAmB;;;qBAAnBA,sBAAmB;EAAA;;UAAnBA;IAAmBC,WAAA,CAAA,CAAA,kBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,QAAA,kBAAA,GAAA,WAAA,GAAA,CAAA,QAAA,KAAA,GAAA,WAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,CAAA;IAAAC,UAAA,SAAAC,6BAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACPhCE,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,IAAA,MAAA,CAAA;AAaRD,QAAAE,iBAAA,IAAA,QAAA;AAAGF,QAAAG,uBAAA;AAC1BH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA2CD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACpDH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA8BD,QAAAE,iBAAA,IAAA,gBAAA;AAAcF,QAAAG,uBAAA,EAAI,EAAA,EAAA;AAKxDH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAsB,IAAA,OAAA,CAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,MAAA,CAAA;AAGSD,QAAAE,iBAAA,IAAA,QAAA;AAAGF,QAAAG,uBAAA;AAC1BH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA2CD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACpDH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA8BD,QAAAE,iBAAA,IAAA,gBAAA;AAAcF,QAAAG,uBAAA,EAAI,EAAA,EAAA;AAKxDH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAsB,IAAA,OAAA,CAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,MAAA,CAAA;AAGSD,QAAAE,iBAAA,IAAA,QAAA;AAAGF,QAAAG,uBAAA;AAC1BH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA2CD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACpDH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA8BD,QAAAE,iBAAA,IAAA,gBAAA;AAAcF,QAAAG,uBAAA,EAAI,EAAA,EAAA;AAKxDH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAsB,IAAA,OAAA,CAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,MAAA,CAAA;AAGSD,QAAAE,iBAAA,IAAA,QAAA;AAAGF,QAAAG,uBAAA;AAC1BH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA2CD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACpDH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA8BD,QAAAE,iBAAA,IAAA,gBAAA;AAAcF,QAAAG,uBAAA,EAAI,EAAA,EAAA;AAMxDH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAsB,IAAA,OAAA,CAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,MAAA,CAAA;AAGSD,QAAAE,iBAAA,IAAA,QAAA;AAAGF,QAAAG,uBAAA;AAC1BH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA2CD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACpDH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA8BD,QAAAE,iBAAA,IAAA,gBAAA;AAAcF,QAAAG,uBAAA,EAAI,EAAA,EAAA;AAKxDH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAsB,IAAA,OAAA,CAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,MAAA,CAAA;AAGSD,QAAAE,iBAAA,IAAA,QAAA;AAAGF,QAAAG,uBAAA;AAC1BH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA2CD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACpDH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA8BD,QAAAE,iBAAA,IAAA,gBAAA;AAAcF,QAAAG,uBAAA,EAAI,EAAA,EAAA;AAKxDH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAsB,IAAA,OAAA,CAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,MAAA,CAAA;AAGSD,QAAAE,iBAAA,IAAA,QAAA;AAAGF,QAAAG,uBAAA;AAC1BH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA2CD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACpDH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA8BD,QAAAE,iBAAA,IAAA,gBAAA;AAAcF,QAAAG,uBAAA,EAAI,EAAA,EAAA;AAKxDH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAsB,IAAA,OAAA,CAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,MAAA,CAAA;AAGSD,QAAAE,iBAAA,IAAA,QAAA;AAAGF,QAAAG,uBAAA;AAC1BH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA2CD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACpDH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA8BD,QAAAE,iBAAA,IAAA,gBAAA;AAAcF,QAAAG,uBAAA,EAAI,EAAA,EAAA;AAKxDH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAsB,IAAA,OAAA,CAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,MAAA,CAAA;AAGSD,QAAAE,iBAAA,IAAA,QAAA;AAAGF,QAAAG,uBAAA;AAC1BH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA2CD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACpDH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA8BD,QAAAE,iBAAA,IAAA,gBAAA;AAAcF,QAAAG,uBAAA,EAAI,EAAA,EAAA;AAKxDH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAsB,IAAA,OAAA,CAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,MAAA,CAAA;AAGSD,QAAAE,iBAAA,IAAA,QAAA;AAAGF,QAAAG,uBAAA;AAC1BH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA2CD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AACpDH,QAAAC,yBAAA,IAAA,KAAA,CAAA;AAA8BD,QAAAE,iBAAA,IAAA,gBAAA;AAAcF,QAAAG,uBAAA,EAAI,EAAA,EAAA;AAMxDH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAsB,IAAA,OAAA,CAAA,EAAA,IAAA,OAAA,CAAA,EAAA,KAAA,MAAA,CAAA;AAGSD,QAAAE,iBAAA,KAAA,QAAA;AAAGF,QAAAG,uBAAA;AAC1BH,QAAAC,yBAAA,KAAA,KAAA,CAAA;AAA2CD,QAAAE,iBAAA,KAAA,WAAA;AAASF,QAAAG,uBAAA;AACpDH,QAAAC,yBAAA,KAAA,KAAA,CAAA;AAA8BD,QAAAE,iBAAA,KAAA,gBAAA;AAAcF,QAAAG,uBAAA,EAAI,EAAA,EAAA;AAKxDH,QAAAC,yBAAA,KAAA,OAAA,CAAA,EAAsB,KAAA,OAAA,CAAA,EAAA,KAAA,OAAA,CAAA,EAAA,KAAA,MAAA,CAAA;AAGSD,QAAAE,iBAAA,KAAA,QAAA;AAAGF,QAAAG,uBAAA;AAC1BH,QAAAC,yBAAA,KAAA,KAAA,CAAA;AAA2CD,QAAAE,iBAAA,KAAA,WAAA;AAASF,QAAAG,uBAAA;AACpDH,QAAAC,yBAAA,KAAA,KAAA,CAAA;AAA8BD,QAAAE,iBAAA,KAAA,gBAAA;AAAcF,QAAAG,uBAAA,EAAI,EAAA,EAAA;AAKxDH,QAAAC,yBAAA,KAAA,OAAA,CAAA,EAAsB,KAAA,OAAA,CAAA,EAAA,KAAA,OAAA,CAAA,EAAA,KAAA,MAAA,CAAA;AAGSD,QAAAE,iBAAA,KAAA,QAAA;AAAGF,QAAAG,uBAAA;AAC1BH,QAAAC,yBAAA,KAAA,KAAA,CAAA;AAA2CD,QAAAE,iBAAA,KAAA,WAAA;AAASF,QAAAG,uBAAA;AACpDH,QAAAC,yBAAA,KAAA,KAAA,CAAA;AAA8BD,QAAAE,iBAAA,KAAA,gBAAA;AAAcF,QAAAG,uBAAA,EAAI,EAAA,EAAA;AAKxDH,QAAAC,yBAAA,KAAA,OAAA,CAAA,EAAsB,KAAA,OAAA,CAAA,EAAA,KAAA,OAAA,CAAA,EAAA,KAAA,MAAA,CAAA;AAGSD,QAAAE,iBAAA,KAAA,QAAA;AAAGF,QAAAG,uBAAA;AAC1BH,QAAAC,yBAAA,KAAA,KAAA,CAAA;AAA2CD,QAAAE,iBAAA,KAAA,WAAA;AAASF,QAAAG,uBAAA;AACpDH,QAAAC,yBAAA,KAAA,KAAA,CAAA;AAA8BD,QAAAE,iBAAA,KAAA,gBAAA;AAAcF,QAAAG,uBAAA,EAAI,EAAA,EAAA;AAKxDH,QAAAC,yBAAA,KAAA,OAAA,CAAA,EAAsB,KAAA,OAAA,CAAA,EAAA,KAAA,OAAA,CAAA,EAAA,KAAA,MAAA,CAAA;AAGSD,QAAAE,iBAAA,KAAA,QAAA;AAAGF,QAAAG,uBAAA;AAC1BH,QAAAC,yBAAA,KAAA,KAAA,CAAA;AAA2CD,QAAAE,iBAAA,KAAA,WAAA;AAASF,QAAAG,uBAAA;AACpDH,QAAAC,yBAAA,KAAA,KAAA,CAAA;AAA8BD,QAAAE,iBAAA,KAAA,gBAAA;AAAcF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAUpEH,QAAAI,oBAAA,KAAA,IAAA,EAAI,KAAA,IAAA;AAGJJ,QAAAC,yBAAA,KAAA,OAAA,EAAA,EAAmC,KAAA,KAAA,EAAA;AACZD,QAAAE,iBAAA,KAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;;;ADrKrG,MAAOZ,uBAAP;SAAOA;AAAmB,GAAA;;;AEAhC,IAAac,2BAAwB,uBAAA;AAA/B,QAAOA,4BAAP,MAAOA,0BAAwB;;;qBAAxBA,2BAAwB;EAAA;;UAAxBA;IAAwBC,WAAA,CAAA,CAAA,uBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,qBAAA,aAAA,GAAA,CAAA,OAAA,+BAAA,OAAA,kBAAA,GAAA,iBAAA,gBAAA,GAAA,CAAA,GAAA,SAAA,cAAA,aAAA,aAAA,GAAA,CAAA,GAAA,SAAA,eAAA,QAAA,gBAAA,GAAA,oBAAA,sBAAA,iBAAA,KAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,aAAA,MAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,QAAA,kCAAA,GAAA,OAAA,UAAA,GAAA,CAAA,QAAA,2BAAA,GAAA,OAAA,WAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,CAAA;IAAAC,UAAA,SAAAC,kCAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACPrCE,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA;AAW3BD,QAAAE,oBAAA,GAAA,OAAA,CAAA;AACAF,QAAAC,yBAAA,GAAA,IAAA;AAAID,QAAAG,iBAAA,IAAA,sBAAA;AAAcH,QAAAI,uBAAA;AAAMJ,QAAAC,yBAAA,IAAA,QAAA,CAAA;AAAqDD,QAAAG,iBAAA,IAAA,OAAA;AAAKH,QAAAI,uBAAA,EAAO;AAE9FJ,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAuB,IAAA,OAAA,CAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA,EAAA,IAAA,MAAA,CAAA;AAK4BD,QAAAG,iBAAA,IAAA,uBAAA;AAAkBH,QAAAI,uBAAA;AACxDJ,QAAAC,yBAAA,IAAA,SAAA,EAAA,EAA8B,IAAA,IAAA,EAAA,IAAA,MAAA,EAAA;AAEMD,QAAAG,iBAAA,IAAA,UAAA;AAAQH,QAAAI,uBAAA;AACpCJ,QAAAC,yBAAA,IAAA,MAAA,EAAA;AAA4BD,QAAAG,iBAAA,IAAA,WAAA;AAASH,QAAAI,uBAAA,EAAK,EAAA;AAGlDJ,QAAAC,yBAAA,IAAA,OAAA,EAAO,IAAA,IAAA,EAAA,IAAA,MAAA,EAAA;AAG6BD,QAAAG,iBAAA,IAAA,6CAAA;AAAkCH,QAAAI,uBAAA;AAC9DJ,QAAAC,yBAAA,IAAA,MAAA,EAAA;AAA4BD,QAAAG,iBAAA,IAAA,6BAAA;AAAwBH,QAAAI,uBAAA,EAAK;AAG7DJ,QAAAC,yBAAA,IAAA,IAAA,EAAI,IAAA,MAAA,EAAA;AAE0BD,QAAAG,iBAAA,IAAA,6CAAA;AAAkCH,QAAAI,uBAAA;AAC9DJ,QAAAC,yBAAA,IAAA,MAAA,EAAA;AAA4BD,QAAAG,iBAAA,IAAA,6BAAA;AAAwBH,QAAAI,uBAAA,EAAK;AAI3DJ,QAAAC,yBAAA,IAAA,MAAA,EAAA,EAA4B,IAAA,KAAA,EAAA;AACoCD,QAAAG,iBAAA,IAAA,kBAAA;AAAgBH,QAAAI,uBAAA;AAC9EJ,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAwDD,QAAAG,iBAAA,IAAA,QAAA;AAAMH,QAAAI,uBAAA,EAAI,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAUpGJ,QAAAE,oBAAA,IAAA,IAAA,EAAI,IAAA,IAAA;AAGJF,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACZD,QAAAG,iBAAA,IAAA,2EAAA;AAAwEH,QAAAI,uBAAA,EAAI,EAAA,EAAA,EAAA,EAAA;;;;;ADlDzG,MAAOb,4BAAP;SAAOA;AAAwB,GAAA;;;AEArC,IAAac,6BAA0B,uBAAA;AAAjC,QAAOA,8BAAP,MAAOA,4BAA0B;;;qBAA1BA,6BAA0B;EAAA;;UAA1BA;IAA0BC,WAAA,CAAA,CAAA,wBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,SAAA,eAAA,QAAA,gBAAA,GAAA,oBAAA,SAAA,iBAAA,KAAA,GAAA,CAAA,GAAA,aAAA,MAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,QAAA,iCAAA,GAAA,OAAA,WAAA,GAAA,CAAA,QAAA,yBAAA,GAAA,OAAA,WAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,CAAA;IAAAC,UAAA,SAAAC,oCAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACPvCE,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAQKD,QAAAE,iBAAA,GAAA,oBAAA;AAAmBF,QAAAG,uBAAA;AAC3DH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,IAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA,EAAA,IAAA,SAAA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,MAAA,CAAA;AAK8BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAClCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,SAAA;AAAOF,QAAAG,uBAAA;AACnCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,qBAAA;AAAmBF,QAAAG,uBAAA;AAC/CH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AACjCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAClCH,QAAAI,oBAAA,IAAA,MAAA,CAAA;AACJJ,QAAAG,uBAAA,EAAK;AAETH,QAAAC,yBAAA,IAAA,OAAA,EAAO,IAAA,IAAA,EAAA,IAAA,MAAA,CAAA;AAE6BD,QAAAE,iBAAA,IAAA,MAAA;AAAIF,QAAAG,uBAAA;AAChCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AACjCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,YAAA;AAAUF,QAAAG,uBAAA;AACtCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,QAAA;AAAGF,QAAAG,uBAAA;AAC/BH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AAEjCH,QAAAC,yBAAA,IAAA,MAAA,CAAA,EAA4B,IAAA,KAAA,CAAA;AACoCD,QAAAE,iBAAA,IAAA,YAAA;AAAUF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA,EAAA,EAAA;AAOlGH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAsDD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;AAKhFH,QAAAI,oBAAA,IAAA,IAAA,EAAI,IAAA,IAAA;AAGJJ,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACZD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;;;ADzCrG,MAAOZ,8BAAP;SAAOA;AAA0B,GAAA;;;AEAvC,IAAac,uBAAoB,uBAAA;AAA3B,QAAOA,wBAAP,MAAOA,sBAAoB;;;qBAApBA,uBAAoB;EAAA;;UAApBA;IAAoBC,WAAA,CAAA,CAAA,mBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,SAAA,eAAA,QAAA,gBAAA,GAAA,oBAAA,SAAA,iBAAA,KAAA,GAAA,CAAA,GAAA,aAAA,MAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,OAAA,GAAA,CAAA,GAAA,SAAA,cAAA,aAAA,aAAA,GAAA,CAAA,QAAA,iCAAA,GAAA,OAAA,WAAA,GAAA,CAAA,QAAA,yBAAA,GAAA,OAAA,WAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,CAAA;IAAAC,UAAA,SAAAC,8BAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACPjCE,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AASKD,QAAAE,iBAAA,GAAA,cAAA;AAASF,QAAAG,uBAAA;AACjDH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,IAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA,EAAA,IAAA,SAAA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,MAAA,CAAA;AAM8BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAClCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,SAAA;AAAOF,QAAAG,uBAAA;AACnCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,qBAAA;AAAmBF,QAAAG,uBAAA;AAC/CH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AACjCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAClCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,kBAAA;AAAgBF,QAAAG,uBAAA;AAC5CH,QAAAI,oBAAA,IAAA,MAAA,CAAA;AACJJ,QAAAG,uBAAA,EAAK;AAETH,QAAAC,yBAAA,IAAA,OAAA,EAAO,IAAA,IAAA,EAAA,IAAA,MAAA,CAAA;AAG6BD,QAAAE,iBAAA,IAAA,MAAA;AAAIF,QAAAG,uBAAA;AAChCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AACjCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,YAAA;AAAUF,QAAAG,uBAAA;AACtCH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,QAAA;AAAGF,QAAAG,uBAAA;AAC/BH,QAAAC,yBAAA,IAAA,MAAA,CAAA;AAA4BD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AACjCH,QAAAC,yBAAA,IAAA,MAAA,CAAA,EAA4B,IAAA,OAAA,CAAA,EAAA,IAAA,QAAA,EAAA;AAE+BD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA,EAAO,EAAA;AAGvEH,QAAAC,yBAAA,IAAA,MAAA,CAAA,EAA4B,IAAA,KAAA,EAAA;AACsCD,QAAAE,iBAAA,IAAA,YAAA;AAAUF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA,EAAA,EAAA;AAQpGH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAsDD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;AAKhFH,QAAAI,oBAAA,IAAA,IAAA,EAAI,IAAA,IAAA;AAGJJ,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACZD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;;;ADlDrG,MAAOZ,wBAAP;SAAOA;AAAoB,GAAA;;;AEAjC,IAAac,0BAAuB,uBAAA;AAA9B,QAAOA,2BAAP,MAAOA,yBAAuB;;;qBAAvBA,0BAAuB;EAAA;;UAAvBA;IAAuBC,WAAA,CAAA,CAAA,sBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,sBAAA,GAAA,YAAA,GAAA,CAAA,QAAA,SAAA,MAAA,sBAAA,oBAAA,aAAA,GAAA,cAAA,GAAA,CAAA,OAAA,yBAAA,GAAA,YAAA,GAAA,CAAA,QAAA,YAAA,MAAA,yBAAA,GAAA,cAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,eAAA,GAAA,CAAA,cAAA,wBAAA,GAAA,OAAA,eAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,CAAA;IAAAC,UAAA,SAAAC,iCAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACNpCE,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAcLD,QAAAE,iBAAA,GAAA,eAAA;AAAaF,QAAAG,uBAAA;AACrDH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,IAAA,OAAA,CAAA,EAAA,IAAA,MAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA;AAIyCD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AACzDH,QAAAI,oBAAA,IAAA,SAAA,CAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,CAAA;AACqCD,QAAAE,iBAAA,IAAA,WAAA;AAASF,QAAAG,uBAAA;AAC5DH,QAAAI,oBAAA,IAAA,SAAA,CAAA;AACFJ,QAAAG,uBAAA;AACFH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,CAAA;AACsCD,QAAAE,iBAAA,IAAA,SAAA;AAAOF,QAAAG,uBAAA;AAC7DH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,CAAA;AACwCD,QAAAE,iBAAA,IAAA,qBAAA;AAAmBF,QAAAG,uBAAA;AACzEH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACJJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,CAAA;AACwCD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AAC3DH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACJJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,CAAA;AACwCD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAC5DH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACJJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,UAAA,EAAA;AAAgDD,QAAAE,iBAAA,IAAA,SAAA;AAAOF,QAAAG,uBAAA;AACvDH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAA+DD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAUzFH,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACVD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;;;;ADjDnG,MAAOZ,2BAAP;SAAOA;AAAuB,GAAA;;;AEApC,IAAac,6BAA0B,uBAAA;AAAjC,QAAOA,8BAAP,MAAOA,4BAA0B;;;qBAA1BA,6BAA0B;EAAA;;UAA1BA;IAA0BC,WAAA,CAAA,CAAA,yBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,sBAAA,GAAA,YAAA,GAAA,CAAA,QAAA,SAAA,MAAA,sBAAA,oBAAA,aAAA,GAAA,cAAA,GAAA,CAAA,OAAA,yBAAA,GAAA,YAAA,GAAA,CAAA,QAAA,YAAA,MAAA,yBAAA,GAAA,cAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,eAAA,GAAA,CAAA,cAAA,2BAAA,GAAA,OAAA,eAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,CAAA;IAAAC,UAAA,SAAAC,oCAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACNvCE,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAYLD,QAAAE,iBAAA,GAAA,iBAAA;AAAeF,QAAAG,uBAAA;AACvDH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,IAAA,OAAA,CAAA,EAAA,IAAA,MAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA;AAIyCD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AACzDH,QAAAI,oBAAA,IAAA,SAAA,CAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,CAAA;AACqCD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AACxDH,QAAAI,oBAAA,IAAA,SAAA,CAAA;AACFJ,QAAAG,uBAAA;AACFH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,CAAA;AACsCD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AAC5DH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,CAAA;AACwCD,QAAAE,iBAAA,IAAA,OAAA;AAAKF,QAAAG,uBAAA;AAC3DH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACFJ,QAAAG,uBAAA;AACFH,QAAAC,yBAAA,IAAA,UAAA,EAAA;AAAgDD,QAAAE,iBAAA,IAAA,SAAA;AAAOF,QAAAG,uBAAA;AACvDH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAAiED,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAU3FH,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACVD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;;;;ADvCnG,MAAOZ,8BAAP;SAAOA;AAA0B,GAAA;;;AEAvC,IAAac,yBAAsB,uBAAA;AAA7B,QAAOA,0BAAP,MAAOA,wBAAsB;;;qBAAtBA,yBAAsB;EAAA;;UAAtBA;IAAsBC,WAAA,CAAA,CAAA,qBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,eAAA,GAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,eAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,sBAAA,GAAA,YAAA,GAAA,CAAA,QAAA,SAAA,MAAA,sBAAA,oBAAA,aAAA,GAAA,cAAA,GAAA,CAAA,OAAA,yBAAA,GAAA,YAAA,GAAA,CAAA,QAAA,YAAA,MAAA,yBAAA,GAAA,cAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,eAAA,GAAA,CAAA,cAAA,uBAAA,GAAA,OAAA,eAAA,GAAA,CAAA,GAAA,QAAA,QAAA,aAAA,GAAA,CAAA,GAAA,WAAA,CAAA;IAAAC,UAAA,SAAAC,gCAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACNnCE,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAC2D,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,OAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AAYLD,QAAAE,iBAAA,GAAA,cAAA;AAAYF,QAAAG,uBAAA;AACpDH,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAkB,IAAA,OAAA,CAAA,EAAA,IAAA,MAAA,EAAA,IAAA,OAAA,CAAA,EAAA,IAAA,SAAA,CAAA;AAIyCD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AACzDH,QAAAI,oBAAA,IAAA,SAAA,CAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,CAAA;AACqCD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA;AACzDH,QAAAI,oBAAA,IAAA,SAAA,CAAA;AACFJ,QAAAG,uBAAA;AACFH,QAAAC,yBAAA,IAAA,OAAA,CAAA,EAAkB,IAAA,SAAA,CAAA;AACsCD,QAAAE,iBAAA,IAAA,eAAA;AAAUF,QAAAG,uBAAA;AAChEH,QAAAI,oBAAA,IAAA,SAAA,EAAA;AACFJ,QAAAG,uBAAA;AACAH,QAAAC,yBAAA,IAAA,UAAA,EAAA;AAAgDD,QAAAE,iBAAA,IAAA,SAAA;AAAOF,QAAAG,uBAAA;AACvDH,QAAAC,yBAAA,IAAA,KAAA,EAAA;AAA8DD,QAAAE,iBAAA,IAAA,QAAA;AAAMF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAUxFH,QAAAC,yBAAA,IAAA,OAAA,EAAA,EAAmC,IAAA,KAAA,EAAA;AACVD,QAAAE,iBAAA,IAAA,2EAAA;AAAwEF,QAAAG,uBAAA,EAAI,EAAA,EAAA,EAAA;;;;;;ADnCnG,MAAOZ,0BAAP;SAAOA;AAAsB,GAAA;;;AEEnC,IAAac,wBAAqB,uBAAA;AAA5B,QAAOA,yBAAP,MAAOA,uBAAqB;;;qBAArBA,wBAAqB;EAAA;;UAArBA;IAAqBC,WAAA,CAAA,CAAA,mBAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,MAAA,gBAAA,eAAA,YAAA,iBAAA,SAAA,oBAAA,QAAA,yBAAA,SAAA,wBAAA,SAAA,GAAA,cAAA,CAAA;IAAAC,UAAA,SAAAC,+BAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACTlCE,QAAAC,yBAAA,GAAA,OAAA,CAAA;AAIID,QAAAE,oBAAA,GAAA,eAAA;AAEJF,QAAAG,uBAAA;;;;;;ADGM,MAAOZ,yBAAP;SAAOA;AAAqB,GAAA;;;AEFlC,IAAaa,mBAAgB,uBAAA;AAAvB,QAAOA,oBAAP,MAAOA,kBAAgB;;;qBAAhBA,mBAAgB;EAAA;;UAAhBA;IAAgBC,WAAA,CAAA,CAAA,aAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,OAAA,eAAA,cAAA,CAAA;IAAAC,UAAA,SAAAC,0BAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACN7BE,QAAAC,yBAAA,GAAA,OAAA,CAAA,EAAuB,GAAA,IAAA;AACfD,QAAAE,iBAAA,GAAA,qCAAA;AAAgCF,QAAAG,uBAAA;AACpCH,QAAAC,yBAAA,GAAA,UAAA,CAAA;AAA8CD,QAAAE,iBAAA,GAAA,UAAA;AAAQF,QAAAG,uBAAA,EAAS;;;;;ADI7D,MAAOZ,oBAAP;SAAOA;AAAgB,GAAA;;;AEiC7B,IAAMa,UAAiB;EACrB;IAAEC,MAAM;IAASC,WAAWC;IAAsBC,aAAa,CAAEC,SAAS;IACxEC,UAAU,CACR;MAAEL,MAAM;MAAaC,WAAWK;IAAuB,GACvD;MAAEN,MAAM;MAAeC,WAAWM;IAAmB,GACrD;MAAEP,MAAM;MAAeC,WAAWO;IAAmB,GACrD;MAAER,MAAM;MAAcC,WAAWQ;IAAkB,GACnD;MAAET,MAAM;MAAkBC,WAAWS;IAAsB,GAC3D;MAAEV,MAAM;MAAiBC,WAAWU;IAAqB,GACzD;MAAEX,MAAM;MAAiBC,WAAWW;IAAqB,GACzD;MAAEZ,MAAM;MAAgBC,WAAWY;IAAoB,GACvD;MAAEb,MAAM;MAAoBC,WAAWa;IAAwB,GAC/D;MAAEd,MAAM;MAAkBC,WAAWc;IAAsB,GAC3D;MAAEf,MAAM;MAAkBC,WAAWe;IAAsB,GAC3D;MAAEhB,MAAM;MAAiBC,WAAWgB;IAAqB,GACzD;MAAEjB,MAAM;MAAqBC,WAAWiB;IAAyB,GACjE;MAAElB,MAAM;MAAMmB,YAAY;IAAW,CAAC;EACzC;EACD;IACEnB,MAAM;IAAWC,WAAWC;IAAsBC,aAAa,CAAEC,SAAS;IAC1EC,UAAU,CACR;MAAEL,MAAM;MAAaC,WAAWmB;IAAgB,GAChD;MAAEpB,MAAM;MAAeC,WAAWoB;IAAoB,GACtD;MAAErB,MAAM;MAAkBC,WAAWqB;IAAuB,GAC5D;MAAEtB,MAAM;MAAcC,WAAWsB;IAAmB,GACpD;MAAEvB,MAAM;MAAiBC,WAAWuB;IAAsB,GAC1D;MAAExB,MAAM;MAAoBC,WAAWwB;IAAyB,GAChE;MAAEzB,MAAM;MAAgBC,WAAWyB;IAAqB,GACxD;MAAE1B,MAAM;MAAkBC,WAAW0B;IAAuB,GAC5D;MAAE3B,MAAM;MAAqBC,WAAW2B;IAA0B,GAClE;MAAE5B,MAAM;MAAiBC,WAAW4B;IAAsB,CAAC;;EAE/D;IACE7B,MAAM;IAAcC,WAAWC;IAAsBC,aAAa,CAAEC,SAAS;IAC7EC,UAAU,CACR;MAAEL,MAAM;MAAaC,WAAW6B;IAAmB,GACnD;MAAE9B,MAAM;MAAcC,WAAW8B;IAAmB,GACpD;MAAE/B,MAAM;MAAqBC,WAAW+B;IAAwB,GAChE;MAAEhC,MAAM;MAAsBC,WAAWgC;IAA0B,GACnE;MAAEjC,MAAM;MAAeC,WAAWiC;IAAoB,CAAC;;EAG3D;IACElC,MAAM;IAAWC,WAAWkC;IAC5B9B,UAAU,CACR;MAAEL,MAAM;MAAaC,WAAWmC;IAAgB,CAAC;;;;;;;;;AAQrD;AAOF,IAAaC,qBAAkB,uBAAA;AAAzB,QAAOA,sBAAP,MAAOA,oBAAkB;;;qBAAlBA,qBAAkB;EAAA;;UAAlBA;EAAkB,CAAA;;cAHnBC,aAAaC,SAASxC,OAAM,GAC5BuC,YAAY;EAAA,CAAA;AAElB,MAAOD,sBAAP;SAAOA;AAAkB,GAAA;;;ACjF/B,SAAS,YAAY,OAAO;AAC1B,SAAO,MAAM,QAAQ,KAAK,IAAI,QAAQ,CAAC,KAAK;AAC9C;AAcA,SAAS,cAAc,cAAc;AACnC,SAAO,wBAAwB,aAAa,aAAa,gBAAgB;AAC3E;;;AC/BA,IAAI;AAMJ,IAAI;AACF,uBAAqB,OAAO,SAAS,eAAe,KAAK;AAC3D,QAAQ;AACN,uBAAqB;AACvB;AAKA,IAAI,WAAyB,uBAAM;AACjC,QAAM,YAAN,MAAM,UAAS;AAAA,IACb,YAAY,aAAa;AACvB,WAAK,cAAc;AAKnB,WAAK,YAAY,KAAK,cAAc,kBAAkB,KAAK,WAAW,IAAI,OAAO,aAAa,YAAY,CAAC,CAAC;AAE5G,WAAK,OAAO,KAAK,aAAa,UAAU,KAAK,UAAU,SAAS;AAEhE,WAAK,UAAU,KAAK,aAAa,kBAAkB,KAAK,UAAU,SAAS;AAG3E,WAAK,QAAQ,KAAK,aAAa,CAAC,EAAE,OAAO,UAAU,uBAAuB,OAAO,QAAQ,eAAe,CAAC,KAAK,QAAQ,CAAC,KAAK;AAI5H,WAAK,SAAS,KAAK,aAAa,eAAe,KAAK,UAAU,SAAS,KAAK,CAAC,KAAK,SAAS,CAAC,KAAK,QAAQ,CAAC,KAAK;AAE/G,WAAK,MAAM,KAAK,aAAa,mBAAmB,KAAK,UAAU,SAAS,KAAK,EAAE,cAAc;AAM7F,WAAK,UAAU,KAAK,aAAa,uBAAuB,KAAK,UAAU,SAAS;AAGhF,WAAK,UAAU,KAAK,aAAa,WAAW,KAAK,UAAU,SAAS,KAAK,CAAC,KAAK;AAK/E,WAAK,SAAS,KAAK,aAAa,UAAU,KAAK,UAAU,SAAS,KAAK,KAAK;AAAA,IAC9E;AAAA,EAaF;AAXI,YAAK,YAAO,SAAS,iBAAiB,GAAG;AACvC,WAAO,KAAK,KAAK,WAAa,mBAAS,WAAW,CAAC;AAAA,EACrD;AAGA,YAAK,aAAuB,gBAAG,6BAAmB;AAAA,IAChD,OAAO;AAAA,IACP,SAAS,UAAS;AAAA,IAClB,YAAY;AAAA,EACd,CAAC;AA9CL,MAAMG,YAAN;AAiDA,SAAOA;AACT,GAAG;AAyDH,IAAI;AAKJ,SAAS,gCAAgC;AACvC,MAAI,yBAAyB,QAAQ,OAAO,WAAW,aAAa;AAClE,QAAI;AACF,aAAO,iBAAiB,QAAQ,MAAM,OAAO,eAAe,CAAC,GAAG,WAAW;AAAA,QACzE,KAAK,MAAM,wBAAwB;AAAA,MACrC,CAAC,CAAC;AAAA,IACJ,UAAE;AACA,8BAAwB,yBAAyB;AAAA,IACnD;AAAA,EACF;AACA,SAAO;AACT;AAOA,SAAS,gCAAgC,SAAS;AAChD,SAAO,8BAA8B,IAAI,UAAU,CAAC,CAAC,QAAQ;AAC/D;AAoHA,SAAS,gBAAgB,OAAO;AAG9B,SAAO,MAAM,eAAe,MAAM,aAAa,EAAE,CAAC,IAAI,MAAM;AAC9D;AAGA,SAAS,qBAAqB;AAK5B;AAAA;AAAA,IAEE,OAAO,cAAc,eAAe,CAAC,CAAC;AAAA,IAEtC,OAAO,YAAY,eAAe,CAAC,CAAC;AAAA,IAEpC,OAAO,SAAS,eAAe,CAAC,CAAC;AAAA,IAEjC,OAAO,UAAU,eAAe,CAAC,CAAC;AAAA;AAEtC;;;AC3IA,IAAI,aAA2B,uBAAM;AACnC,QAAM,cAAN,MAAM,YAAW;AAAA,EAcjB;AAZI,cAAK,YAAO,SAAS,mBAAmB,GAAG;AACzC,WAAO,KAAK,KAAK,aAAY;AAAA,EAC/B;AAGA,cAAK,YAAsB,gBAAG,2BAAiB;AAAA,IAC7C,MAAM;AAAA,EACR,CAAC;AAGD,cAAK,YAAsB,gBAAG,2BAAiB,CAAC,CAAC;AAZrD,MAAMC,cAAN;AAeA,SAAOA;AACT,GAAG;;;ACwyCH,IAAI,sBAAoC,uBAAM;AAC5C,QAAM,uBAAN,MAAM,qBAAoB;AAAA,EAc1B;AAZI,uBAAK,YAAO,SAAS,4BAA4B,GAAG;AAClD,WAAO,KAAK,KAAK,sBAAqB;AAAA,EACxC;AAGA,uBAAK,YAAsB,gBAAG,2BAAiB;AAAA,IAC7C,MAAM;AAAA,EACR,CAAC;AAGD,uBAAK,YAAsB,gBAAG,2BAAiB,CAAC,CAAC;AAZrD,MAAMC,uBAAN;AAeA,SAAOA;AACT,GAAG;;;ACt8CH,IAAM,qCAAkD,oBAAI,IAAI;AAEhE,IAAI;AAEJ,IAAI,eAA6B,uBAAM;AACrC,QAAM,gBAAN,MAAM,cAAa;AAAA,IACjB,YAAY,WAAW,QAAQ;AAC7B,WAAK,YAAY;AACjB,WAAK,SAAS;AACd,WAAK,cAAc,KAAK,UAAU,aAAa,OAAO;AAAA;AAAA;AAAA,QAGtD,OAAO,WAAW,KAAK,MAAM;AAAA,UAAI;AAAA,IACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,WAAW,OAAO;AAChB,UAAI,KAAK,UAAU,UAAU,KAAK,UAAU,OAAO;AACjD,6BAAqB,OAAO,KAAK,MAAM;AAAA,MACzC;AACA,aAAO,KAAK,YAAY,KAAK;AAAA,IAC/B;AAAA,EAaF;AAXI,gBAAK,YAAO,SAAS,qBAAqB,GAAG;AAC3C,WAAO,KAAK,KAAK,eAAiB,mBAAY,QAAQ,GAAM,mBAAS,WAAW,CAAC,CAAC;AAAA,EACpF;AAGA,gBAAK,aAAuB,gBAAG,6BAAmB;AAAA,IAChD,OAAO;AAAA,IACP,SAAS,cAAa;AAAA,IACtB,YAAY;AAAA,EACd,CAAC;AA/BL,MAAMC,gBAAN;AAkCA,SAAOA;AACT,GAAG;AAaH,SAAS,qBAAqB,OAAO,OAAO;AAC1C,MAAI,mCAAmC,IAAI,KAAK,GAAG;AACjD;AAAA,EACF;AACA,MAAI;AACF,QAAI,CAAC,qBAAqB;AACxB,4BAAsB,SAAS,cAAc,OAAO;AACpD,UAAI,OAAO;AACT,4BAAoB,QAAQ;AAAA,MAC9B;AACA,0BAAoB,aAAa,QAAQ,UAAU;AACnD,eAAS,KAAK,YAAY,mBAAmB;AAAA,IAC/C;AACA,QAAI,oBAAoB,OAAO;AAC7B,0BAAoB,MAAM,WAAW,UAAU,KAAK,cAAc,CAAC;AACnE,yCAAmC,IAAI,KAAK;AAAA,IAC9C;AAAA,EACF,SAAS,GAAG;AACV,YAAQ,MAAM,CAAC;AAAA,EACjB;AACF;AAEA,SAAS,eAAe,OAAO;AAG7B,SAAO;AAAA,IACL,SAAS,UAAU,SAAS,UAAU;AAAA,IACtC,OAAO;AAAA,IACP,aAAa,MAAM;AAAA,IAAC;AAAA,IACpB,gBAAgB,MAAM;AAAA,IAAC;AAAA,EACzB;AACF;AAGA,IAAI,qBAAmC,uBAAM;AAC3C,QAAM,sBAAN,MAAM,oBAAmB;AAAA,IACvB,YAAY,eAAe,OAAO;AAChC,WAAK,gBAAgB;AACrB,WAAK,QAAQ;AAEb,WAAK,WAAW,oBAAI,IAAI;AAExB,WAAK,kBAAkB,IAAI,QAAQ;AAAA,IACrC;AAAA;AAAA,IAEA,cAAc;AACZ,WAAK,gBAAgB,KAAK;AAC1B,WAAK,gBAAgB,SAAS;AAAA,IAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,UAAU,OAAO;AACf,YAAM,UAAU,aAAa,YAAY,KAAK,CAAC;AAC/C,aAAO,QAAQ,KAAK,gBAAc,KAAK,eAAe,UAAU,EAAE,IAAI,OAAO;AAAA,IAC/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,QAAQ,OAAO;AACb,YAAM,UAAU,aAAa,YAAY,KAAK,CAAC;AAC/C,YAAM,cAAc,QAAQ,IAAI,WAAS,KAAK,eAAe,KAAK,EAAE,UAAU;AAC9E,UAAI,kBAAkB,cAAc,WAAW;AAE/C,wBAAkB,OAAO,gBAAgB,KAAK,KAAK,CAAC,CAAC,GAAG,gBAAgB,KAAK,KAAK,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC;AACtG,aAAO,gBAAgB,KAAK,IAAI,sBAAoB;AAClD,cAAM,WAAW;AAAA,UACf,SAAS;AAAA,UACT,aAAa,CAAC;AAAA,QAChB;AACA,yBAAiB,QAAQ,CAAC;AAAA,UACxB;AAAA,UACA;AAAA,QACF,MAAM;AACJ,mBAAS,UAAU,SAAS,WAAW;AACvC,mBAAS,YAAY,KAAK,IAAI;AAAA,QAChC,CAAC;AACD,eAAO;AAAA,MACT,CAAC,CAAC;AAAA,IACJ;AAAA;AAAA,IAEA,eAAe,OAAO;AAEpB,UAAI,KAAK,SAAS,IAAI,KAAK,GAAG;AAC5B,eAAO,KAAK,SAAS,IAAI,KAAK;AAAA,MAChC;AACA,YAAM,MAAM,KAAK,cAAc,WAAW,KAAK;AAE/C,YAAM,kBAAkB,IAAI,WAAW,cAAY;AAMjD,cAAM,UAAU,OAAK,KAAK,MAAM,IAAI,MAAM,SAAS,KAAK,CAAC,CAAC;AAC1D,YAAI,YAAY,OAAO;AACvB,eAAO,MAAM;AACX,cAAI,eAAe,OAAO;AAAA,QAC5B;AAAA,MACF,CAAC,EAAE,KAAK,UAAU,GAAG,GAAG,IAAI,CAAC;AAAA,QAC3B;AAAA,MACF,OAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF,EAAE,GAAG,UAAU,KAAK,eAAe,CAAC;AAEpC,YAAM,SAAS;AAAA,QACb,YAAY;AAAA,QACZ;AAAA,MACF;AACA,WAAK,SAAS,IAAI,OAAO,MAAM;AAC/B,aAAO;AAAA,IACT;AAAA,EAaF;AAXI,sBAAK,YAAO,SAAS,2BAA2B,GAAG;AACjD,WAAO,KAAK,KAAK,qBAAuB,mBAAS,YAAY,GAAM,mBAAY,MAAM,CAAC;AAAA,EACxF;AAGA,sBAAK,aAAuB,gBAAG,6BAAmB;AAAA,IAChD,OAAO;AAAA,IACP,SAAS,oBAAmB;AAAA,IAC5B,YAAY;AAAA,EACd,CAAC;AA7FL,MAAMC,sBAAN;AAgGA,SAAOA;AACT,GAAG;AAQH,SAAS,aAAa,SAAS;AAC7B,SAAO,QAAQ,IAAI,WAAS,MAAM,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC,IAAI,OAAO,GAAG,OAAO,EAAE,CAAC,EAAE,IAAI,WAAS,MAAM,KAAK,CAAC;AAC3G;;;AC6sCA,SAAS,gCAAgC,OAAO;AAM9C,SAAO,MAAM,YAAY,KAAK,MAAM,WAAW;AACjD;AAEA,SAAS,iCAAiC,OAAO;AAC/C,QAAM,QAAQ,MAAM,WAAW,MAAM,QAAQ,CAAC,KAAK,MAAM,kBAAkB,MAAM,eAAe,CAAC;AAKjG,SAAO,CAAC,CAAC,SAAS,MAAM,eAAe,OAAO,MAAM,WAAW,QAAQ,MAAM,YAAY,OAAO,MAAM,WAAW,QAAQ,MAAM,YAAY;AAC7I;AAuyBA,IAAM,2BAA2B;AAEjC,IAAM,2BAA2B;AAEjC,IAAM,sCAAsC;AAY5C,IAAI,2BAAyC,uBAAM;AACjD,QAAM,4BAAN,MAAM,0BAAyB;AAAA,IAC7B,YAAY,WAAWC,WAAU;AAC/B,WAAK,YAAY;AACjB,WAAK,YAAYA;AACjB,WAAK,0BAA0B,OAAO,kBAAkB,EAAE,QAAQ,yBAAyB,EAAE,UAAU,MAAM;AAC3G,YAAI,KAAK,6BAA6B;AACpC,eAAK,8BAA8B;AACnC,eAAK,qCAAqC;AAAA,QAC5C;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA,IAEA,sBAAsB;AACpB,UAAI,CAAC,KAAK,UAAU,WAAW;AAC7B,eAAO;AAAA,MACT;AAIA,YAAM,cAAc,KAAK,UAAU,cAAc,KAAK;AACtD,kBAAY,MAAM,kBAAkB;AACpC,kBAAY,MAAM,WAAW;AAC7B,WAAK,UAAU,KAAK,YAAY,WAAW;AAK3C,YAAM,iBAAiB,KAAK,UAAU,eAAe;AACrD,YAAM,gBAAgB,kBAAkB,eAAe,mBAAmB,eAAe,iBAAiB,WAAW,IAAI;AACzH,YAAM,iBAAiB,iBAAiB,cAAc,mBAAmB,IAAI,QAAQ,MAAM,EAAE;AAC7F,kBAAY,OAAO;AACnB,cAAQ,eAAe;AAAA,QAErB,KAAK;AAAA,QAEL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QAET,KAAK;AAAA,QAEL,KAAK;AACH,iBAAO;AAAA,MACX;AAEA,aAAO;AAAA,IACT;AAAA,IAEA,cAAc;AACZ,WAAK,wBAAwB,YAAY;AAAA,IAC3C;AAAA;AAAA,IAEA,uCAAuC;AACrC,UAAI,CAAC,KAAK,+BAA+B,KAAK,UAAU,aAAa,KAAK,UAAU,MAAM;AACxF,cAAM,cAAc,KAAK,UAAU,KAAK;AACxC,oBAAY,OAAO,qCAAqC,0BAA0B,wBAAwB;AAC1G,aAAK,8BAA8B;AACnC,cAAM,OAAO,KAAK,oBAAoB;AACtC,YAAI,SAAS,GAAyC;AACpD,sBAAY,IAAI,qCAAqC,wBAAwB;AAAA,QAC/E,WAAW,SAAS,GAAyC;AAC3D,sBAAY,IAAI,qCAAqC,wBAAwB;AAAA,QAC/E;AAAA,MACF;AAAA,IACF;AAAA,EAaF;AAXI,4BAAK,YAAO,SAAS,iCAAiC,GAAG;AACvD,WAAO,KAAK,KAAK,2BAA6B,mBAAY,QAAQ,GAAM,mBAAS,QAAQ,CAAC;AAAA,EAC5F;AAGA,4BAAK,aAAuB,gBAAG,6BAAmB;AAAA,IAChD,OAAO;AAAA,IACP,SAAS,0BAAyB;AAAA,IAClC,YAAY;AAAA,EACd,CAAC;AA3EL,MAAMC,4BAAN;AA8EA,SAAOA;AACT,GAAG;;;ACj0EH,IAAM,UAAuB,oBAAI,QAAQ,QAAQ;;;ACgDjD,IAAMC,WAAuB,oBAAI,QAAQ,QAAQ;AAoCjD,SAAS,iCAAiC;AACxC,SAAO;AACT;AAEA,IAAM,yBAAsC,oBAAI,eAAe,qBAAqB;AAAA,EAClF,YAAY;AAAA,EACZ,SAAS;AACX,CAAC;AAOD,IAAI,kBAAgC,uBAAM;AACxC,QAAM,mBAAN,MAAM,iBAAgB;AAAA,IACpB,YAAY,0BAA0B,eAAe,WAAW;AAC9D,WAAK,gBAAgB;AACrB,WAAK,YAAY;AAEjB,WAAK,uBAAuB;AAG5B,+BAAyB,qCAAqC;AAC9D,UAAI,CAAC,KAAK,sBAAsB;AAC9B,aAAK,uBAAuB;AAC5B,YAAI,OAAO,cAAc,eAAe,WAAW;AAEjD,gBAAM,WAAW,OAAO,UAAU;AAAA,YAChC,UAAU;AAAA,UACZ,CAAC;AACD,cAAI,KAAK,gBAAgB,SAAS,GAAG;AACnC,mCAAuB,KAAK,SAAS;AAAA,UACvC;AACA,cAAI,KAAK,gBAAgB,OAAO,GAAG;AACjC,iCAAqB,KAAK,WAAW,CAAC,CAAC,UAAU,SAAS;AAAA,UAC5D;AACA,cAAI,KAAK,gBAAgB,SAAS,GAAG;AACnC,kCAAsB;AAAA,UACxB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AAAA,IAEA,gBAAgB,MAAM;AACpB,UAAI,mBAAmB,GAAG;AACxB,eAAO;AAAA,MACT;AACA,UAAI,OAAO,KAAK,kBAAkB,WAAW;AAC3C,eAAO,KAAK;AAAA,MACd;AACA,aAAO,CAAC,CAAC,KAAK,cAAc,IAAI;AAAA,IAClC;AAAA,EAgBF;AAdI,mBAAK,YAAO,SAAS,wBAAwB,GAAG;AAC9C,WAAO,KAAK,KAAK,kBAAoB,mBAAY,wBAAwB,GAAM,mBAAS,wBAAwB,CAAC,GAAM,mBAAS,QAAQ,CAAC;AAAA,EAC3I;AAGA,mBAAK,YAAsB,gBAAG,2BAAiB;AAAA,IAC7C,MAAM;AAAA,EACR,CAAC;AAGD,mBAAK,YAAsB,gBAAG,2BAAiB;AAAA,IAC7C,SAAS,CAAC,YAAY,UAAU;AAAA,EAClC,CAAC;AAnDL,MAAMC,mBAAN;AAsDA,SAAOA;AACT,GAAG;AAKH,SAAS,uBAAuB,KAAK;AACnC,MAAI,CAAC,IAAI,SAAS;AAChB,YAAQ,KAAK,sHAA2H;AAAA,EAC1I;AACF;AAEA,SAAS,qBAAqB,KAAK,WAAW;AAG5C,MAAI,CAAC,IAAI,QAAQ,CAAC,WAAW;AAC3B;AAAA,EACF;AACA,QAAM,cAAc,IAAI,cAAc,KAAK;AAC3C,cAAY,UAAU,IAAI,yBAAyB;AACnD,MAAI,KAAK,YAAY,WAAW;AAChC,QAAM,gBAAgB,iBAAiB,WAAW;AAIlD,MAAI,iBAAiB,cAAc,YAAY,QAAQ;AACrD,YAAQ,KAAK,oLAA8L;AAAA,EAC7M;AACA,cAAY,OAAO;AACrB;AAEA,SAAS,wBAAwB;AAC/B,MAAIC,SAAQ,SAAS,QAAU,MAAM;AACnC,YAAQ,KAAK,mCAAmCA,SAAQ,OAAO,+CAAoD,QAAU,OAAO,qEAA0E;AAAA,EAChN;AACF;AAiqBA,IAAM,YAAN,MAAgB;AAAA,EACd,YAAY,WACZ,SACA,QACA,uCAAuC,OAAO;AAC5C,SAAK,YAAY;AACjB,SAAK,UAAU;AACf,SAAK,SAAS;AACd,SAAK,uCAAuC;AAE5C,SAAK,QAAQ;AAAA,EACf;AAAA;AAAA,EAEA,UAAU;AACR,SAAK,UAAU,cAAc,IAAI;AAAA,EACnC;AACF;AAGA,IAAM,iCAA8C,gDAAgC;AAAA,EAClF,SAAS;AAAA,EACT,SAAS;AACX,CAAC;AAED,IAAM,qBAAN,MAAyB;AAAA,EACvB,cAAc;AACZ,SAAK,UAAU,oBAAI,IAAI;AAEvB,SAAK,wBAAwB,WAAS;AACpC,YAAM,SAAS,gBAAgB,KAAK;AACpC,UAAI,QAAQ;AACV,aAAK,QAAQ,IAAI,MAAM,IAAI,GAAG,QAAQ,CAAC,UAAU,YAAY;AAC3D,cAAI,YAAY,UAAU,QAAQ,SAAS,MAAM,GAAG;AAClD,qBAAS,QAAQ,aAAW,QAAQ,YAAY,KAAK,CAAC;AAAA,UACxD;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF;AAAA;AAAA,EAEA,WAAW,QAAQ,MAAM,SAAS,SAAS;AACzC,UAAM,mBAAmB,KAAK,QAAQ,IAAI,IAAI;AAC9C,QAAI,kBAAkB;AACpB,YAAM,qBAAqB,iBAAiB,IAAI,OAAO;AACvD,UAAI,oBAAoB;AACtB,2BAAmB,IAAI,OAAO;AAAA,MAChC,OAAO;AACL,yBAAiB,IAAI,SAAS,oBAAI,IAAI,CAAC,OAAO,CAAC,CAAC;AAAA,MAClD;AAAA,IACF,OAAO;AACL,WAAK,QAAQ,IAAI,MAAM,oBAAI,IAAI,CAAC,CAAC,SAAS,oBAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,aAAO,kBAAkB,MAAM;AAC7B,iBAAS,iBAAiB,MAAM,KAAK,uBAAuB,8BAA8B;AAAA,MAC5F,CAAC;AAAA,IACH;AAAA,EACF;AAAA;AAAA,EAEA,cAAc,MAAM,SAAS,SAAS;AACpC,UAAM,mBAAmB,KAAK,QAAQ,IAAI,IAAI;AAC9C,QAAI,CAAC,kBAAkB;AACrB;AAAA,IACF;AACA,UAAM,qBAAqB,iBAAiB,IAAI,OAAO;AACvD,QAAI,CAAC,oBAAoB;AACvB;AAAA,IACF;AACA,uBAAmB,OAAO,OAAO;AACjC,QAAI,mBAAmB,SAAS,GAAG;AACjC,uBAAiB,OAAO,OAAO;AAAA,IACjC;AACA,QAAI,iBAAiB,SAAS,GAAG;AAC/B,WAAK,QAAQ,OAAO,IAAI;AACxB,eAAS,oBAAoB,MAAM,KAAK,uBAAuB,8BAA8B;AAAA,IAC/F;AAAA,EACF;AACF;AAMA,IAAM,+BAA+B;AAAA,EACnC,eAAe;AAAA,EACf,cAAc;AAChB;AAKA,IAAM,2BAA2B;AAEjC,IAAM,+BAA4C,gDAAgC;AAAA,EAChF,SAAS;AAAA,EACT,SAAS;AACX,CAAC;AAED,IAAM,oBAAoB,CAAC,aAAa,YAAY;AAEpD,IAAM,kBAAkB,CAAC,WAAW,cAAc,YAAY,aAAa;AAQ3E,IAAM,kBAAN,MAAM,gBAAe;AAAA,EAInB,YAAY,SAAS,SAAS,qBAAqB,WAAW;AAC5D,SAAK,UAAU;AACf,SAAK,UAAU;AACf,SAAK,YAAY;AAEjB,SAAK,iBAAiB;AAOtB,SAAK,iBAAiB,oBAAI,IAAI;AAE9B,SAAK,6BAA6B;AAElC,QAAI,UAAU,WAAW;AACvB,WAAK,oBAAoB,cAAc,mBAAmB;AAAA,IAC5D;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,aAAa,GAAG,GAAG,SAAS,CAAC,GAAG;AAC9B,UAAM,gBAAgB,KAAK,iBAAiB,KAAK,kBAAkB,KAAK,kBAAkB,sBAAsB;AAChH,UAAM,kBAAkB,kCACnB,+BACA,OAAO;AAEZ,QAAI,OAAO,UAAU;AACnB,UAAI,cAAc,OAAO,cAAc,QAAQ;AAC/C,UAAI,cAAc,MAAM,cAAc,SAAS;AAAA,IACjD;AACA,UAAM,SAAS,OAAO,UAAU,yBAAyB,GAAG,GAAG,aAAa;AAC5E,UAAM,UAAU,IAAI,cAAc;AAClC,UAAM,UAAU,IAAI,cAAc;AAClC,UAAM,gBAAgB,gBAAgB;AACtC,UAAM,SAAS,SAAS,cAAc,KAAK;AAC3C,WAAO,UAAU,IAAI,oBAAoB;AACzC,WAAO,MAAM,OAAO,GAAG,UAAU,MAAM;AACvC,WAAO,MAAM,MAAM,GAAG,UAAU,MAAM;AACtC,WAAO,MAAM,SAAS,GAAG,SAAS,CAAC;AACnC,WAAO,MAAM,QAAQ,GAAG,SAAS,CAAC;AAGlC,QAAI,OAAO,SAAS,MAAM;AACxB,aAAO,MAAM,kBAAkB,OAAO;AAAA,IACxC;AACA,WAAO,MAAM,qBAAqB,GAAG,aAAa;AAClD,SAAK,kBAAkB,YAAY,MAAM;AAKzC,UAAM,iBAAiB,OAAO,iBAAiB,MAAM;AACrD,UAAM,yBAAyB,eAAe;AAC9C,UAAM,yBAAyB,eAAe;AAM9C,UAAM,sCAAsC,2BAA2B;AAAA;AAAA,IAGvE,2BAA2B,QAAQ,2BAA2B;AAAA,IAE9D,cAAc,UAAU,KAAK,cAAc,WAAW;AAEtD,UAAM,YAAY,IAAI,UAAU,MAAM,QAAQ,QAAQ,mCAAmC;AAKzF,WAAO,MAAM,YAAY;AACzB,cAAU,QAAQ;AAClB,QAAI,CAAC,OAAO,YAAY;AACtB,WAAK,6BAA6B;AAAA,IACpC;AACA,QAAI,iBAAiB;AAGrB,QAAI,CAAC,wCAAwC,iBAAiB,gBAAgB,eAAe;AAC3F,WAAK,QAAQ,kBAAkB,MAAM;AACnC,cAAM,kBAAkB,MAAM,KAAK,wBAAwB,SAAS;AACpE,cAAM,qBAAqB,MAAM,KAAK,eAAe,SAAS;AAC9D,eAAO,iBAAiB,iBAAiB,eAAe;AAIxD,eAAO,iBAAiB,oBAAoB,kBAAkB;AAC9D,yBAAiB;AAAA,UACf;AAAA,UACA;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH;AAEA,SAAK,eAAe,IAAI,WAAW,cAAc;AAGjD,QAAI,uCAAuC,CAAC,eAAe;AACzD,WAAK,wBAAwB,SAAS;AAAA,IACxC;AACA,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,cAAc,WAAW;AAEvB,QAAI,UAAU,UAAU,KAAkC,UAAU,UAAU,GAA4B;AACxG;AAAA,IACF;AACA,UAAM,WAAW,UAAU;AAC3B,UAAM,kBAAkB,kCACnB,+BACA,UAAU,OAAO;AAItB,aAAS,MAAM,qBAAqB,GAAG,gBAAgB,YAAY;AACnE,aAAS,MAAM,UAAU;AACzB,cAAU,QAAQ;AAGlB,QAAI,UAAU,wCAAwC,CAAC,gBAAgB,cAAc;AACnF,WAAK,wBAAwB,SAAS;AAAA,IACxC;AAAA,EACF;AAAA;AAAA,EAEA,aAAa;AACX,SAAK,kBAAkB,EAAE,QAAQ,YAAU,OAAO,QAAQ,CAAC;AAAA,EAC7D;AAAA;AAAA,EAEA,0BAA0B;AACxB,SAAK,kBAAkB,EAAE,QAAQ,YAAU;AACzC,UAAI,CAAC,OAAO,OAAO,YAAY;AAC7B,eAAO,QAAQ;AAAA,MACjB;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA,EAEA,mBAAmB,qBAAqB;AACtC,UAAM,UAAU,cAAc,mBAAmB;AACjD,QAAI,CAAC,KAAK,UAAU,aAAa,CAAC,WAAW,YAAY,KAAK,iBAAiB;AAC7E;AAAA,IACF;AAEA,SAAK,qBAAqB;AAC1B,SAAK,kBAAkB;AAGvB,sBAAkB,QAAQ,UAAQ;AAChC,sBAAe,cAAc,WAAW,KAAK,SAAS,MAAM,SAAS,IAAI;AAAA,IAC3E,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,YAAY,OAAO;AACjB,QAAI,MAAM,SAAS,aAAa;AAC9B,WAAK,aAAa,KAAK;AAAA,IACzB,WAAW,MAAM,SAAS,cAAc;AACtC,WAAK,cAAc,KAAK;AAAA,IAC1B,OAAO;AACL,WAAK,aAAa;AAAA,IACpB;AAIA,QAAI,CAAC,KAAK,4BAA4B;AAMpC,WAAK,QAAQ,kBAAkB,MAAM;AACnC,wBAAgB,QAAQ,UAAQ;AAC9B,eAAK,gBAAgB,iBAAiB,MAAM,MAAM,4BAA4B;AAAA,QAChF,CAAC;AAAA,MACH,CAAC;AACD,WAAK,6BAA6B;AAAA,IACpC;AAAA,EACF;AAAA;AAAA,EAEA,wBAAwB,WAAW;AACjC,QAAI,UAAU,UAAU,GAA+B;AACrD,WAAK,wBAAwB,SAAS;AAAA,IACxC,WAAW,UAAU,UAAU,GAAgC;AAC7D,WAAK,eAAe,SAAS;AAAA,IAC/B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,wBAAwB,WAAW;AACjC,UAAM,8BAA8B,cAAc,KAAK;AACvD,UAAM;AAAA,MACJ;AAAA,IACF,IAAI,UAAU;AACd,cAAU,QAAQ;AAKlB,QAAI,CAAC,eAAe,CAAC,+BAA+B,CAAC,KAAK,iBAAiB;AACzE,gBAAU,QAAQ;AAAA,IACpB;AAAA,EACF;AAAA;AAAA,EAEA,eAAe,WAAW;AACxB,UAAM,iBAAiB,KAAK,eAAe,IAAI,SAAS,KAAK;AAC7D,SAAK,eAAe,OAAO,SAAS;AAEpC,QAAI,CAAC,KAAK,eAAe,MAAM;AAC7B,WAAK,iBAAiB;AAAA,IACxB;AAGA,QAAI,cAAc,KAAK,4BAA4B;AACjD,WAAK,6BAA6B;AAAA,IACpC;AACA,cAAU,QAAQ;AAClB,QAAI,mBAAmB,MAAM;AAC3B,gBAAU,QAAQ,oBAAoB,iBAAiB,eAAe,eAAe;AACrF,gBAAU,QAAQ,oBAAoB,oBAAoB,eAAe,kBAAkB;AAAA,IAC7F;AACA,cAAU,QAAQ,OAAO;AAAA,EAC3B;AAAA;AAAA,EAEA,aAAa,OAAO;AAGlB,UAAM,kBAAkB,gCAAgC,KAAK;AAC7D,UAAM,mBAAmB,KAAK,wBAAwB,KAAK,IAAI,IAAI,KAAK,uBAAuB;AAC/F,QAAI,CAAC,KAAK,QAAQ,kBAAkB,CAAC,mBAAmB,CAAC,kBAAkB;AACzE,WAAK,iBAAiB;AACtB,WAAK,aAAa,MAAM,SAAS,MAAM,SAAS,KAAK,QAAQ,YAAY;AAAA,IAC3E;AAAA,EACF;AAAA;AAAA,EAEA,cAAc,OAAO;AACnB,QAAI,CAAC,KAAK,QAAQ,kBAAkB,CAAC,iCAAiC,KAAK,GAAG;AAI5E,WAAK,uBAAuB,KAAK,IAAI;AACrC,WAAK,iBAAiB;AAGtB,YAAM,UAAU,MAAM;AAGtB,UAAI,SAAS;AACX,iBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,eAAK,aAAa,QAAQ,CAAC,EAAE,SAAS,QAAQ,CAAC,EAAE,SAAS,KAAK,QAAQ,YAAY;AAAA,QACrF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA,EAEA,eAAe;AACb,QAAI,CAAC,KAAK,gBAAgB;AACxB;AAAA,IACF;AACA,SAAK,iBAAiB;AAEtB,SAAK,kBAAkB,EAAE,QAAQ,YAAU;AAGzC,YAAM,YAAY,OAAO,UAAU,KAA+B,OAAO,OAAO,wBAAwB,OAAO,UAAU;AACzH,UAAI,CAAC,OAAO,OAAO,cAAc,WAAW;AAC1C,eAAO,QAAQ;AAAA,MACjB;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,oBAAoB;AAClB,WAAO,MAAM,KAAK,KAAK,eAAe,KAAK,CAAC;AAAA,EAC9C;AAAA;AAAA,EAEA,uBAAuB;AACrB,UAAM,UAAU,KAAK;AACrB,QAAI,SAAS;AACX,wBAAkB,QAAQ,UAAQ,gBAAe,cAAc,cAAc,MAAM,SAAS,IAAI,CAAC;AACjG,UAAI,KAAK,4BAA4B;AACnC,wBAAgB,QAAQ,UAAQ,QAAQ,oBAAoB,MAAM,MAAM,4BAA4B,CAAC;AAAA,MACvG;AAAA,IACF;AAAA,EACF;AACF;AAvSI,gBAAK,gBAA6B,oBAAI,mBAAmB;AAF7D,IAAM,iBAAN;AA6SA,SAAS,yBAAyB,GAAG,GAAG,MAAM;AAC5C,QAAM,QAAQ,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,GAAG,KAAK,IAAI,IAAI,KAAK,KAAK,CAAC;AACxE,QAAM,QAAQ,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,GAAG,GAAG,KAAK,IAAI,IAAI,KAAK,MAAM,CAAC;AACxE,SAAO,KAAK,KAAK,QAAQ,QAAQ,QAAQ,KAAK;AAChD;;;ACjHA,IAAI,mBAAiC,uBAAM;AACzC,QAAM,oBAAN,MAAM,kBAAiB;AAAA,EAgBvB;AAdI,oBAAK,YAAO,SAAS,yBAAyB,GAAG;AAC/C,WAAO,KAAK,KAAK,mBAAkB;AAAA,EACrC;AAGA,oBAAK,YAAsB,gBAAG,2BAAiB;AAAA,IAC7C,MAAM;AAAA,EACR,CAAC;AAGD,oBAAK,YAAsB,gBAAG,2BAAiB;AAAA,IAC7C,SAAS,CAAC,iBAAiB,qBAAqB,qBAAqB,eAAe;AAAA,EACtF,CAAC;AAdL,MAAMC,oBAAN;AAiBA,SAAOA;AACT,GAAG;;;ACrpCH,IAAMC,UAAiB;;;EAGrB;IAAEC,MAAM;IAAMC,YAAY;EAAQ;AAAC;AAWrC,IAAaC,mBAAgB,uBAAA;AAAvB,QAAOA,oBAAP,MAAOA,kBAAgB;;;qBAAhBA,mBAAgB;EAAA;;UAAhBA;EAAgB,CAAA;;cAN1BC,aAAaC,QAAQL,OAAM,GAC5BM,mBACAC,oBACAC,kBACUJ,YAAY;EAAA,CAAA;AAElB,MAAOD,oBAAP;SAAOA;AAAgB,GAAA;;;ACf7B,IAAaM,eAAY,uBAAA;AAAnB,QAAOA,gBAAP,MAAOA,cAAY;IALzBC,cAAA;AAME,WAAAC,QAAQ;;;;qBADGF,eAAY;EAAA;;UAAZA;IAAYG,WAAA,CAAA,CAAA,UAAA,CAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,UAAA,SAAAC,sBAAAC,IAAAC,KAAA;AAAA,UAAAD,KAAA,GAAA;ACPzBE,QAAAC,oBAAA,GAAA,eAAA;;;;;;ADOM,MAAOX,gBAAP;SAAOA;AAAY,GAAA;;;AEsBzB,IAAaY,gBAAa,uBAAA;AAApB,QAAOA,iBAAP,MAAOA,eAAa;;;qBAAbA,gBAAa;EAAA;;UAAbA;EAAa,CAAA;;cAVtBC,cACAC,gBAAgB;EAAA,CAAA;AASd,MAAOF,iBAAP;SAAOA;AAAa,GAAA;;;AC2E1B,IAAaG,cAAW,uBAAA;AAAlB,QAAOA,eAAP,MAAOA,aAAW;;;qBAAXA,cAAW;EAAA;;UAAXA;EAAW,CAAA;;cAPpBC,cACAC,cACAC,eACAC,aACAC,mBAAmB;EAAA,CAAA;AAGjB,MAAOL,eAAP;SAAOA;AAAW,GAAA;;;ACpEtB,IAAaM,aAAU,uBAAA;AAAjB,QAAOA,cAAP,MAAOA,YAAU;;;qBAAVA,aAAU;EAAA;;UAAVA;EAAU,CAAA;;cAPnBC,cACAC,cACAC,aACAC,qBACAC,gBAAgB;EAAA,CAAA;AAGd,MAAOL,cAAP;SAAOA;AAAU,GAAA;;;ACSzB,IAAaM,YAAS,uBAAA;AAAhB,QAAOA,aAAP,MAAOA,WAAS;;;qBAATA,YAAS;EAAA;;UAATA;IAASC,WAAA,CAFRC,YAAY;EAAA,CAAA;;eAHb,CACTC,uBAAsB,CAAE;IACzBC,SAAA,CAZCC,eACAC,kBACAC,aACAC,YACAC,yBACAC,cACAC,eACAC,aACAC,mBAAmB;EAAA,CAAA;AAOjB,MAAOb,aAAP;SAAOA;AAAS,GAAA;;;AChCtB,IAAac,kBAAe,uBAAA;AAAtB,QAAOA,mBAAP,MAAOA,iBAAe;;;qBAAfA,kBAAe;EAAA;;UAAfA;IAAeC,WAAA,CAFdC,YAAY;EAAA,CAAA;;cAHtBC,WACAC,YAAY;EAAA,CAAA;AAIV,MAAOJ,mBAAP;SAAOA;AAAe,GAAA;","names":["r","o","_getPrototypeOf","_setPrototypeOf","p","_construct","Parent","args","Class","self","_get","focusPreviousActiveElement","restoreActiveElement","capitalizeFirstLetter","warn","error","warnOnce","warnAboutDeprecation","callIfFunction","hasToPromiseFn","asPromise","isPromise","getContainer","elementBySelector","elementByClass","getPopup","getIcon","getIconContent","getTitle","getHtmlContainer","getImage","getProgressSteps","getValidationMessage","getConfirmButton","getCancelButton","getDenyButton","getInputLabel","getLoader","getActions","getFooter","getTimerProgressBar","getCloseButton","getFocusableElements","isModal","isToast","isLoading","setInnerHtml","hasClass","removeCustomClasses","applyCustomClass","getInput","focusInput","toggleClass","addClass","removeClass","getDirectChildByClass","applyNumericalStyle","show","hide","showWhenInnerHtmlPresent","setStyle","toggle","isVisible","allButtonsAreHidden","isScrollable","hasCssAnimation","animateTimerProgressBar","stopTimerProgressBar","isNodeEnv","resetOldContainer","resetValidationMessage","addInputChangeListeners","getTarget","setupAccessibility","setupRTL","init","parseHtmlToContainer","handleObject","handleJqueryElem","renderActions","renderCloseButton","renderContainer","renderInput","showInput","removeAttributes","setAttributes","setCustomClass","setInputPlaceholder","setInputLabel","getInputContainer","checkAndSetInputValue","getMargin","textareaResizeHandler","renderContent","renderFooter","renderIcon","applyStyles","adjustSuccessIconBackgroundColor","setContent","setColor","iconContent","renderImage","renderPopup","addClasses","renderProgressSteps","createStepElement","createLineElement","renderTitle","render","clickConfirm","clickDeny","clickCancel","removeKeydownHandler","globalState","addKeydownHandler","setFocus","keydownHandler","handleEnter","handleTab","handleArrows","handleEsc","setAriaHidden","unsetAriaHidden","iOSfix","lockBodyScroll","shouldPreventTouchMove","isStylus","isZoom","undoIOSfix","measureScrollbar","replaceScrollbarWithPadding","undoReplaceScrollbarWithPadding","triggerClosePopup","rejectPromise","handleAwaitingPromise","prepareResolveValue","handlePopupAnimation","animatePopup","triggerDidCloseAndDispose","showLoading","Swal","replaceButton","handleInputOptionsAndValue","getInputValue","getCheckboxValue","getRadioValue","getFileValue","handleInputOptions","processInputOptions","handleInputValue","renderOption","formatInputOptions","isSelected","handleConfirmButtonClick","handleDenyButtonClick","handleCancelButtonClick","handleConfirmOrDenyWithInput","handleInputValidator","deny","succeedWith","rejectWith","confirm","showRelatedButton","isValidParameter","isUpdatableParameter","isDeprecatedParameter","checkIfParamIsValid","checkIfToastParamIsValid","checkIfParamIsDeprecated","showWarningsForParams","filterValidParams","disposeSwal","disposeWeakMaps","unsetWeakMaps","handlePopupClick","handleToastClick","isAnyButtonShown","handleModalMousedown","handleContainerMousedown","handleModalClick","isJqueryElement","isElement","argsToParams","_this","MixinSwal","getTimerLeft","stopTimer","resumeTimer","toggleTimer","increaseTimer","isTimerRunning","bodyClickListener","Timer","getTemplateParams","getSwalParams","getSwalFunctionParams","getSwalButtons","getSwalImage","getSwalIcon","getSwalInput","getSwalStringParams","showWarningsForElements","showWarningsForAttributes","openPopup","swalOpenAnimationFinished","setScrollingVisibility","fixScrollContainer","SweetAlert","swalPromise","dismissWith","prepareParams","populateDomCache","setupTimer","initFocus","focusButton","blurActiveElement","e","AuthLayoutComponent","selectors","decls","vars","template","AuthLayoutComponent_Template","rf","ctx","i0","ɵɵelement","BaseControlValueAccessor","BuiltInControlValueAccessor","CheckboxControlValueAccessor","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","acc","NgForm","FormControl","AbstractFormGroupDirective","ɵNgNoValidate","RadioControlRegistryModule","FormGroupDirective","FormGroupName","FormArrayName","FormControlName","ɵInternalFormsSharedModule","FormBuilder","FormsModule","ReactiveFormsModule","environment","production","base_url","AuthService","constructor","http","httpOptions","headers","HttpHeaders","handleError","error","ErrorEvent","console","log","message","status","throwError","login","formData","post","environment","base_url","pipe","tap","res","localStorage","setItem","rol","registro","validarToken","token","getItem","of","get","map","resp","catchError","err","warn","ɵɵinject","HttpClient","factory","ɵfac","providedIn","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","fb","authService","router","sendForm","form","group","Usuario","localStorage","getItem","Validators","required","Contraseña","Remember","ngOnInit","login","console","log","valid","formData","value","subscribe","response","setItem","token","get","removeItem","rol","navigate","error","Swal","fire","msg","validarLogin","campo","ɵɵdirectiveInject","FormBuilder","AuthService","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","LoginComponent_p_16_Template","LoginComponent_p_21_Template","ɵɵlistener","LoginComponent_Template_button_click_29_listener","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0","_c1","RecoveryComponent","selectors","decls","vars","consts","template","RecoveryComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","import_sweetalert2","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","RegistroComponent","constructor","fb","authService","router","sendForm","form","group","Nombre","Validators","required","Email","email","Contraseña","Calle","CP","Localidad","Provincia","ngOnInit","registro","valid","console","log","value","subscribe","response","navigate","error","Swal","fire","message","validarRegistro","campo","get","ɵɵdirectiveInject","FormBuilder","AuthService","Router","selectors","decls","vars","consts","template","RegistroComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","RegistroComponent_p_16_Template","RegistroComponent_p_21_Template","RegistroComponent_p_26_Template","RegistroComponent_p_31_Template","RegistroComponent_p_36_Template","RegistroComponent_p_41_Template","RegistroComponent_p_46_Template","ɵɵlistener","RegistroComponent_Template_button_click_47_listener","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0","_c1","InicioComponent","selectors","decls","vars","consts","template","InicioComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","routes","path","component","AuthLayoutComponent","children","LoginComponent","redirectTo","RecoveryComponent","RegistroComponent","InicioComponent","AuthRoutingModule","RouterModule","forChild","AuthGuard","constructor","authService","router","canActivate","next","state","validarToken","pipe","tap","resp","navigateByUrl","ɵɵinject","AuthService","Router","factory","ɵfac","providedIn","CentrosComponent","selectors","decls","vars","consts","template","CentrosComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","SidebarService","constructor","menuAdmin","titulo","icono","url","menuAlumno","menuProfesor","menuCentro","getmenu","rol","localStorage","getItem","factory","ɵfac","providedIn","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","item_r1","url","ɵɵclassMap","icono","ɵɵtextInterpolate","titulo","SidebarComponent","constructor","sidebar","menu","ngOnInit","getmenu","console","log","ɵɵdirectiveInject","SidebarService","selectors","decls","vars","consts","template","SidebarComponent_Template","rf","ctx","ɵɵtemplate","SidebarComponent_li_15_Template","NavbarComponent","selectors","decls","vars","consts","template","NavbarComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","AdminLayoutComponent","selectors","decls","vars","consts","template","AdminLayoutComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","import_sweetalert2","AlumnoService","constructor","http","basePath","environment","base_url","getHeader","httpOptions","headers","addToken","getToken","token","localStorage","getItem","HttpHeaders","getAlumnos","get","deleteAlumno","id","delete","postAlumno","formData","post","putAlumno","put","ID_Alumno","ɵɵinject","HttpClient","factory","ɵfac","providedIn","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","CrearAlumnosComponent","constructor","fb","alumnoService","router","sendForm","form","group","Nombre","Validators","required","Apellidos","Contraseña","FechaNacimiento","ID_Clase","crearAlumno","valid","console","log","postAlumno","value","subscribe","response","navigate","error","Swal","fire","message","validarForm","campo","get","ɵɵdirectiveInject","FormBuilder","AlumnoService","Router","selectors","decls","vars","consts","template","CrearAlumnosComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","CrearAlumnosComponent_p_16_Template","CrearAlumnosComponent_p_21_Template","CrearAlumnosComponent_p_26_Template","CrearAlumnosComponent_p_31_Template","CrearAlumnosComponent_p_36_Template","ɵɵlistener","CrearAlumnosComponent_Template_button_click_37_listener","ɵɵadvance","ɵɵproperty","import_sweetalert2","CentroService","constructor","http","basePath","environment","base_url","getHeader","httpOptions","headers","addToken","getToken","token","localStorage","getItem","HttpHeaders","getCentros","get","deleteCentro","id","delete","postCentro","formData","post","putCentro","put","ID_Centro","ɵɵinject","HttpClient","factory","ɵfac","providedIn","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","CrearCentrosComponent","constructor","fb","centroService","router","sendForm","form","group","Nombre","Validators","required","Email","email","Contraseña","Calle","CP","Localidad","Provincia","crearCentro","valid","console","log","postCentro","value","subscribe","response","navigate","error","Swal","fire","message","validarForm","campo","get","ɵɵdirectiveInject","FormBuilder","CentroService","Router","selectors","decls","vars","consts","template","CrearCentrosComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","CrearCentrosComponent_p_16_Template","CrearCentrosComponent_p_21_Template","CrearCentrosComponent_p_26_Template","CrearCentrosComponent_p_31_Template","CrearCentrosComponent_p_36_Template","CrearCentrosComponent_p_41_Template","CrearCentrosComponent_p_46_Template","ɵɵlistener","CrearCentrosComponent_Template_button_click_47_listener","ɵɵadvance","ɵɵproperty","import_sweetalert2","ClaseService","constructor","http","basePath","environment","base_url","getHeader","httpOptions","headers","addToken","getToken","token","localStorage","getItem","HttpHeaders","getClases","get","deleteClase","id","delete","postClase","formData","post","putClase","put","ID_Clase","ɵɵinject","HttpClient","factory","ɵfac","providedIn","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","CrearClasesComponent","constructor","fb","claseService","router","sendForm","form","group","Nombre","Validators","required","ID_Centro","NumAlumnos","crearClase","valid","console","log","postClase","value","subscribe","response","navigate","error","Swal","fire","message","validarForm","campo","get","ɵɵdirectiveInject","FormBuilder","ClaseService","Router","selectors","decls","vars","consts","template","CrearClasesComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","CrearClasesComponent_p_16_Template","CrearClasesComponent_p_21_Template","CrearClasesComponent_p_26_Template","ɵɵlistener","CrearClasesComponent_Template_button_click_27_listener","ɵɵadvance","ɵɵproperty","import_sweetalert2","ProfesorService","constructor","http","basePath","environment","base_url","getHeader","httpOptions","headers","addToken","getToken","token","localStorage","getItem","HttpHeaders","getProfesores","get","deleteProfesor","id","delete","postProfesor","formData","post","putProfesor","put","ID_Profesor","ɵɵinject","HttpClient","factory","ɵfac","providedIn","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","CrearProfesoresComponent","constructor","fb","profesorService","router","sendForm","form","group","Nombre","Validators","required","Apellidos","Email","email","Contraseña","ID_Centro","ID_Clase","crearProfesor","valid","console","log","postProfesor","value","subscribe","response","navigate","error","Swal","fire","message","validarForm","campo","get","ɵɵdirectiveInject","FormBuilder","ProfesorService","Router","selectors","decls","vars","consts","template","CrearProfesoresComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","CrearProfesoresComponent_p_16_Template","CrearProfesoresComponent_p_21_Template","CrearProfesoresComponent_p_26_Template","CrearProfesoresComponent_p_31_Template","CrearProfesoresComponent_p_36_Template","CrearProfesoresComponent_p_41_Template","ɵɵlistener","CrearProfesoresComponent_Template_button_click_42_listener","ɵɵadvance","ɵɵproperty","import_sweetalert2","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","VerAlumnosComponent_tbody_27_Template_button_click_15_listener","restoredCtx","ɵɵrestoreView","_r3","alumno_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","editarAlumno","VerAlumnosComponent_tbody_27_Template_button_click_17_listener","ctx_r4","eliminarAlumno","ID_Alumno","ɵɵadvance","ɵɵtextInterpolate","Nombre","Apellidos","Usuario","FechaNacimiento","NomClase","NomCentro","VerAlumnosComponent","constructor","alumnoService","router","alumnosData","ngAfterViewInit","tryLocalStorage","getAlumnos","subscribe","res","console","log","id","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","deleteAlumno","alumno","navigate","state","ɵɵdirectiveInject","AlumnoService","Router","selectors","decls","vars","consts","template","VerAlumnosComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","VerAlumnosComponent_tbody_27_Template","ɵɵproperty","alumnos","import_sweetalert2","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","VerCentrosComponent_tbody_26_Template_button_click_15_listener","restoredCtx","ɵɵrestoreView","_r3","centro_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","editarCentro","VerCentrosComponent_tbody_26_Template_button_click_17_listener","ctx_r4","eliminarCentro","ID_Centro","ɵɵadvance","ɵɵtextInterpolate","Nombre","Email","Localidad","Provincia","Calle","CP","VerCentrosComponent","constructor","centroService","router","centrosData","ngAfterViewInit","tryLocalStorage","getCentros","subscribe","res","id","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","deleteCentro","centro","navigate","state","ɵɵdirectiveInject","CentroService","Router","selectors","decls","vars","consts","template","VerCentrosComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","VerCentrosComponent_tbody_26_Template","ɵɵproperty","centros","import_sweetalert2","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","VerClasesComponent_tbody_21_Template_button_click_9_listener","restoredCtx","ɵɵrestoreView","_r3","clase_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","editarClase","VerClasesComponent_tbody_21_Template_button_click_11_listener","ctx_r4","eliminarClase","ID_Clase","ɵɵadvance","ɵɵtextInterpolate","Nombre","NumAlumnos","NomCentro","VerClasesComponent","constructor","claseService","router","clasesData","ngAfterViewInit","tryLocalStorage","getClases","subscribe","res","id","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","deleteClase","clase","navigate","state","ɵɵdirectiveInject","ClaseService","Router","selectors","decls","vars","consts","template","VerClasesComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","VerClasesComponent_tbody_21_Template","ɵɵproperty","clases","import_sweetalert2","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","VerProfesoresComponent_tbody_25_Template_button_click_13_listener","restoredCtx","ɵɵrestoreView","_r3","profesor_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","editarProfesor","VerProfesoresComponent_tbody_25_Template_button_click_15_listener","ctx_r4","eliminarProfesor","ID_Profesor","ɵɵadvance","ɵɵtextInterpolate","Nombre","Apellidos","Email","NomCentro","NomClase","VerProfesoresComponent","constructor","profesorService","router","profesoresData","ngAfterViewInit","tryLocalStorage","getProfesores","subscribe","res","id","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","deleteProfesor","profesor","navigate","state","ɵɵdirectiveInject","ProfesorService","Router","selectors","decls","vars","consts","template","VerProfesoresComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","VerProfesoresComponent_tbody_25_Template","ɵɵproperty","profesores","AdmindashboardComponent","selectors","decls","vars","consts","template","AdmindashboardComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","import_sweetalert2","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","VerAlumnosCComponent_tbody_27_Template_button_click_17_listener","restoredCtx","ɵɵrestoreView","_r3","alumno_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","eliminarAlumno","ID_Alumno","ɵɵadvance","ɵɵtextInterpolate","Nombre","Apellidos","Usuario","FechaNacimiento","NomClase","NomCentro","VerAlumnosCComponent","constructor","alumnoService","alumnosData","ngAfterViewInit","tryLocalStorage","getAlumnos","subscribe","res","console","log","id","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","deleteAlumno","ɵɵdirectiveInject","AlumnoService","selectors","decls","vars","consts","template","VerAlumnosCComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","VerAlumnosCComponent_tbody_27_Template","ɵɵproperty","alumnos","import_sweetalert2","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","VerProfesoresCComponent_tbody_25_Template_button_click_15_listener","restoredCtx","ɵɵrestoreView","_r3","profesor_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","eliminarProfesor","ID_Profesor","ɵɵadvance","ɵɵtextInterpolate","Nombre","Apellidos","Email","NomCentro","NomClase","VerProfesoresCComponent","constructor","profesorService","profesoresData","ngAfterViewInit","tryLocalStorage","getProfesores","subscribe","res","id","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","deleteProfesor","console","log","ɵɵdirectiveInject","ProfesorService","selectors","decls","vars","consts","template","VerProfesoresCComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","VerProfesoresCComponent_tbody_25_Template","ɵɵproperty","profesores","import_sweetalert2","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","VerClasesCComponent_tbody_21_Template_button_click_11_listener","restoredCtx","ɵɵrestoreView","_r3","clase_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","eliminarClase","ID_Clase","ɵɵadvance","ɵɵtextInterpolate","Nombre","NumAlumnos","NomCentro","VerClasesCComponent","constructor","claseService","clasesData","ngAfterViewInit","tryLocalStorage","getClases","subscribe","res","id","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","deleteClase","ɵɵdirectiveInject","ClaseService","selectors","decls","vars","consts","template","VerClasesCComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","VerClasesCComponent_tbody_21_Template","ɵɵproperty","clases","CrearAlumnosCComponent","selectors","decls","vars","consts","template","CrearAlumnosCComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","CrearProfesoresCComponent","selectors","decls","vars","consts","template","CrearProfesoresCComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","CrearClasesCComponent","selectors","decls","vars","consts","template","CrearClasesCComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","EditarAlumnosComponent","constructor","fb","alumnoService","router","activatedRoute","alumnosData","form","group","ID_Alumno","Nombre","Apellidos","Usuario","FechaNacimiento","ID_Clase","ngOnInit","paramMap","subscribe","params","history","state","alumno","patchValue","actualizarAlumno","valid","console","log","putAlumno","value","response","navigate","ɵɵdirectiveInject","FormBuilder","AlumnoService","Router","ActivatedRoute","selectors","decls","vars","consts","template","EditarAlumnosComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","EditarAlumnosComponent_Template_button_click_32_listener","ɵɵadvance","ɵɵproperty","EditarCentrosComponent","constructor","fb","centroService","router","activatedRoute","centrosData","form","group","ID_Centro","Nombre","Email","Validators","email","Calle","CP","Localidad","Provincia","ngOnInit","paramMap","subscribe","params","history","state","centro","patchValue","actualizarCentro","valid","console","log","putCentro","value","response","navigate","ɵɵdirectiveInject","FormBuilder","CentroService","Router","ActivatedRoute","selectors","decls","vars","consts","template","EditarCentrosComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","EditarCentrosComponent_Template_button_click_36_listener","ɵɵadvance","ɵɵproperty","EditarClasesComponent","constructor","fb","claseService","router","activatedRoute","clasesData","form","group","ID_Clase","Nombre","ID_Centro","NumAlumnos","ngOnInit","paramMap","subscribe","params","history","state","clase","patchValue","actualizarClase","valid","console","log","putClase","value","response","navigate","ɵɵdirectiveInject","FormBuilder","ClaseService","Router","ActivatedRoute","selectors","decls","vars","consts","template","EditarClasesComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","EditarClasesComponent_Template_button_click_24_listener","ɵɵadvance","ɵɵproperty","EditarProfesoresComponent","constructor","fb","profesorService","router","activatedRoute","profesoresData","form","group","ID_Profesor","Nombre","Apellidos","Email","Validators","email","ID_Centro","ID_Clase","ngOnInit","paramMap","subscribe","params","history","state","profesor","patchValue","actualizarProfesor","valid","console","log","putProfesor","value","response","navigate","ɵɵdirectiveInject","FormBuilder","ProfesorService","Router","ActivatedRoute","selectors","decls","vars","consts","template","EditarProfesoresComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","EditarProfesoresComponent_Template_button_click_32_listener","ɵɵadvance","ɵɵproperty","import_sweetalert2","ProfesoresComponent","constructor","profesorService","profesoresData","ngAfterViewInit","tryLocalStorage","getProfesores","subscribe","res","eliminarProfesor","id","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","deleteProfesor","ɵɵdirectiveInject","ProfesorService","selectors","decls","vars","consts","template","ProfesoresComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","VerClasesPComponent","selectors","decls","vars","consts","template","VerClasesPComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","VerPerfilAlumnoComponent","selectors","decls","vars","consts","template","VerPerfilAlumnoComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ActividadRecienteComponent","selectors","decls","vars","consts","template","ActividadRecienteComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","VerAlumnosPComponent","selectors","decls","vars","consts","template","VerAlumnosPComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","EditarAlumnosCComponent","selectors","decls","vars","consts","template","EditarAlumnosCComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","EditarProfesoresCComponent","selectors","decls","vars","consts","template","EditarProfesoresCComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","EditarClasesCComponent","selectors","decls","vars","consts","template","EditarClasesCComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","AlumnoLayoutComponent","selectors","decls","vars","consts","template","AlumnoLayoutComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","AlumnosComponent","selectors","decls","vars","consts","template","AlumnosComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","routes","path","component","AdminLayoutComponent","canActivate","AuthGuard","children","AdmindashboardComponent","VerAlumnosComponent","VerCentrosComponent","VerClasesComponent","VerProfesoresComponent","CrearAlumnosComponent","CrearCentrosComponent","CrearClasesComponent","CrearProfesoresComponent","EditarAlumnosComponent","EditarCentrosComponent","EditarClasesComponent","EditarProfesoresComponent","redirectTo","CentrosComponent","VerAlumnosCComponent","VerProfesoresCComponent","VerClasesCComponent","CrearAlumnosCComponent","CrearProfesoresCComponent","CrearClasesCComponent","EditarAlumnosCComponent","EditarProfesoresCComponent","EditarClasesCComponent","ProfesoresComponent","VerClasesPComponent","VerPerfilAlumnoComponent","ActividadRecienteComponent","VerAlumnosPComponent","AlumnoLayoutComponent","AlumnosComponent","PagesRoutingModule","RouterModule","forChild","Platform","BidiModule","CdkScrollableModule","MediaMatcher","BreakpointObserver","document","HighContrastModeDetector","VERSION","MatCommonModule","VERSION","MatSidenavModule","routes","path","redirectTo","AppRoutingModule","RouterModule","forRoot","AuthRoutingModule","PagesRoutingModule","MatSidenavModule","AppComponent","constructor","title","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelement","CommonsModule","CommonModule","AppRoutingModule","PagesModule","CommonModule","RouterModule","CommonsModule","FormsModule","ReactiveFormsModule","AuthModule","CommonModule","RouterModule","FormsModule","ReactiveFormsModule","HttpClientModule","AppModule","bootstrap","AppComponent","provideClientHydration","imports","BrowserModule","AppRoutingModule","PagesModule","AuthModule","BrowserAnimationsModule","CommonModule","CommonsModule","FormsModule","ReactiveFormsModule","AppServerModule","bootstrap","AppComponent","AppModule","ServerModule"],"x_google_ignoreList":[0,3,88,89,90,91,92,93,94,95,96]}